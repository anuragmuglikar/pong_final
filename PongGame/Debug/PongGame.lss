
PongGame.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000004ec  00800100  000022f6  0000238a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000022f6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  008005ec  008005ec  00002876  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002876  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000028d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d8  00000000  00000000  00002914  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003356  00000000  00000000  00002aec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000df6  00000000  00000000  00005e42  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001402  00000000  00000000  00006c38  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000694  00000000  00000000  0000803c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000944  00000000  00000000  000086d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000219a  00000000  00000000  00009014  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  0000b1ae  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b2 02 	jmp	0x564	; 0x564 <__ctors_end>
       4:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
       8:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
       c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      10:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      14:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      18:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      1c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      20:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      24:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      28:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      2c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      30:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      34:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      38:	0c 94 16 06 	jmp	0xc2c	; 0xc2c <__vector_14>
      3c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      40:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      44:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      48:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      4c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      50:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      54:	0c 94 7c 03 	jmp	0x6f8	; 0x6f8 <__vector_21>
      58:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      5c:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      60:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>
      64:	0c 94 cf 02 	jmp	0x59e	; 0x59e <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 00       	nop
      6c:	00 7c       	andi	r16, 0xC0	; 192
      6e:	da f2       	brmi	.-74     	; 0x26 <__FUSE_REGION_LENGTH__+0x23>
      70:	da 7c       	andi	r29, 0xCA	; 202
      72:	7c d6       	rcall	.+3320   	; 0xd6c <write_buffer+0x30>
      74:	f2 d6       	rcall	.+3556   	; 0xe5a <setpixel+0x56>
      76:	7c 38       	cpi	r23, 0x8C	; 140
      78:	7c 3e       	cpi	r23, 0xEC	; 236
      7a:	7c 38       	cpi	r23, 0x8C	; 140
      7c:	18 3c       	cpi	r17, 0xC8	; 200
      7e:	7e 3c       	cpi	r23, 0xCE	; 206
      80:	18 38       	cpi	r17, 0x88	; 136
      82:	ea be       	out	0x3a, r14	; 58
      84:	ea 38       	cpi	r30, 0x8A	; 138
      86:	38 7a       	andi	r19, 0xA8	; 168
      88:	fe 7a       	andi	r31, 0xAE	; 174
      8a:	38 00       	.word	0x0038	; ????
      8c:	18 3c       	cpi	r17, 0xC8	; 200
      8e:	18 00       	.word	0x0018	; ????
      90:	ff e7       	ldi	r31, 0x7F	; 127
      92:	c3 e7       	ldi	r28, 0x73	; 115
      94:	ff 00       	.word	0x00ff	; ????
      96:	18 24       	eor	r1, r8
      98:	18 00       	.word	0x0018	; ????
      9a:	ff e7       	ldi	r31, 0x7F	; 127
      9c:	db e7       	ldi	r29, 0x7B	; 123
      9e:	ff 0c       	add	r15, r15
      a0:	12 5c       	subi	r17, 0xC2	; 194
      a2:	60 70       	andi	r22, 0x00	; 0
      a4:	64 94       	.word	0x9464	; ????
      a6:	9e 94 64 02 	call	0x2404c8	; 0x2404c8 <__TEXT_REGION_LENGTH__+0x2204c8>
      aa:	fe a0       	ldd	r15, Y+38	; 0x26
      ac:	a0 e0       	ldi	r26, 0x00	; 0
      ae:	02 fe       	sbrs	r0, 2
      b0:	a0 a4       	ldd	r10, Z+40	; 0x28
      b2:	fc 5a       	subi	r31, 0xAC	; 172
      b4:	3c e7       	ldi	r19, 0x7C	; 124
      b6:	3c 5a       	subi	r19, 0xAC	; 172
      b8:	fe 7c       	andi	r31, 0xCE	; 206
      ba:	38 38       	cpi	r19, 0x88	; 136
      bc:	10 10       	cpse	r1, r0
      be:	38 38       	cpi	r19, 0x88	; 136
      c0:	7c fe       	.word	0xfe7c	; ????
      c2:	28 44       	sbci	r18, 0x48	; 72
      c4:	fe 44       	sbci	r31, 0x4E	; 78
      c6:	28 fa       	.word	0xfa28	; ????
      c8:	fa 00       	.word	0x00fa	; ????
      ca:	fa fa       	.word	0xfafa	; ????
      cc:	60 90 fe 80 	lds	r6, 0x80FE	; 0x8080fe <__bss_end+0x7afc>
      d0:	fe 00       	.word	0x00fe	; ????
      d2:	66 91       	elpm	r22, Z
      d4:	a9 56       	subi	r26, 0x69	; 105
      d6:	06 06       	cpc	r0, r22
      d8:	06 06       	cpc	r0, r22
      da:	06 29       	or	r16, r6
      dc:	45 ff       	sbrs	r20, 5
      de:	45 29       	or	r20, r5
      e0:	10 20       	and	r1, r0
      e2:	7e 20       	and	r7, r14
      e4:	10 08       	sbc	r1, r0
      e6:	04 7e       	andi	r16, 0xE4	; 228
      e8:	04 08       	sbc	r0, r4
      ea:	10 10       	cpse	r1, r0
      ec:	54 38       	cpi	r21, 0x84	; 132
      ee:	10 10       	cpse	r1, r0
      f0:	38 54       	subi	r19, 0x48	; 72
      f2:	10 10       	cpse	r1, r0
      f4:	78 08       	sbc	r7, r8
      f6:	08 08       	sbc	r0, r8
      f8:	08 30       	cpi	r16, 0x08	; 8
      fa:	78 30       	cpi	r23, 0x08	; 8
      fc:	78 30       	cpi	r23, 0x08	; 8
      fe:	0c 1c       	adc	r0, r12
     100:	7c 1c       	adc	r7, r12
     102:	0c 60       	ori	r16, 0x0C	; 12
     104:	70 7c       	andi	r23, 0xC0	; 192
     106:	70 60       	ori	r23, 0x00	; 0
     108:	00 00       	nop
     10a:	00 00       	nop
     10c:	00 00       	nop
     10e:	00 fa       	bst	r0, 0
     110:	00 00       	nop
     112:	00 e0       	ldi	r16, 0x00	; 0
     114:	00 e0       	ldi	r16, 0x00	; 0
     116:	00 28       	or	r0, r0
     118:	fe 28       	or	r15, r14
     11a:	fe 28       	or	r15, r14
     11c:	24 54       	subi	r18, 0x44	; 68
     11e:	fe 54       	subi	r31, 0x4E	; 78
     120:	48 c4       	rjmp	.+2192   	; 0x9b2 <waitForSpeedSelection+0x7e>
     122:	c8 10       	cpse	r12, r8
     124:	26 46       	sbci	r18, 0x66	; 102
     126:	6c 92       	st	X, r6
     128:	6a 04       	cpc	r6, r10
     12a:	0a 00       	.word	0x000a	; ????
     12c:	10 e0       	ldi	r17, 0x00	; 0
     12e:	c0 00       	.word	0x00c0	; ????
     130:	00 38       	cpi	r16, 0x80	; 128
     132:	44 82       	std	Z+4, r4	; 0x04
     134:	00 00       	nop
     136:	82 44       	sbci	r24, 0x42	; 66
     138:	38 00       	.word	0x0038	; ????
     13a:	54 38       	cpi	r21, 0x84	; 132
     13c:	fe 38       	cpi	r31, 0x8E	; 142
     13e:	54 10       	cpse	r5, r4
     140:	10 7c       	andi	r17, 0xC0	; 192
     142:	10 10       	cpse	r1, r0
     144:	00 01       	movw	r0, r0
     146:	0e 0c       	add	r0, r14
     148:	00 10       	cpse	r0, r0
     14a:	10 10       	cpse	r1, r0
     14c:	10 10       	cpse	r1, r0
     14e:	00 00       	nop
     150:	06 06       	cpc	r0, r22
     152:	00 04       	cpc	r0, r0
     154:	08 10       	cpse	r0, r8
     156:	20 40       	sbci	r18, 0x00	; 0
     158:	7c 8a       	std	Y+20, r7	; 0x14
     15a:	92 a2       	std	Z+34, r9	; 0x22
     15c:	7c 00       	.word	0x007c	; ????
     15e:	42 fe       	sbrs	r4, 2
     160:	02 00       	.word	0x0002	; ????
     162:	4e 92       	st	-X, r4
     164:	92 92       	st	-Z, r9
     166:	62 84       	ldd	r6, Z+10	; 0x0a
     168:	82 92       	st	-Z, r8
     16a:	b2 cc       	rjmp	.-1692   	; 0xfffffad0 <__eeprom_end+0xff7efad0>
     16c:	18 28       	or	r1, r8
     16e:	48 fe       	.word	0xfe48	; ????
     170:	08 e4       	ldi	r16, 0x48	; 72
     172:	a2 a2       	std	Z+34, r10	; 0x22
     174:	a2 9c       	mul	r10, r2
     176:	3c 52       	subi	r19, 0x2C	; 44
     178:	92 92       	st	-Z, r9
     17a:	8c 82       	std	Y+4, r8	; 0x04
     17c:	84 88       	ldd	r8, Z+20	; 0x14
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	6c 92       	st	X, r6
     182:	92 92       	st	-Z, r9
     184:	6c 62       	ori	r22, 0x2C	; 44
     186:	92 92       	st	-Z, r9
     188:	94 78       	andi	r25, 0x84	; 132
     18a:	00 00       	nop
     18c:	28 00       	.word	0x0028	; ????
     18e:	00 00       	nop
     190:	02 2c       	mov	r0, r2
     192:	00 00       	nop
     194:	00 10       	cpse	r0, r0
     196:	28 44       	sbci	r18, 0x48	; 72
     198:	82 28       	or	r8, r2
     19a:	28 28       	or	r2, r8
     19c:	28 28       	or	r2, r8
     19e:	00 82       	st	Z, r0
     1a0:	44 28       	or	r4, r4
     1a2:	10 40       	sbci	r17, 0x00	; 0
     1a4:	80 9a       	sbi	0x10, 0	; 16
     1a6:	90 60       	ori	r25, 0x00	; 0
     1a8:	7c 82       	std	Y+4, r7	; 0x04
     1aa:	ba 9a       	sbi	0x17, 2	; 23
     1ac:	72 3e       	cpi	r23, 0xE2	; 226
     1ae:	48 88       	ldd	r4, Y+16	; 0x10
     1b0:	48 3e       	cpi	r20, 0xE8	; 232
     1b2:	fe 92       	st	-X, r15
     1b4:	92 92       	st	-Z, r9
     1b6:	6c 7c       	andi	r22, 0xCC	; 204
     1b8:	82 82       	std	Z+2, r8	; 0x02
     1ba:	82 44       	sbci	r24, 0x42	; 66
     1bc:	fe 82       	std	Y+6, r15	; 0x06
     1be:	82 82       	std	Z+2, r8	; 0x02
     1c0:	7c fe       	.word	0xfe7c	; ????
     1c2:	92 92       	st	-Z, r9
     1c4:	92 82       	std	Z+2, r9	; 0x02
     1c6:	fe 90       	ld	r15, -X
     1c8:	90 90 80 7c 	lds	r9, 0x7C80	; 0x807c80 <__bss_end+0x767e>
     1cc:	82 82       	std	Z+2, r8	; 0x02
     1ce:	8a ce       	rjmp	.-748    	; 0xfffffee4 <__eeprom_end+0xff7efee4>
     1d0:	fe 10       	cpse	r15, r14
     1d2:	10 10       	cpse	r1, r0
     1d4:	fe 00       	.word	0x00fe	; ????
     1d6:	82 fe       	sbrs	r8, 2
     1d8:	82 00       	.word	0x0082	; ????
     1da:	04 02       	muls	r16, r20
     1dc:	82 fc       	sbrc	r8, 2
     1de:	80 fe       	sbrs	r8, 0
     1e0:	10 28       	or	r1, r0
     1e2:	44 82       	std	Z+4, r4	; 0x04
     1e4:	fe 02       	muls	r31, r30
     1e6:	02 02       	muls	r16, r18
     1e8:	02 fe       	sbrs	r0, 2
     1ea:	40 38       	cpi	r20, 0x80	; 128
     1ec:	40 fe       	sbrs	r4, 0
     1ee:	fe 20       	and	r15, r14
     1f0:	10 08       	sbc	r1, r0
     1f2:	fe 7c       	andi	r31, 0xCE	; 206
     1f4:	82 82       	std	Z+2, r8	; 0x02
     1f6:	82 7c       	andi	r24, 0xC2	; 194
     1f8:	fe 90       	ld	r15, -X
     1fa:	90 90 60 7c 	lds	r9, 0x7C60	; 0x807c60 <__bss_end+0x765e>
     1fe:	82 8a       	std	Z+18, r8	; 0x12
     200:	84 7a       	andi	r24, 0xA4	; 164
     202:	fe 90       	ld	r15, -X
     204:	98 94       	clz
     206:	62 64       	ori	r22, 0x42	; 66
     208:	92 92       	st	-Z, r9
     20a:	92 4c       	sbci	r25, 0xC2	; 194
     20c:	c0 80       	ld	r12, Z
     20e:	fe 80       	ldd	r15, Y+6	; 0x06
     210:	c0 fc       	sbrc	r12, 0
     212:	02 02       	muls	r16, r18
     214:	02 fc       	sbrc	r0, 2
     216:	f8 04       	cpc	r15, r8
     218:	02 04       	cpc	r0, r2
     21a:	f8 fc       	.word	0xfcf8	; ????
     21c:	02 1c       	adc	r0, r2
     21e:	02 fc       	sbrc	r0, 2
     220:	c6 28       	or	r12, r6
     222:	10 28       	or	r1, r0
     224:	c6 c0       	rjmp	.+396    	; 0x3b2 <__trampolines_end+0x34a>
     226:	20 1e       	adc	r2, r16
     228:	20 c0       	rjmp	.+64     	; 0x26a <__trampolines_end+0x202>
     22a:	86 9a       	sbi	0x10, 6	; 16
     22c:	92 b2       	in	r9, 0x12	; 18
     22e:	c2 00       	.word	0x00c2	; ????
     230:	fe 82       	std	Y+6, r15	; 0x06
     232:	82 82       	std	Z+2, r8	; 0x02
     234:	40 20       	and	r4, r0
     236:	10 08       	sbc	r1, r0
     238:	04 00       	.word	0x0004	; ????
     23a:	82 82       	std	Z+2, r8	; 0x02
     23c:	82 fe       	sbrs	r8, 2
     23e:	20 40       	sbci	r18, 0x00	; 0
     240:	80 40       	sbci	r24, 0x00	; 0
     242:	20 02       	muls	r18, r16
     244:	02 02       	muls	r16, r18
     246:	02 02       	muls	r16, r18
     248:	00 c0       	rjmp	.+0      	; 0x24a <__trampolines_end+0x1e2>
     24a:	e0 10       	cpse	r14, r0
     24c:	00 04       	cpc	r0, r0
     24e:	2a 2a       	or	r2, r26
     250:	1e 02       	muls	r17, r30
     252:	fe 14       	cp	r15, r14
     254:	22 22       	and	r2, r18
     256:	1c 1c       	adc	r1, r12
     258:	22 22       	and	r2, r18
     25a:	22 14       	cp	r2, r2
     25c:	1c 22       	and	r1, r28
     25e:	22 14       	cp	r2, r2
     260:	fe 1c       	adc	r15, r14
     262:	2a 2a       	or	r2, r26
     264:	2a 18       	sub	r2, r10
     266:	00 10       	cpse	r0, r0
     268:	7e 90       	ld	r7, -X
     26a:	40 18       	sub	r4, r0
     26c:	25 25       	eor	r18, r5
     26e:	39 1e       	adc	r3, r25
     270:	fe 10       	cpse	r15, r14
     272:	20 20       	and	r2, r0
     274:	1e 00       	.word	0x001e	; ????
     276:	22 be       	out	0x32, r2	; 50
     278:	02 00       	.word	0x0002	; ????
     27a:	04 02       	muls	r16, r20
     27c:	02 bc       	out	0x22, r0	; 34
     27e:	00 fe       	sbrs	r0, 0
     280:	08 14       	cp	r0, r8
     282:	22 00       	.word	0x0022	; ????
     284:	00 82       	st	Z, r0
     286:	fe 02       	muls	r31, r30
     288:	00 3e       	cpi	r16, 0xE0	; 224
     28a:	20 1e       	adc	r2, r16
     28c:	20 1e       	adc	r2, r16
     28e:	3e 10       	cpse	r3, r14
     290:	20 20       	and	r2, r0
     292:	1e 1c       	adc	r1, r14
     294:	22 22       	and	r2, r18
     296:	22 1c       	adc	r2, r2
     298:	3f 18       	sub	r3, r15
     29a:	24 24       	eor	r2, r4
     29c:	18 18       	sub	r1, r8
     29e:	24 24       	eor	r2, r4
     2a0:	18 3f       	cpi	r17, 0xF8	; 248
     2a2:	3e 10       	cpse	r3, r14
     2a4:	20 20       	and	r2, r0
     2a6:	10 12       	cpse	r1, r16
     2a8:	2a 2a       	or	r2, r26
     2aa:	2a 24       	eor	r2, r10
     2ac:	20 20       	and	r2, r0
     2ae:	fc 22       	and	r15, r28
     2b0:	24 3c       	cpi	r18, 0xC4	; 196
     2b2:	02 02       	muls	r16, r18
     2b4:	04 3e       	cpi	r16, 0xE4	; 228
     2b6:	38 04       	cpc	r3, r8
     2b8:	02 04       	cpc	r0, r2
     2ba:	38 3c       	cpi	r19, 0xC8	; 200
     2bc:	02 0c       	add	r0, r2
     2be:	02 3c       	cpi	r16, 0xC2	; 194
     2c0:	22 14       	cp	r2, r2
     2c2:	08 14       	cp	r0, r8
     2c4:	22 32       	cpi	r18, 0x22	; 34
     2c6:	09 09       	sbc	r16, r9
     2c8:	09 3e       	cpi	r16, 0xE9	; 233
     2ca:	22 26       	eor	r2, r18
     2cc:	2a 32       	cpi	r18, 0x2A	; 42
     2ce:	22 00       	.word	0x0022	; ????
     2d0:	10 6c       	ori	r17, 0xC0	; 192
     2d2:	82 00       	.word	0x0082	; ????
     2d4:	00 00       	nop
     2d6:	ee 00       	.word	0x00ee	; ????
     2d8:	00 00       	nop
     2da:	82 6c       	ori	r24, 0xC2	; 194
     2dc:	10 00       	.word	0x0010	; ????
     2de:	40 80       	ld	r4, Z
     2e0:	40 20       	and	r4, r0
     2e2:	40 3c       	cpi	r20, 0xC0	; 192
     2e4:	64 c4       	rjmp	.+2248   	; 0xbae <moveBall+0x9a>
     2e6:	64 3c       	cpi	r22, 0xC4	; 196
     2e8:	78 85       	ldd	r23, Y+8	; 0x08
     2ea:	85 86       	std	Z+13, r8	; 0x0d
     2ec:	48 5c       	subi	r20, 0xC8	; 200
     2ee:	02 02       	muls	r16, r18
     2f0:	04 5e       	subi	r16, 0xE4	; 228
     2f2:	1c 2a       	or	r1, r28
     2f4:	2a aa       	std	Y+50, r2	; 0x32
     2f6:	9a 84       	ldd	r9, Y+10	; 0x0a
     2f8:	aa aa       	std	Y+50, r10	; 0x32
     2fa:	9e 82       	std	Y+6, r9	; 0x06
     2fc:	84 2a       	or	r8, r20
     2fe:	2a 1e       	adc	r2, r26
     300:	82 84       	ldd	r8, Z+10	; 0x0a
     302:	aa 2a       	or	r10, r26
     304:	1e 02       	muls	r17, r30
     306:	04 2a       	or	r0, r20
     308:	aa 9e       	mul	r10, r26
     30a:	02 30       	cpi	r16, 0x02	; 2
     30c:	78 4a       	sbci	r23, 0xA8	; 168
     30e:	4e 48       	sbci	r20, 0x8E	; 142
     310:	9c aa       	std	Y+52, r9	; 0x34
     312:	aa aa       	std	Y+50, r10	; 0x32
     314:	9a 9c       	mul	r9, r10
     316:	2a 2a       	or	r2, r26
     318:	2a 9a       	sbi	0x05, 2	; 5
     31a:	9c aa       	std	Y+52, r9	; 0x34
     31c:	2a 2a       	or	r2, r26
     31e:	1a 00       	.word	0x001a	; ????
     320:	00 a2       	std	Z+32, r0	; 0x20
     322:	3e 82       	std	Y+6, r3	; 0x06
     324:	00 40       	sbci	r16, 0x00	; 0
     326:	a2 be       	out	0x32, r10	; 50
     328:	42 00       	.word	0x0042	; ????
     32a:	80 a2       	std	Z+32, r8	; 0x20
     32c:	3e 02       	muls	r19, r30
     32e:	0f 94 24 94 	call	0x32848	; 0x32848 <__TEXT_REGION_LENGTH__+0x12848>
     332:	0f 0f       	add	r16, r31
     334:	14 a4       	ldd	r1, Z+44	; 0x2c
     336:	14 0f       	add	r17, r20
     338:	3e 2a       	or	r3, r30
     33a:	aa a2       	std	Y+34, r10	; 0x22
     33c:	00 04       	cpc	r0, r0
     33e:	2a 2a       	or	r2, r26
     340:	3e 2a       	or	r3, r30
     342:	3e 50       	subi	r19, 0x0E	; 14
     344:	90 fe       	sbrs	r9, 0
     346:	92 4c       	sbci	r25, 0xC2	; 194
     348:	92 92       	st	-Z, r9
     34a:	92 4c       	sbci	r25, 0xC2	; 194
     34c:	4c 12       	cpse	r4, r28
     34e:	12 12       	cpse	r1, r18
     350:	4c 4c       	sbci	r20, 0xCC	; 204
     352:	52 12       	cpse	r5, r18
     354:	12 0c       	add	r1, r2
     356:	5c 82       	std	Y+4, r5	; 0x04
     358:	82 84       	ldd	r8, Z+10	; 0x0a
     35a:	5e 5c       	subi	r21, 0xCE	; 206
     35c:	42 02       	muls	r20, r18
     35e:	04 1e       	adc	r0, r20
     360:	00 b9       	out	0x00, r16	; 0
     362:	05 05       	cpc	r16, r5
     364:	be 9c       	mul	r11, r14
     366:	22 22       	and	r2, r18
     368:	22 9c       	mul	r2, r2
     36a:	bc 02       	muls	r27, r28
     36c:	02 02       	muls	r16, r18
     36e:	bc 3c       	cpi	r27, 0xCC	; 204
     370:	24 ff       	sbrs	r18, 4
     372:	24 24       	eor	r2, r4
     374:	12 7e       	andi	r17, 0xE2	; 226
     376:	92 c2       	rjmp	.+1316   	; 0x89c <waitForModeSelection+0x22>
     378:	66 d4       	rcall	.+2252   	; 0xc46 <__vector_14+0x1a>
     37a:	f4 3f       	cpi	r31, 0xF4	; 244
     37c:	f4 d4       	rcall	.+2536   	; 0xd66 <write_buffer+0x2a>
     37e:	ff 90       	pop	r15
     380:	94 6f       	ori	r25, 0xF4	; 244
     382:	04 03       	mulsu	r16, r20
     384:	11 7e       	andi	r17, 0xE1	; 225
     386:	90 c0       	rjmp	.+288    	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
     388:	04 2a       	or	r0, r20
     38a:	2a 9e       	mul	r2, r26
     38c:	82 00       	.word	0x0082	; ????
     38e:	00 22       	and	r0, r16
     390:	be 82       	std	Y+6, r11	; 0x06
     392:	0c 12       	cpse	r0, r28
     394:	12 52       	subi	r17, 0x22	; 34
     396:	4c 1c       	adc	r4, r12
     398:	02 02       	muls	r16, r18
     39a:	44 5e       	subi	r20, 0xE4	; 228
     39c:	00 5e       	subi	r16, 0xE0	; 224
     39e:	50 50       	subi	r21, 0x00	; 0
     3a0:	4e be       	out	0x3e, r4	; 62
     3a2:	b0 98       	cbi	0x16, 0	; 22
     3a4:	8c be       	out	0x3c, r8	; 60
     3a6:	64 94       	.word	0x9464	; ????
     3a8:	94 f4       	brge	.+36     	; 0x3ce <__trampolines_end+0x366>
     3aa:	14 64       	ori	r17, 0x44	; 68
     3ac:	94 94       	.word	0x9494	; ????
     3ae:	94 64       	ori	r25, 0x44	; 68
     3b0:	0c 12       	cpse	r0, r28
     3b2:	b2 02       	muls	r27, r18
     3b4:	04 1c       	adc	r0, r4
     3b6:	10 10       	cpse	r1, r0
     3b8:	10 10       	cpse	r1, r0
     3ba:	10 10       	cpse	r1, r0
     3bc:	10 10       	cpse	r1, r0
     3be:	1c f4       	brge	.+6      	; 0x3c6 <__trampolines_end+0x35e>
     3c0:	08 13       	cpse	r16, r24
     3c2:	35 5d       	subi	r19, 0xD5	; 213
     3c4:	f4 08       	sbc	r15, r4
     3c6:	14 2c       	mov	r1, r4
     3c8:	5f 00       	.word	0x005f	; ????
     3ca:	00 de       	rcall	.-1024   	; 0xffffffcc <__eeprom_end+0xff7effcc>
     3cc:	00 00       	nop
     3ce:	10 28       	or	r1, r0
     3d0:	54 28       	or	r5, r4
     3d2:	44 44       	sbci	r20, 0x44	; 68
     3d4:	28 54       	subi	r18, 0x48	; 72
     3d6:	28 10       	cpse	r2, r8
     3d8:	55 00       	.word	0x0055	; ????
     3da:	aa 00       	.word	0x00aa	; ????
     3dc:	55 55       	subi	r21, 0x55	; 85
     3de:	aa 55       	subi	r26, 0x5A	; 90
     3e0:	aa 55       	subi	r26, 0x5A	; 90
     3e2:	aa 55       	subi	r26, 0x5A	; 90
     3e4:	aa 55       	subi	r26, 0x5A	; 90
     3e6:	aa 00       	.word	0x00aa	; ????
     3e8:	00 00       	nop
     3ea:	ff 00       	.word	0x00ff	; ????
     3ec:	08 08       	sbc	r0, r8
     3ee:	08 ff       	.word	0xff08	; ????
     3f0:	00 28       	or	r0, r0
     3f2:	28 28       	or	r2, r8
     3f4:	ff 00       	.word	0x00ff	; ????
     3f6:	08 08       	sbc	r0, r8
     3f8:	ff 00       	.word	0x00ff	; ????
     3fa:	ff 08       	sbc	r15, r15
     3fc:	08 0f       	add	r16, r24
     3fe:	08 0f       	add	r16, r24
     400:	28 28       	or	r2, r8
     402:	28 3f       	cpi	r18, 0xF8	; 248
     404:	00 28       	or	r0, r0
     406:	28 ef       	ldi	r18, 0xF8	; 248
     408:	00 ff       	sbrs	r16, 0
     40a:	00 00       	nop
     40c:	ff 00       	.word	0x00ff	; ????
     40e:	ff 28       	or	r15, r15
     410:	28 2f       	mov	r18, r24
     412:	20 3f       	cpi	r18, 0xF0	; 240
     414:	28 28       	or	r2, r8
     416:	e8 08       	sbc	r14, r8
     418:	f8 08       	sbc	r15, r8
     41a:	08 f8       	.word	0xf808	; ????
     41c:	08 f8       	.word	0xf808	; ????
     41e:	28 28       	or	r2, r8
     420:	28 f8       	.word	0xf828	; ????
     422:	00 08       	sbc	r0, r0
     424:	08 08       	sbc	r0, r8
     426:	0f 00       	.word	0x000f	; ????
     428:	00 00       	nop
     42a:	00 f8       	bld	r0, 0
     42c:	08 08       	sbc	r0, r8
     42e:	08 08       	sbc	r0, r8
     430:	f8 08       	sbc	r15, r8
     432:	08 08       	sbc	r0, r8
     434:	08 0f       	add	r16, r24
     436:	08 00       	.word	0x0008	; ????
     438:	00 00       	nop
     43a:	ff 08       	sbc	r15, r15
     43c:	08 08       	sbc	r0, r8
     43e:	08 08       	sbc	r0, r8
     440:	08 08       	sbc	r0, r8
     442:	08 08       	sbc	r0, r8
     444:	ff 08       	sbc	r15, r15
     446:	00 00       	nop
     448:	00 ff       	sbrs	r16, 0
     44a:	28 00       	.word	0x0028	; ????
     44c:	00 ff       	sbrs	r16, 0
     44e:	00 ff       	sbrs	r16, 0
     450:	00 00       	nop
     452:	f8 08       	sbc	r15, r8
     454:	e8 00       	.word	0x00e8	; ????
     456:	00 3f       	cpi	r16, 0xF0	; 240
     458:	20 2f       	mov	r18, r16
     45a:	28 28       	or	r2, r8
     45c:	e8 08       	sbc	r14, r8
     45e:	e8 28       	or	r14, r8
     460:	28 2f       	mov	r18, r24
     462:	20 2f       	mov	r18, r16
     464:	00 00       	nop
     466:	ff 00       	.word	0x00ff	; ????
     468:	ef 28       	or	r14, r15
     46a:	28 28       	or	r2, r8
     46c:	28 28       	or	r2, r8
     46e:	28 28       	or	r2, r8
     470:	ef 00       	.word	0x00ef	; ????
     472:	ef 28       	or	r14, r15
     474:	28 28       	or	r2, r8
     476:	e8 28       	or	r14, r8
     478:	08 08       	sbc	r0, r8
     47a:	f8 08       	sbc	r15, r8
     47c:	f8 28       	or	r15, r8
     47e:	28 28       	or	r2, r8
     480:	2f 28       	or	r2, r15
     482:	08 08       	sbc	r0, r8
     484:	0f 08       	sbc	r0, r15
     486:	0f 00       	.word	0x000f	; ????
     488:	00 f8       	bld	r0, 0
     48a:	08 f8       	.word	0xf808	; ????
     48c:	00 00       	nop
     48e:	00 f8       	bld	r0, 0
     490:	28 00       	.word	0x0028	; ????
     492:	00 00       	nop
     494:	3f 28       	or	r3, r15
     496:	00 00       	nop
     498:	0f 08       	sbc	r0, r15
     49a:	0f 08       	sbc	r0, r15
     49c:	08 ff       	.word	0xff08	; ????
     49e:	08 ff       	.word	0xff08	; ????
     4a0:	28 28       	or	r2, r8
     4a2:	28 ff       	.word	0xff28	; ????
     4a4:	28 08       	sbc	r2, r8
     4a6:	08 08       	sbc	r0, r8
     4a8:	f8 00       	.word	0x00f8	; ????
     4aa:	00 00       	nop
     4ac:	00 0f       	add	r16, r16
     4ae:	08 ff       	.word	0xff08	; ????
     4b0:	ff ff       	.word	0xffff	; ????
     4b2:	ff ff       	.word	0xffff	; ????
     4b4:	0f 0f       	add	r16, r31
     4b6:	0f 0f       	add	r16, r31
     4b8:	0f ff       	.word	0xff0f	; ????
     4ba:	ff ff       	.word	0xffff	; ????
     4bc:	00 00       	nop
     4be:	00 00       	nop
     4c0:	00 ff       	sbrs	r16, 0
     4c2:	ff f0       	brie	.+62     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
     4c4:	f0 f0       	brcs	.+60     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
     4c6:	f0 f0       	brcs	.+60     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
     4c8:	1c 22       	and	r1, r28
     4ca:	22 1c       	adc	r2, r2
     4cc:	22 3e       	cpi	r18, 0xE2	; 226
     4ce:	54 54       	subi	r21, 0x44	; 68
     4d0:	7c 28       	or	r7, r12
     4d2:	7e 40       	sbci	r23, 0x0E	; 14
     4d4:	40 60       	ori	r20, 0x00	; 0
     4d6:	60 40       	sbci	r22, 0x00	; 0
     4d8:	7e 40       	sbci	r23, 0x0E	; 14
     4da:	7e 40       	sbci	r23, 0x0E	; 14
     4dc:	c6 aa       	std	Z+54, r12	; 0x36
     4de:	92 82       	std	Z+2, r9	; 0x02
     4e0:	c6 1c       	adc	r12, r6
     4e2:	22 22       	and	r2, r18
     4e4:	3c 20       	and	r3, r12
     4e6:	02 7e       	andi	r16, 0xE2	; 226
     4e8:	04 78       	andi	r16, 0x84	; 132
     4ea:	04 60       	ori	r16, 0x04	; 4
     4ec:	40 7e       	andi	r20, 0xE0	; 224
     4ee:	40 40       	sbci	r20, 0x00	; 0
     4f0:	99 a5       	ldd	r25, Y+41	; 0x29
     4f2:	e7 a5       	ldd	r30, Z+47	; 0x2f
     4f4:	99 38       	cpi	r25, 0x89	; 137
     4f6:	54 92       	xch	Z, r5
     4f8:	54 38       	cpi	r21, 0x84	; 132
     4fa:	32 4e       	sbci	r19, 0xE2	; 226
     4fc:	80 4e       	sbci	r24, 0xE0	; 224
     4fe:	32 0c       	add	r3, r2
     500:	52 b2       	in	r5, 0x12	; 18
     502:	b2 0c       	add	r11, r2
     504:	0c 12       	cpse	r0, r28
     506:	1e 12       	cpse	r1, r30
     508:	0c 3d       	cpi	r16, 0xDC	; 220
     50a:	46 5a       	subi	r20, 0xA6	; 166
     50c:	62 bc       	out	0x22, r6	; 34
     50e:	7c 92       	st	X, r7
     510:	92 92       	st	-Z, r9
     512:	00 7e       	andi	r16, 0xE0	; 224
     514:	80 80       	ld	r8, Z
     516:	80 7e       	andi	r24, 0xE0	; 224
     518:	54 54       	subi	r21, 0x44	; 68
     51a:	54 54       	subi	r21, 0x44	; 68
     51c:	54 22       	and	r5, r20
     51e:	22 fa       	bst	r2, 2
     520:	22 22       	and	r2, r18
     522:	02 8a       	std	Z+18, r0	; 0x12
     524:	52 22       	and	r5, r18
     526:	02 02       	muls	r16, r18
     528:	22 52       	subi	r18, 0x22	; 34
     52a:	8a 02       	muls	r24, r26
     52c:	00 00       	nop
     52e:	ff 80       	ldd	r15, Y+7	; 0x07
     530:	c0 07       	cpc	r28, r16
     532:	01 ff       	sbrs	r16, 1
     534:	00 00       	nop
     536:	10 10       	cpse	r1, r0
     538:	d6 d6       	rcall	.+3500   	; 0x12e6 <fillcircle+0x90>
     53a:	10 6c       	ori	r17, 0xC0	; 192
     53c:	48 6c       	ori	r20, 0xC8	; 200
     53e:	24 6c       	ori	r18, 0xC4	; 196
     540:	60 f0       	brcs	.+24     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
     542:	90 f0       	brcs	.+36     	; 0x568 <__ctors_end+0x4>
     544:	60 00       	.word	0x0060	; ????
     546:	00 18       	sub	r0, r0
     548:	18 00       	.word	0x0018	; ????
     54a:	00 00       	nop
     54c:	08 08       	sbc	r0, r8
     54e:	00 0c       	add	r0, r0
     550:	02 ff       	sbrs	r16, 2
     552:	80 80       	ld	r8, Z
     554:	00 f8       	bld	r0, 0
     556:	80 80       	ld	r8, Z
     558:	78 00       	.word	0x0078	; ????
     55a:	98 b8       	out	0x08, r9	; 8
     55c:	e8 48       	sbci	r30, 0x88	; 136
     55e:	00 3c       	cpi	r16, 0xC0	; 192
     560:	3c 3c       	cpi	r19, 0xCC	; 204
     562:	3c 00       	.word	0x003c	; ????

00000564 <__ctors_end>:
     564:	11 24       	eor	r1, r1
     566:	1f be       	out	0x3f, r1	; 63
     568:	cf ef       	ldi	r28, 0xFF	; 255
     56a:	d8 e0       	ldi	r29, 0x08	; 8
     56c:	de bf       	out	0x3e, r29	; 62
     56e:	cd bf       	out	0x3d, r28	; 61

00000570 <__do_copy_data>:
     570:	15 e0       	ldi	r17, 0x05	; 5
     572:	a0 e0       	ldi	r26, 0x00	; 0
     574:	b1 e0       	ldi	r27, 0x01	; 1
     576:	e6 ef       	ldi	r30, 0xF6	; 246
     578:	f2 e2       	ldi	r31, 0x22	; 34
     57a:	02 c0       	rjmp	.+4      	; 0x580 <__do_copy_data+0x10>
     57c:	05 90       	lpm	r0, Z+
     57e:	0d 92       	st	X+, r0
     580:	ac 3e       	cpi	r26, 0xEC	; 236
     582:	b1 07       	cpc	r27, r17
     584:	d9 f7       	brne	.-10     	; 0x57c <__do_copy_data+0xc>

00000586 <__do_clear_bss>:
     586:	26 e0       	ldi	r18, 0x06	; 6
     588:	ac ee       	ldi	r26, 0xEC	; 236
     58a:	b5 e0       	ldi	r27, 0x05	; 5
     58c:	01 c0       	rjmp	.+2      	; 0x590 <.do_clear_bss_start>

0000058e <.do_clear_bss_loop>:
     58e:	1d 92       	st	X+, r1

00000590 <.do_clear_bss_start>:
     590:	a2 30       	cpi	r26, 0x02	; 2
     592:	b2 07       	cpc	r27, r18
     594:	e1 f7       	brne	.-8      	; 0x58e <.do_clear_bss_loop>
     596:	0e 94 0a 0c 	call	0x1814	; 0x1814 <main>
     59a:	0c 94 79 11 	jmp	0x22f2	; 0x22f2 <_exit>

0000059e <__bad_interrupt>:
     59e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000005a2 <adcInit>:
extern uint16_t  adcResult = 0;
volatile uint16_t paddle1Y = 36;
volatile uint16_t paddle2Y = 32;

void adcInit(){
	ADMUX = 0;
     5a2:	ec e7       	ldi	r30, 0x7C	; 124
     5a4:	f0 e0       	ldi	r31, 0x00	; 0
     5a6:	10 82       	st	Z, r1
	ADMUX = (1<<REFS0); // should use external capacitor on ARef
     5a8:	80 e4       	ldi	r24, 0x40	; 64
     5aa:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADEN); // enable ADC and set rate to 1/128
     5ac:	ea e7       	ldi	r30, 0x7A	; 122
     5ae:	f0 e0       	ldi	r31, 0x00	; 0
     5b0:	80 81       	ld	r24, Z
     5b2:	87 68       	ori	r24, 0x87	; 135
     5b4:	80 83       	st	Z, r24
	ADCSRB |= 0x00; // free running
     5b6:	ab e7       	ldi	r26, 0x7B	; 123
     5b8:	b0 e0       	ldi	r27, 0x00	; 0
     5ba:	8c 91       	ld	r24, X
     5bc:	8c 93       	st	X, r24
	ADCSRA |= (1 << ADIE);
     5be:	80 81       	ld	r24, Z
     5c0:	88 60       	ori	r24, 0x08	; 8
     5c2:	80 83       	st	Z, r24
	sei();
     5c4:	78 94       	sei
     5c6:	08 95       	ret

000005c8 <adc_read>:
}

uint8_t adc_read(){	//1110
	
	//ADCchannel &= 0x07; // zero out high bits
	ADMUX = (ADMUX & 0xF8) | ADCchannel; //00000011 & 00001111 => 00000011
     5c8:	ec e7       	ldi	r30, 0x7C	; 124
     5ca:	f0 e0       	ldi	r31, 0x00	; 0
     5cc:	80 81       	ld	r24, Z
     5ce:	90 91 ee 05 	lds	r25, 0x05EE	; 0x8005ee <ADCchannel>
     5d2:	88 7f       	andi	r24, 0xF8	; 248
     5d4:	89 2b       	or	r24, r25
     5d6:	80 83       	st	Z, r24
	
	if(ADCchannel == 0){
     5d8:	80 91 ee 05 	lds	r24, 0x05EE	; 0x8005ee <ADCchannel>
     5dc:	81 11       	cpse	r24, r1
     5de:	05 c0       	rjmp	.+10     	; 0x5ea <adc_read+0x22>
		DDRC = 0x0A;		//0b00001010 Setting X- & X+ as Outputs
     5e0:	8a e0       	ldi	r24, 0x0A	; 10
     5e2:	87 b9       	out	0x07, r24	; 7
		PORTC= 0x0D;		//0b00001101 Setting X- High and X+ Low. & Setting Y- & Y+ in internal Pull up mode.
     5e4:	8d e0       	ldi	r24, 0x0D	; 13
     5e6:	88 b9       	out	0x08, r24	; 8
     5e8:	0f c0       	rjmp	.+30     	; 0x608 <adc_read+0x40>
	}else if(ADCchannel == 3){
     5ea:	80 91 ee 05 	lds	r24, 0x05EE	; 0x8005ee <ADCchannel>
     5ee:	83 30       	cpi	r24, 0x03	; 3
     5f0:	29 f4       	brne	.+10     	; 0x5fc <adc_read+0x34>
		DDRC = 0x05;
     5f2:	85 e0       	ldi	r24, 0x05	; 5
     5f4:	87 b9       	out	0x07, r24	; 7
		PORTC = 0x0B;
     5f6:	8b e0       	ldi	r24, 0x0B	; 11
     5f8:	88 b9       	out	0x08, r24	; 8
     5fa:	06 c0       	rjmp	.+12     	; 0x608 <adc_read+0x40>
	}else if(ADCchannel == 4){
     5fc:	80 91 ee 05 	lds	r24, 0x05EE	; 0x8005ee <ADCchannel>
     600:	84 30       	cpi	r24, 0x04	; 4
     602:	11 f4       	brne	.+4      	; 0x608 <adc_read+0x40>
		DDRC = 0x00;
     604:	17 b8       	out	0x07, r1	; 7
		PORTC = 0x04;
     606:	88 b9       	out	0x08, r24	; 8
	}
	ADCSRA |= (1<<ADSC);
     608:	ea e7       	ldi	r30, 0x7A	; 122
     60a:	f0 e0       	ldi	r31, 0x00	; 0
     60c:	80 81       	ld	r24, Z
     60e:	80 64       	ori	r24, 0x40	; 64
     610:	80 83       	st	Z, r24
	//ADCSRA |= (1<< ADATE);
	//ADCSRB = 0x00;
	return 0;
}
     612:	80 e0       	ldi	r24, 0x00	; 0
     614:	08 95       	ret

00000616 <mapTocuhValues>:


uint8_t mapTocuhValues(char axis){
	float result = 0;
	if(axis == 'x'){
     616:	88 37       	cpi	r24, 0x78	; 120
     618:	99 f5       	brne	.+102    	; 0x680 <mapTocuhValues+0x6a>
		if(touchX < xMin){
     61a:	20 91 f3 05 	lds	r18, 0x05F3	; 0x8005f3 <touchX>
     61e:	30 91 f4 05 	lds	r19, 0x05F4	; 0x8005f4 <touchX+0x1>
     622:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <xMin>
     626:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <xMin+0x1>
     62a:	28 17       	cp	r18, r24
     62c:	39 07       	cpc	r19, r25
     62e:	20 f4       	brcc	.+8      	; 0x638 <mapTocuhValues+0x22>
			touchX = xMin;
     630:	90 93 f4 05 	sts	0x05F4, r25	; 0x8005f4 <touchX+0x1>
     634:	80 93 f3 05 	sts	0x05F3, r24	; 0x8005f3 <touchX>
		}
		if(touchX > xMax){
     638:	40 91 f3 05 	lds	r20, 0x05F3	; 0x8005f3 <touchX>
     63c:	50 91 f4 05 	lds	r21, 0x05F4	; 0x8005f4 <touchX+0x1>
     640:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <xMax>
     644:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <xMax+0x1>
     648:	24 17       	cp	r18, r20
     64a:	35 07       	cpc	r19, r21
     64c:	20 f4       	brcc	.+8      	; 0x656 <mapTocuhValues+0x40>
			touchX = xMax;
     64e:	30 93 f4 05 	sts	0x05F4, r19	; 0x8005f4 <touchX+0x1>
     652:	20 93 f3 05 	sts	0x05F3, r18	; 0x8005f3 <touchX>
		}
		result = xConversionFactor * (float) (touchX - xMin);	
     656:	60 91 f3 05 	lds	r22, 0x05F3	; 0x8005f3 <touchX>
     65a:	70 91 f4 05 	lds	r23, 0x05F4	; 0x8005f4 <touchX+0x1>
     65e:	68 1b       	sub	r22, r24
     660:	79 0b       	sbc	r23, r25
     662:	80 e0       	ldi	r24, 0x00	; 0
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <__floatunsisf>
     66a:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <xConversionFactor>
     66e:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <xConversionFactor+0x1>
     672:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <xConversionFactor+0x2>
     676:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <xConversionFactor+0x3>
     67a:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <__mulsf3>
     67e:	32 c0       	rjmp	.+100    	; 0x6e4 <mapTocuhValues+0xce>
	}else{
		if(touchY < yMin){
     680:	20 91 f1 05 	lds	r18, 0x05F1	; 0x8005f1 <touchY>
     684:	30 91 f2 05 	lds	r19, 0x05F2	; 0x8005f2 <touchY+0x1>
     688:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <yMin>
     68c:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <yMin+0x1>
     690:	28 17       	cp	r18, r24
     692:	39 07       	cpc	r19, r25
     694:	20 f4       	brcc	.+8      	; 0x69e <mapTocuhValues+0x88>
			touchY = yMin;
     696:	90 93 f2 05 	sts	0x05F2, r25	; 0x8005f2 <touchY+0x1>
     69a:	80 93 f1 05 	sts	0x05F1, r24	; 0x8005f1 <touchY>
		}
		if(touchY > yMax){
     69e:	80 91 f1 05 	lds	r24, 0x05F1	; 0x8005f1 <touchY>
     6a2:	90 91 f2 05 	lds	r25, 0x05F2	; 0x8005f2 <touchY+0x1>
     6a6:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <yMax>
     6aa:	70 91 09 01 	lds	r23, 0x0109	; 0x800109 <yMax+0x1>
     6ae:	68 17       	cp	r22, r24
     6b0:	79 07       	cpc	r23, r25
     6b2:	20 f4       	brcc	.+8      	; 0x6bc <mapTocuhValues+0xa6>
			touchY = yMax;
     6b4:	70 93 f2 05 	sts	0x05F2, r23	; 0x8005f2 <touchY+0x1>
     6b8:	60 93 f1 05 	sts	0x05F1, r22	; 0x8005f1 <touchY>
		}
		result = yConversionFactor * (float) (yMax - touchY);
     6bc:	80 91 f1 05 	lds	r24, 0x05F1	; 0x8005f1 <touchY>
     6c0:	90 91 f2 05 	lds	r25, 0x05F2	; 0x8005f2 <touchY+0x1>
     6c4:	68 1b       	sub	r22, r24
     6c6:	79 0b       	sbc	r23, r25
     6c8:	80 e0       	ldi	r24, 0x00	; 0
     6ca:	90 e0       	ldi	r25, 0x00	; 0
     6cc:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <__floatunsisf>
     6d0:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <yConversionFactor>
     6d4:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <yConversionFactor+0x1>
     6d8:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <yConversionFactor+0x2>
     6dc:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <yConversionFactor+0x3>
     6e0:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <__mulsf3>
	}
	uint8_t res = (uint8_t) (result + 0.5f);
	return res;
     6e4:	20 e0       	ldi	r18, 0x00	; 0
     6e6:	30 e0       	ldi	r19, 0x00	; 0
     6e8:	40 e0       	ldi	r20, 0x00	; 0
     6ea:	5f e3       	ldi	r21, 0x3F	; 63
     6ec:	0e 94 dc 0c 	call	0x19b8	; 0x19b8 <__addsf3>
     6f0:	0e 94 4f 0d 	call	0x1a9e	; 0x1a9e <__fixunssfsi>
     6f4:	86 2f       	mov	r24, r22
}
     6f6:	08 95       	ret

000006f8 <__vector_21>:

ISR(ADC_vect){
     6f8:	1f 92       	push	r1
     6fa:	0f 92       	push	r0
     6fc:	0f b6       	in	r0, 0x3f	; 63
     6fe:	0f 92       	push	r0
     700:	11 24       	eor	r1, r1
     702:	2f 93       	push	r18
     704:	8f 93       	push	r24
     706:	9f 93       	push	r25
	adcResult = ADC;
     708:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     70c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     710:	90 93 ed 05 	sts	0x05ED, r25	; 0x8005ed <__data_end+0x1>
     714:	80 93 ec 05 	sts	0x05EC, r24	; 0x8005ec <__data_end>
	//printf("ACH : %u\t%u\n", ADCchannel, adcResult);
	if(ADCchannel == 0){
     718:	20 91 ee 05 	lds	r18, 0x05EE	; 0x8005ee <ADCchannel>
     71c:	21 11       	cpse	r18, r1
     71e:	08 c0       	rjmp	.+16     	; 0x730 <__vector_21+0x38>
		touchX = adcResult;
     720:	90 93 f4 05 	sts	0x05F4, r25	; 0x8005f4 <touchX+0x1>
     724:	80 93 f3 05 	sts	0x05F3, r24	; 0x8005f3 <touchX>
		ADCchannel = 3;
     728:	83 e0       	ldi	r24, 0x03	; 3
     72a:	80 93 ee 05 	sts	0x05EE, r24	; 0x8005ee <ADCchannel>
     72e:	16 c0       	rjmp	.+44     	; 0x75c <__vector_21+0x64>
	}
	else if(ADCchannel == 3){
     730:	20 91 ee 05 	lds	r18, 0x05EE	; 0x8005ee <ADCchannel>
     734:	23 30       	cpi	r18, 0x03	; 3
     736:	41 f4       	brne	.+16     	; 0x748 <__vector_21+0x50>
		touchY = adcResult;
     738:	90 93 f2 05 	sts	0x05F2, r25	; 0x8005f2 <touchY+0x1>
     73c:	80 93 f1 05 	sts	0x05F1, r24	; 0x8005f1 <touchY>
		ADCchannel = 4;
     740:	84 e0       	ldi	r24, 0x04	; 4
     742:	80 93 ee 05 	sts	0x05EE, r24	; 0x8005ee <ADCchannel>
     746:	0a c0       	rjmp	.+20     	; 0x75c <__vector_21+0x64>
	}else if(ADCchannel == 4){
     748:	20 91 ee 05 	lds	r18, 0x05EE	; 0x8005ee <ADCchannel>
     74c:	24 30       	cpi	r18, 0x04	; 4
     74e:	31 f4       	brne	.+12     	; 0x75c <__vector_21+0x64>
		aMeter = adcResult;
     750:	90 93 f0 05 	sts	0x05F0, r25	; 0x8005f0 <aMeter+0x1>
     754:	80 93 ef 05 	sts	0x05EF, r24	; 0x8005ef <aMeter>
		ADCchannel = 0;
     758:	10 92 ee 05 	sts	0x05EE, r1	; 0x8005ee <ADCchannel>
	}
	
     75c:	9f 91       	pop	r25
     75e:	8f 91       	pop	r24
     760:	2f 91       	pop	r18
     762:	0f 90       	pop	r0
     764:	0f be       	out	0x3f, r0	; 63
     766:	0f 90       	pop	r0
     768:	1f 90       	pop	r1
     76a:	18 95       	reti

0000076c <checkCollision>:
	TCCR0B = 0b10000100;
	TIMSK0 = 0b00000011; 
	TCNT0 = 0;
	OCR0A = TCNT0 + 4;
	PORTB |= (1 << 4);
	sei();				// Enable global interrupt
     76c:	8b 30       	cpi	r24, 0x0B	; 11
     76e:	68 f4       	brcc	.+26     	; 0x78a <checkCollision+0x1e>
     770:	a6 2f       	mov	r26, r22
     772:	b0 e0       	ldi	r27, 0x00	; 0
     774:	e4 2f       	mov	r30, r20
     776:	f0 e0       	ldi	r31, 0x00	; 0
     778:	3a 96       	adiw	r30, 0x0a	; 10
     77a:	ea 17       	cp	r30, r26
     77c:	fb 07       	cpc	r31, r27
     77e:	3c f0       	brlt	.+14     	; 0x78e <checkCollision+0x22>
     780:	91 e0       	ldi	r25, 0x01	; 1
     782:	64 17       	cp	r22, r20
     784:	28 f4       	brcc	.+10     	; 0x790 <checkCollision+0x24>
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	03 c0       	rjmp	.+6      	; 0x790 <checkCollision+0x24>
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	01 c0       	rjmp	.+2      	; 0x790 <checkCollision+0x24>
     78e:	90 e0       	ldi	r25, 0x00	; 0
     790:	87 37       	cpi	r24, 0x77	; 119
     792:	60 f0       	brcs	.+24     	; 0x7ac <checkCollision+0x40>
     794:	e6 2f       	mov	r30, r22
     796:	f0 e0       	ldi	r31, 0x00	; 0
     798:	42 2f       	mov	r20, r18
     79a:	50 e0       	ldi	r21, 0x00	; 0
     79c:	46 5f       	subi	r20, 0xF6	; 246
     79e:	5f 4f       	sbci	r21, 0xFF	; 255
     7a0:	4e 17       	cp	r20, r30
     7a2:	5f 07       	cpc	r21, r31
     7a4:	1c f0       	brlt	.+6      	; 0x7ac <checkCollision+0x40>
     7a6:	62 17       	cp	r22, r18
     7a8:	08 f0       	brcs	.+2      	; 0x7ac <checkCollision+0x40>
     7aa:	91 e0       	ldi	r25, 0x01	; 1
     7ac:	89 2f       	mov	r24, r25
     7ae:	08 95       	ret

000007b0 <hasP1Scored>:
     7b0:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <positionX>
     7b4:	8b 37       	cpi	r24, 0x7B	; 123
     7b6:	88 f0       	brcs	.+34     	; 0x7da <hasP1Scored+0x2a>
     7b8:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <p1Score>
     7bc:	8f 5f       	subi	r24, 0xFF	; 255
     7be:	80 93 f7 05 	sts	0x05F7, r24	; 0x8005f7 <p1Score>
     7c2:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <p1Score>
     7c6:	83 30       	cpi	r24, 0x03	; 3
     7c8:	51 f4       	brne	.+20     	; 0x7de <hasP1Scored+0x2e>
     7ca:	85 e0       	ldi	r24, 0x05	; 5
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	90 93 fb 05 	sts	0x05FB, r25	; 0x8005fb <state+0x1>
     7d2:	80 93 fa 05 	sts	0x05FA, r24	; 0x8005fa <state>
     7d6:	81 e0       	ldi	r24, 0x01	; 1
     7d8:	08 95       	ret
     7da:	80 e0       	ldi	r24, 0x00	; 0
     7dc:	08 95       	ret
     7de:	81 e0       	ldi	r24, 0x01	; 1
     7e0:	08 95       	ret

000007e2 <hasP2Scored>:
     7e2:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <positionX>
     7e6:	86 30       	cpi	r24, 0x06	; 6
     7e8:	88 f4       	brcc	.+34     	; 0x80c <hasP2Scored+0x2a>
     7ea:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <p2Score>
     7ee:	8f 5f       	subi	r24, 0xFF	; 255
     7f0:	80 93 f6 05 	sts	0x05F6, r24	; 0x8005f6 <p2Score>
     7f4:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <p2Score>
     7f8:	83 30       	cpi	r24, 0x03	; 3
     7fa:	51 f4       	brne	.+20     	; 0x810 <hasP2Scored+0x2e>
     7fc:	85 e0       	ldi	r24, 0x05	; 5
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	90 93 fb 05 	sts	0x05FB, r25	; 0x8005fb <state+0x1>
     804:	80 93 fa 05 	sts	0x05FA, r24	; 0x8005fa <state>
     808:	81 e0       	ldi	r24, 0x01	; 1
     80a:	08 95       	ret
     80c:	80 e0       	ldi	r24, 0x00	; 0
     80e:	08 95       	ret
     810:	81 e0       	ldi	r24, 0x01	; 1
     812:	08 95       	ret

00000814 <waitForStart>:
     814:	cf 93       	push	r28
     816:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <adc_read>
     81a:	88 e7       	ldi	r24, 0x78	; 120
     81c:	0e 94 0b 03 	call	0x616	; 0x616 <mapTocuhValues>
     820:	c8 2f       	mov	r28, r24
     822:	89 e7       	ldi	r24, 0x79	; 121
     824:	0e 94 0b 03 	call	0x616	; 0x616 <mapTocuhValues>
     828:	9f ed       	ldi	r25, 0xDF	; 223
     82a:	9c 0f       	add	r25, r28
     82c:	94 34       	cpi	r25, 0x44	; 68
     82e:	98 f7       	brcc	.-26     	; 0x816 <waitForStart+0x2>
     830:	9a ec       	ldi	r25, 0xCA	; 202
     832:	98 0f       	add	r25, r24
     834:	9d 30       	cpi	r25, 0x0D	; 13
     836:	78 f7       	brcc	.-34     	; 0x816 <waitForStart+0x2>
     838:	1f 92       	push	r1
     83a:	8f 93       	push	r24
     83c:	1f 92       	push	r1
     83e:	cf 93       	push	r28
     840:	84 e4       	ldi	r24, 0x44	; 68
     842:	95 e0       	ldi	r25, 0x05	; 5
     844:	9f 93       	push	r25
     846:	8f 93       	push	r24
     848:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <printf>
     84c:	2f ef       	ldi	r18, 0xFF	; 255
     84e:	89 e6       	ldi	r24, 0x69	; 105
     850:	98 e1       	ldi	r25, 0x18	; 24
     852:	21 50       	subi	r18, 0x01	; 1
     854:	80 40       	sbci	r24, 0x00	; 0
     856:	90 40       	sbci	r25, 0x00	; 0
     858:	e1 f7       	brne	.-8      	; 0x852 <waitForStart+0x3e>
     85a:	00 c0       	rjmp	.+0      	; 0x85c <waitForStart+0x48>
     85c:	00 00       	nop
     85e:	81 e0       	ldi	r24, 0x01	; 1
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	90 93 fb 05 	sts	0x05FB, r25	; 0x8005fb <state+0x1>
     866:	80 93 fa 05 	sts	0x05FA, r24	; 0x8005fa <state>
     86a:	0f 90       	pop	r0
     86c:	0f 90       	pop	r0
     86e:	0f 90       	pop	r0
     870:	0f 90       	pop	r0
     872:	0f 90       	pop	r0
     874:	0f 90       	pop	r0
     876:	cf 91       	pop	r28
     878:	08 95       	ret

0000087a <waitForModeSelection>:
     87a:	1f 93       	push	r17
     87c:	cf 93       	push	r28
     87e:	df 93       	push	r29
     880:	10 92 f4 05 	sts	0x05F4, r1	; 0x8005f4 <touchX+0x1>
     884:	10 92 f3 05 	sts	0x05F3, r1	; 0x8005f3 <touchX>
     888:	10 92 f2 05 	sts	0x05F2, r1	; 0x8005f2 <touchY+0x1>
     88c:	10 92 f1 05 	sts	0x05F1, r1	; 0x8005f1 <touchY>
     890:	2f ef       	ldi	r18, 0xFF	; 255
     892:	87 ea       	ldi	r24, 0xA7	; 167
     894:	91 e6       	ldi	r25, 0x61	; 97
     896:	21 50       	subi	r18, 0x01	; 1
     898:	80 40       	sbci	r24, 0x00	; 0
     89a:	90 40       	sbci	r25, 0x00	; 0
     89c:	e1 f7       	brne	.-8      	; 0x896 <waitForModeSelection+0x1c>
     89e:	00 c0       	rjmp	.+0      	; 0x8a0 <waitForModeSelection+0x26>
     8a0:	00 00       	nop
     8a2:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <adc_read>
     8a6:	88 e7       	ldi	r24, 0x78	; 120
     8a8:	0e 94 0b 03 	call	0x616	; 0x616 <mapTocuhValues>
     8ac:	c8 2f       	mov	r28, r24
     8ae:	89 e7       	ldi	r24, 0x79	; 121
     8b0:	0e 94 0b 03 	call	0x616	; 0x616 <mapTocuhValues>
     8b4:	9a ef       	ldi	r25, 0xFA	; 250
     8b6:	9c 0f       	add	r25, r28
     8b8:	97 33       	cpi	r25, 0x37	; 55
     8ba:	48 f4       	brcc	.+18     	; 0x8ce <waitForModeSelection+0x54>
     8bc:	9b ef       	ldi	r25, 0xFB	; 251
     8be:	98 0f       	add	r25, r24
     8c0:	9b 30       	cpi	r25, 0x0B	; 11
     8c2:	78 f7       	brcc	.-34     	; 0x8a2 <waitForModeSelection+0x28>
     8c4:	10 92 f8 05 	sts	0x05F8, r1	; 0x8005f8 <gMode>
     8c8:	d1 e0       	ldi	r29, 0x01	; 1
     8ca:	10 e0       	ldi	r17, 0x00	; 0
     8cc:	0d c0       	rjmp	.+26     	; 0x8e8 <waitForModeSelection+0x6e>
     8ce:	9f ea       	ldi	r25, 0xAF	; 175
     8d0:	9c 0f       	add	r25, r28
     8d2:	9a 32       	cpi	r25, 0x2A	; 42
     8d4:	30 f7       	brcc	.-52     	; 0x8a2 <waitForModeSelection+0x28>
     8d6:	9b ef       	ldi	r25, 0xFB	; 251
     8d8:	98 0f       	add	r25, r24
     8da:	9b 30       	cpi	r25, 0x0B	; 11
     8dc:	10 f7       	brcc	.-60     	; 0x8a2 <waitForModeSelection+0x28>
     8de:	91 e0       	ldi	r25, 0x01	; 1
     8e0:	90 93 f8 05 	sts	0x05F8, r25	; 0x8005f8 <gMode>
     8e4:	d2 e0       	ldi	r29, 0x02	; 2
     8e6:	10 e0       	ldi	r17, 0x00	; 0
     8e8:	1f 92       	push	r1
     8ea:	8f 93       	push	r24
     8ec:	1f 92       	push	r1
     8ee:	cf 93       	push	r28
     8f0:	87 e6       	ldi	r24, 0x67	; 103
     8f2:	95 e0       	ldi	r25, 0x05	; 5
     8f4:	9f 93       	push	r25
     8f6:	8f 93       	push	r24
     8f8:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <printf>
     8fc:	1f 93       	push	r17
     8fe:	df 93       	push	r29
     900:	1f 93       	push	r17
     902:	df 93       	push	r29
     904:	8a e7       	ldi	r24, 0x7A	; 122
     906:	95 e0       	ldi	r25, 0x05	; 5
     908:	9f 93       	push	r25
     90a:	8f 93       	push	r24
     90c:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <printf>
     910:	82 e0       	ldi	r24, 0x02	; 2
     912:	90 e0       	ldi	r25, 0x00	; 0
     914:	90 93 fb 05 	sts	0x05FB, r25	; 0x8005fb <state+0x1>
     918:	80 93 fa 05 	sts	0x05FA, r24	; 0x8005fa <state>
     91c:	8d b7       	in	r24, 0x3d	; 61
     91e:	9e b7       	in	r25, 0x3e	; 62
     920:	0c 96       	adiw	r24, 0x0c	; 12
     922:	0f b6       	in	r0, 0x3f	; 63
     924:	f8 94       	cli
     926:	9e bf       	out	0x3e, r25	; 62
     928:	0f be       	out	0x3f, r0	; 63
     92a:	8d bf       	out	0x3d, r24	; 61
     92c:	df 91       	pop	r29
     92e:	cf 91       	pop	r28
     930:	1f 91       	pop	r17
     932:	08 95       	ret

00000934 <waitForSpeedSelection>:
     934:	1f 93       	push	r17
     936:	cf 93       	push	r28
     938:	df 93       	push	r29
     93a:	10 92 f4 05 	sts	0x05F4, r1	; 0x8005f4 <touchX+0x1>
     93e:	10 92 f3 05 	sts	0x05F3, r1	; 0x8005f3 <touchX>
     942:	10 92 f2 05 	sts	0x05F2, r1	; 0x8005f2 <touchY+0x1>
     946:	10 92 f1 05 	sts	0x05F1, r1	; 0x8005f1 <touchY>
     94a:	2f ef       	ldi	r18, 0xFF	; 255
     94c:	87 ea       	ldi	r24, 0xA7	; 167
     94e:	91 e6       	ldi	r25, 0x61	; 97
     950:	21 50       	subi	r18, 0x01	; 1
     952:	80 40       	sbci	r24, 0x00	; 0
     954:	90 40       	sbci	r25, 0x00	; 0
     956:	e1 f7       	brne	.-8      	; 0x950 <waitForSpeedSelection+0x1c>
     958:	00 c0       	rjmp	.+0      	; 0x95a <waitForSpeedSelection+0x26>
     95a:	00 00       	nop
     95c:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <adc_read>
     960:	88 e7       	ldi	r24, 0x78	; 120
     962:	0e 94 0b 03 	call	0x616	; 0x616 <mapTocuhValues>
     966:	c8 2f       	mov	r28, r24
     968:	89 e7       	ldi	r24, 0x79	; 121
     96a:	0e 94 0b 03 	call	0x616	; 0x616 <mapTocuhValues>
     96e:	9c ef       	ldi	r25, 0xFC	; 252
     970:	9c 0f       	add	r25, r28
     972:	95 32       	cpi	r25, 0x25	; 37
     974:	50 f4       	brcc	.+20     	; 0x98a <waitForSpeedSelection+0x56>
     976:	9b ef       	ldi	r25, 0xFB	; 251
     978:	98 0f       	add	r25, r24
     97a:	9e 30       	cpi	r25, 0x0E	; 14
     97c:	08 f0       	brcs	.+2      	; 0x980 <waitForSpeedSelection+0x4c>
     97e:	4f c0       	rjmp	.+158    	; 0xa1e <waitForSpeedSelection+0xea>
     980:	10 92 f9 05 	sts	0x05F9, r1	; 0x8005f9 <gSpeed>
     984:	d1 e0       	ldi	r29, 0x01	; 1
     986:	10 e0       	ldi	r17, 0x00	; 0
     988:	1b c0       	rjmp	.+54     	; 0x9c0 <waitForSpeedSelection+0x8c>
     98a:	95 ed       	ldi	r25, 0xD5	; 213
     98c:	9c 0f       	add	r25, r28
     98e:	99 32       	cpi	r25, 0x29	; 41
     990:	50 f4       	brcc	.+20     	; 0x9a6 <waitForSpeedSelection+0x72>
     992:	9b ef       	ldi	r25, 0xFB	; 251
     994:	98 0f       	add	r25, r24
     996:	9e 30       	cpi	r25, 0x0E	; 14
     998:	08 f7       	brcc	.-62     	; 0x95c <waitForSpeedSelection+0x28>
     99a:	91 e0       	ldi	r25, 0x01	; 1
     99c:	90 93 f9 05 	sts	0x05F9, r25	; 0x8005f9 <gSpeed>
     9a0:	d2 e0       	ldi	r29, 0x02	; 2
     9a2:	10 e0       	ldi	r17, 0x00	; 0
     9a4:	0d c0       	rjmp	.+26     	; 0x9c0 <waitForSpeedSelection+0x8c>
     9a6:	9c ea       	ldi	r25, 0xAC	; 172
     9a8:	9c 0f       	add	r25, r28
     9aa:	97 32       	cpi	r25, 0x27	; 39
     9ac:	b8 f6       	brcc	.-82     	; 0x95c <waitForSpeedSelection+0x28>
     9ae:	9b ef       	ldi	r25, 0xFB	; 251
     9b0:	98 0f       	add	r25, r24
     9b2:	9e 30       	cpi	r25, 0x0E	; 14
     9b4:	98 f6       	brcc	.-90     	; 0x95c <waitForSpeedSelection+0x28>
     9b6:	92 e0       	ldi	r25, 0x02	; 2
     9b8:	90 93 f9 05 	sts	0x05F9, r25	; 0x8005f9 <gSpeed>
     9bc:	d3 e0       	ldi	r29, 0x03	; 3
     9be:	10 e0       	ldi	r17, 0x00	; 0
     9c0:	1f 92       	push	r1
     9c2:	8f 93       	push	r24
     9c4:	1f 92       	push	r1
     9c6:	cf 93       	push	r28
     9c8:	87 e6       	ldi	r24, 0x67	; 103
     9ca:	95 e0       	ldi	r25, 0x05	; 5
     9cc:	9f 93       	push	r25
     9ce:	8f 93       	push	r24
     9d0:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <printf>
     9d4:	1f 93       	push	r17
     9d6:	df 93       	push	r29
     9d8:	1f 93       	push	r17
     9da:	df 93       	push	r29
     9dc:	8a e7       	ldi	r24, 0x7A	; 122
     9de:	95 e0       	ldi	r25, 0x05	; 5
     9e0:	9f 93       	push	r25
     9e2:	8f 93       	push	r24
     9e4:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <printf>
     9e8:	81 e0       	ldi	r24, 0x01	; 1
     9ea:	0e 94 86 0b 	call	0x170c	; 0x170c <startGame>
     9ee:	2f ef       	ldi	r18, 0xFF	; 255
     9f0:	89 e6       	ldi	r24, 0x69	; 105
     9f2:	98 e1       	ldi	r25, 0x18	; 24
     9f4:	21 50       	subi	r18, 0x01	; 1
     9f6:	80 40       	sbci	r24, 0x00	; 0
     9f8:	90 40       	sbci	r25, 0x00	; 0
     9fa:	e1 f7       	brne	.-8      	; 0x9f4 <waitForSpeedSelection+0xc0>
     9fc:	00 c0       	rjmp	.+0      	; 0x9fe <waitForSpeedSelection+0xca>
     9fe:	00 00       	nop
     a00:	83 e0       	ldi	r24, 0x03	; 3
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	90 93 fb 05 	sts	0x05FB, r25	; 0x8005fb <state+0x1>
     a08:	80 93 fa 05 	sts	0x05FA, r24	; 0x8005fa <state>
     a0c:	8d b7       	in	r24, 0x3d	; 61
     a0e:	9e b7       	in	r25, 0x3e	; 62
     a10:	0c 96       	adiw	r24, 0x0c	; 12
     a12:	0f b6       	in	r0, 0x3f	; 63
     a14:	f8 94       	cli
     a16:	9e bf       	out	0x3e, r25	; 62
     a18:	0f be       	out	0x3f, r0	; 63
     a1a:	8d bf       	out	0x3d, r24	; 61
     a1c:	06 c0       	rjmp	.+12     	; 0xa2a <waitForSpeedSelection+0xf6>
     a1e:	95 ed       	ldi	r25, 0xD5	; 213
     a20:	9c 0f       	add	r25, r28
     a22:	99 32       	cpi	r25, 0x29	; 41
     a24:	08 f4       	brcc	.+2      	; 0xa28 <waitForSpeedSelection+0xf4>
     a26:	9a cf       	rjmp	.-204    	; 0x95c <waitForSpeedSelection+0x28>
     a28:	be cf       	rjmp	.-132    	; 0x9a6 <waitForSpeedSelection+0x72>
     a2a:	df 91       	pop	r29
     a2c:	cf 91       	pop	r28
     a2e:	1f 91       	pop	r17
     a30:	08 95       	ret

00000a32 <controlPaddle>:
     a32:	cf 93       	push	r28
     a34:	88 e7       	ldi	r24, 0x78	; 120
     a36:	0e 94 0b 03 	call	0x616	; 0x616 <mapTocuhValues>
     a3a:	c8 2f       	mov	r28, r24
     a3c:	89 e7       	ldi	r24, 0x79	; 121
     a3e:	0e 94 0b 03 	call	0x616	; 0x616 <mapTocuhValues>
     a42:	cf 36       	cpi	r28, 0x6F	; 111
     a44:	50 f0       	brcs	.+20     	; 0xa5a <controlPaddle+0x28>
     a46:	90 91 f8 05 	lds	r25, 0x05F8	; 0x8005f8 <gMode>
     a4a:	91 30       	cpi	r25, 0x01	; 1
     a4c:	91 f4       	brne	.+36     	; 0xa72 <controlPaddle+0x40>
     a4e:	90 e0       	ldi	r25, 0x00	; 0
     a50:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     a54:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     a58:	3d c0       	rjmp	.+122    	; 0xad4 <controlPaddle+0xa2>
     a5a:	c4 31       	cpi	r28, 0x14	; 20
     a5c:	50 f4       	brcc	.+20     	; 0xa72 <controlPaddle+0x40>
     a5e:	90 91 f8 05 	lds	r25, 0x05F8	; 0x8005f8 <gMode>
     a62:	91 30       	cpi	r25, 0x01	; 1
     a64:	31 f4       	brne	.+12     	; 0xa72 <controlPaddle+0x40>
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <paddle1Y+0x1>
     a6c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <paddle1Y>
     a70:	31 c0       	rjmp	.+98     	; 0xad4 <controlPaddle+0xa2>
     a72:	80 91 f8 05 	lds	r24, 0x05F8	; 0x8005f8 <gMode>
     a76:	81 11       	cpse	r24, r1
     a78:	2d c0       	rjmp	.+90     	; 0xad4 <controlPaddle+0xa2>
     a7a:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <positionX>
     a7e:	81 34       	cpi	r24, 0x41	; 65
     a80:	38 f0       	brcs	.+14     	; 0xa90 <controlPaddle+0x5e>
     a82:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <positionY>
     a86:	90 e0       	ldi	r25, 0x00	; 0
     a88:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     a8c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     a90:	60 91 ef 05 	lds	r22, 0x05EF	; 0x8005ef <aMeter>
     a94:	70 91 f0 05 	lds	r23, 0x05F0	; 0x8005f0 <aMeter+0x1>
     a98:	68 54       	subi	r22, 0x48	; 72
     a9a:	71 40       	sbci	r23, 0x01	; 1
     a9c:	07 2e       	mov	r0, r23
     a9e:	00 0c       	add	r0, r0
     aa0:	88 0b       	sbc	r24, r24
     aa2:	99 0b       	sbc	r25, r25
     aa4:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <__floatsisf>
     aa8:	2d ec       	ldi	r18, 0xCD	; 205
     aaa:	3c ec       	ldi	r19, 0xCC	; 204
     aac:	4c e4       	ldi	r20, 0x4C	; 76
     aae:	5d e3       	ldi	r21, 0x3D	; 61
     ab0:	0e 94 0c 0e 	call	0x1c18	; 0x1c18 <__mulsf3>
     ab4:	0e 94 48 0d 	call	0x1a90	; 0x1a90 <__fixsfsi>
     ab8:	60 93 f5 05 	sts	0x05F5, r22	; 0x8005f5 <aMeterDelta>
     abc:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <paddle1Y>
     ac0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <paddle1Y+0x1>
     ac4:	86 0f       	add	r24, r22
     ac6:	91 1d       	adc	r25, r1
     ac8:	67 fd       	sbrc	r22, 7
     aca:	9a 95       	dec	r25
     acc:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <paddle1Y+0x1>
     ad0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <paddle1Y>
     ad4:	cf 91       	pop	r28
     ad6:	08 95       	ret

00000ad8 <handlePointDrop>:
     ad8:	cf 93       	push	r28
     ada:	c8 2f       	mov	r28, r24
     adc:	80 e4       	ldi	r24, 0x40	; 64
     ade:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <positionX>
     ae2:	80 e2       	ldi	r24, 0x20	; 32
     ae4:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <positionY>
     ae8:	85 e0       	ldi	r24, 0x05	; 5
     aea:	85 b9       	out	0x05, r24	; 5
     aec:	2f ef       	ldi	r18, 0xFF	; 255
     aee:	83 ed       	ldi	r24, 0xD3	; 211
     af0:	90 e3       	ldi	r25, 0x30	; 48
     af2:	21 50       	subi	r18, 0x01	; 1
     af4:	80 40       	sbci	r24, 0x00	; 0
     af6:	90 40       	sbci	r25, 0x00	; 0
     af8:	e1 f7       	brne	.-8      	; 0xaf2 <handlePointDrop+0x1a>
     afa:	00 c0       	rjmp	.+0      	; 0xafc <handlePointDrop+0x24>
     afc:	00 00       	nop
     afe:	88 e1       	ldi	r24, 0x18	; 24
     b00:	91 e0       	ldi	r25, 0x01	; 1
     b02:	0e 94 dd 06 	call	0xdba	; 0xdba <clear_buffer>
     b06:	84 e0       	ldi	r24, 0x04	; 4
     b08:	85 b9       	out	0x05, r24	; 5
     b0a:	8c 2f       	mov	r24, r28
     b0c:	0e 94 86 0b 	call	0x170c	; 0x170c <startGame>
     b10:	cf 91       	pop	r28
     b12:	08 95       	ret

00000b14 <moveBall>:
     b14:	ef 92       	push	r14
     b16:	0f 93       	push	r16
     b18:	cf 93       	push	r28
     b1a:	c8 2f       	mov	r28, r24
     b1c:	40 91 14 01 	lds	r20, 0x0114	; 0x800114 <positionY>
     b20:	60 91 15 01 	lds	r22, 0x0115	; 0x800115 <positionX>
     b24:	00 e0       	ldi	r16, 0x00	; 0
     b26:	23 e0       	ldi	r18, 0x03	; 3
     b28:	88 e1       	ldi	r24, 0x18	; 24
     b2a:	91 e0       	ldi	r25, 0x01	; 1
     b2c:	0e 94 2b 09 	call	0x1256	; 0x1256 <fillcircle>
     b30:	0e 94 d8 03 	call	0x7b0	; 0x7b0 <hasP1Scored>
     b34:	81 11       	cpse	r24, r1
     b36:	62 c0       	rjmp	.+196    	; 0xbfc <moveBall+0xe8>
     b38:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <hasP2Scored>
     b3c:	81 11       	cpse	r24, r1
     b3e:	5e c0       	rjmp	.+188    	; 0xbfc <moveBall+0xe8>
     b40:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <positionY>
     b44:	8d 33       	cpi	r24, 0x3D	; 61
     b46:	20 f4       	brcc	.+8      	; 0xb50 <moveBall+0x3c>
     b48:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <positionY>
     b4c:	8b 30       	cpi	r24, 0x0B	; 11
     b4e:	b0 f4       	brcc	.+44     	; 0xb7c <moveBall+0x68>
     b50:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <delY>
     b54:	81 95       	neg	r24
     b56:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <delY>
     b5a:	e8 e8       	ldi	r30, 0x88	; 136
     b5c:	f0 e0       	ldi	r31, 0x00	; 0
     b5e:	8f ef       	ldi	r24, 0xFF	; 255
     b60:	91 e0       	ldi	r25, 0x01	; 1
     b62:	91 83       	std	Z+1, r25	; 0x01
     b64:	80 83       	st	Z, r24
     b66:	2f ef       	ldi	r18, 0xFF	; 255
     b68:	81 ee       	ldi	r24, 0xE1	; 225
     b6a:	94 e0       	ldi	r25, 0x04	; 4
     b6c:	21 50       	subi	r18, 0x01	; 1
     b6e:	80 40       	sbci	r24, 0x00	; 0
     b70:	90 40       	sbci	r25, 0x00	; 0
     b72:	e1 f7       	brne	.-8      	; 0xb6c <moveBall+0x58>
     b74:	00 c0       	rjmp	.+0      	; 0xb76 <moveBall+0x62>
     b76:	00 00       	nop
     b78:	11 82       	std	Z+1, r1	; 0x01
     b7a:	10 82       	st	Z, r1
     b7c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     b80:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     b84:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <paddle1Y>
     b88:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <paddle1Y+0x1>
     b8c:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <positionY>
     b90:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <positionX>
     b94:	0f 2e       	mov	r0, r31
     b96:	fa e0       	ldi	r31, 0x0A	; 10
     b98:	ef 2e       	mov	r14, r31
     b9a:	f0 2d       	mov	r31, r0
     b9c:	03 e0       	ldi	r16, 0x03	; 3
     b9e:	0e 94 b6 03 	call	0x76c	; 0x76c <checkCollision>
     ba2:	88 23       	and	r24, r24
     ba4:	49 f0       	breq	.+18     	; 0xbb8 <moveBall+0xa4>
     ba6:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <delX>
     baa:	81 95       	neg	r24
     bac:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <delX>
     bb0:	88 e1       	ldi	r24, 0x18	; 24
     bb2:	91 e0       	ldi	r25, 0x01	; 1
     bb4:	0e 94 9e 06 	call	0xd3c	; 0xd3c <write_buffer>
     bb8:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <positionX>
     bbc:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <delX>
     bc0:	89 0f       	add	r24, r25
     bc2:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <positionX>
     bc6:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <positionY>
     bca:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <delY>
     bce:	89 0f       	add	r24, r25
     bd0:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <positionY>
     bd4:	40 91 14 01 	lds	r20, 0x0114	; 0x800114 <positionY>
     bd8:	60 91 15 01 	lds	r22, 0x0115	; 0x800115 <positionX>
     bdc:	0c 2f       	mov	r16, r28
     bde:	23 e0       	ldi	r18, 0x03	; 3
     be0:	88 e1       	ldi	r24, 0x18	; 24
     be2:	91 e0       	ldi	r25, 0x01	; 1
     be4:	0e 94 2b 09 	call	0x1256	; 0x1256 <fillcircle>
     be8:	ec 2e       	mov	r14, r28
     bea:	06 e3       	ldi	r16, 0x36	; 54
     bec:	2a e7       	ldi	r18, 0x7A	; 122
     bee:	48 e0       	ldi	r20, 0x08	; 8
     bf0:	63 e0       	ldi	r22, 0x03	; 3
     bf2:	88 e1       	ldi	r24, 0x18	; 24
     bf4:	91 e0       	ldi	r25, 0x01	; 1
     bf6:	0e 94 f7 07 	call	0xfee	; 0xfee <drawrect>
     bfa:	14 c0       	rjmp	.+40     	; 0xc24 <moveBall+0x110>
     bfc:	e8 e8       	ldi	r30, 0x88	; 136
     bfe:	f0 e0       	ldi	r31, 0x00	; 0
     c00:	8f ef       	ldi	r24, 0xFF	; 255
     c02:	91 e0       	ldi	r25, 0x01	; 1
     c04:	91 83       	std	Z+1, r25	; 0x01
     c06:	80 83       	st	Z, r24
     c08:	2f ef       	ldi	r18, 0xFF	; 255
     c0a:	83 ec       	ldi	r24, 0xC3	; 195
     c0c:	99 e0       	ldi	r25, 0x09	; 9
     c0e:	21 50       	subi	r18, 0x01	; 1
     c10:	80 40       	sbci	r24, 0x00	; 0
     c12:	90 40       	sbci	r25, 0x00	; 0
     c14:	e1 f7       	brne	.-8      	; 0xc0e <moveBall+0xfa>
     c16:	00 c0       	rjmp	.+0      	; 0xc18 <moveBall+0x104>
     c18:	00 00       	nop
     c1a:	11 82       	std	Z+1, r1	; 0x01
     c1c:	10 82       	st	Z, r1
     c1e:	8c 2f       	mov	r24, r28
     c20:	0e 94 6c 05 	call	0xad8	; 0xad8 <handlePointDrop>
     c24:	cf 91       	pop	r28
     c26:	0f 91       	pop	r16
     c28:	ef 90       	pop	r14
     c2a:	08 95       	ret

00000c2c <__vector_14>:

}

ISR(TIMER0_COMPA_vect){
     c2c:	1f 92       	push	r1
     c2e:	0f 92       	push	r0
     c30:	0f b6       	in	r0, 0x3f	; 63
     c32:	0f 92       	push	r0
     c34:	11 24       	eor	r1, r1
     c36:	8f 93       	push	r24
	PORTB |= ~(1 << 4);
     c38:	85 b1       	in	r24, 0x05	; 5
     c3a:	8f 6e       	ori	r24, 0xEF	; 239
     c3c:	85 b9       	out	0x05, r24	; 5
     c3e:	8f 91       	pop	r24
     c40:	0f 90       	pop	r0
     c42:	0f be       	out	0x3f, r0	; 63
     c44:	0f 90       	pop	r0
     c46:	1f 90       	pop	r1
     c48:	18 95       	reti

00000c4a <lcd_command>:
}

void drawDiagonals(uint8_t color){
	drawline(buff, 0,0,127,63, color);
	drawline(buff, 0,64,127,0, color);
}
     c4a:	5c 98       	cbi	0x0b, 4	; 11
     c4c:	27 e0       	ldi	r18, 0x07	; 7
     c4e:	30 e0       	ldi	r19, 0x00	; 0
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	5d 98       	cbi	0x0b, 5	; 11
     c54:	ac 01       	movw	r20, r24
     c56:	02 2e       	mov	r0, r18
     c58:	02 c0       	rjmp	.+4      	; 0xc5e <lcd_command+0x14>
     c5a:	55 95       	asr	r21
     c5c:	47 95       	ror	r20
     c5e:	0a 94       	dec	r0
     c60:	e2 f7       	brpl	.-8      	; 0xc5a <lcd_command+0x10>
     c62:	40 ff       	sbrs	r20, 0
     c64:	02 c0       	rjmp	.+4      	; 0xc6a <lcd_command+0x20>
     c66:	5e 9a       	sbi	0x0b, 6	; 11
     c68:	01 c0       	rjmp	.+2      	; 0xc6c <lcd_command+0x22>
     c6a:	5e 98       	cbi	0x0b, 6	; 11
     c6c:	5d 9a       	sbi	0x0b, 5	; 11
     c6e:	21 50       	subi	r18, 0x01	; 1
     c70:	31 09       	sbc	r19, r1
     c72:	78 f7       	brcc	.-34     	; 0xc52 <lcd_command+0x8>
     c74:	08 95       	ret

00000c76 <lcd_init>:
     c76:	56 9a       	sbi	0x0a, 6	; 10
     c78:	55 9a       	sbi	0x0a, 5	; 10
     c7a:	54 9a       	sbi	0x0a, 4	; 10
     c7c:	53 9a       	sbi	0x0a, 3	; 10
     c7e:	52 9a       	sbi	0x0a, 2	; 10
     c80:	5a 98       	cbi	0x0b, 2	; 11
     c82:	5b 98       	cbi	0x0b, 3	; 11
     c84:	2f ef       	ldi	r18, 0xFF	; 255
     c86:	89 e6       	ldi	r24, 0x69	; 105
     c88:	98 e1       	ldi	r25, 0x18	; 24
     c8a:	21 50       	subi	r18, 0x01	; 1
     c8c:	80 40       	sbci	r24, 0x00	; 0
     c8e:	90 40       	sbci	r25, 0x00	; 0
     c90:	e1 f7       	brne	.-8      	; 0xc8a <lcd_init+0x14>
     c92:	00 c0       	rjmp	.+0      	; 0xc94 <lcd_init+0x1e>
     c94:	00 00       	nop
     c96:	5b 9a       	sbi	0x0b, 3	; 11
     c98:	83 ea       	ldi	r24, 0xA3	; 163
     c9a:	0e 94 25 06 	call	0xc4a	; 0xc4a <lcd_command>
     c9e:	80 ea       	ldi	r24, 0xA0	; 160
     ca0:	0e 94 25 06 	call	0xc4a	; 0xc4a <lcd_command>
     ca4:	80 ec       	ldi	r24, 0xC0	; 192
     ca6:	0e 94 25 06 	call	0xc4a	; 0xc4a <lcd_command>
     caa:	80 e4       	ldi	r24, 0x40	; 64
     cac:	0e 94 25 06 	call	0xc4a	; 0xc4a <lcd_command>
     cb0:	8c e2       	ldi	r24, 0x2C	; 44
     cb2:	0e 94 25 06 	call	0xc4a	; 0xc4a <lcd_command>
     cb6:	2f ef       	ldi	r18, 0xFF	; 255
     cb8:	80 e7       	ldi	r24, 0x70	; 112
     cba:	92 e0       	ldi	r25, 0x02	; 2
     cbc:	21 50       	subi	r18, 0x01	; 1
     cbe:	80 40       	sbci	r24, 0x00	; 0
     cc0:	90 40       	sbci	r25, 0x00	; 0
     cc2:	e1 f7       	brne	.-8      	; 0xcbc <lcd_init+0x46>
     cc4:	00 c0       	rjmp	.+0      	; 0xcc6 <lcd_init+0x50>
     cc6:	00 00       	nop
     cc8:	8e e2       	ldi	r24, 0x2E	; 46
     cca:	0e 94 25 06 	call	0xc4a	; 0xc4a <lcd_command>
     cce:	2f ef       	ldi	r18, 0xFF	; 255
     cd0:	80 e7       	ldi	r24, 0x70	; 112
     cd2:	92 e0       	ldi	r25, 0x02	; 2
     cd4:	21 50       	subi	r18, 0x01	; 1
     cd6:	80 40       	sbci	r24, 0x00	; 0
     cd8:	90 40       	sbci	r25, 0x00	; 0
     cda:	e1 f7       	brne	.-8      	; 0xcd4 <lcd_init+0x5e>
     cdc:	00 c0       	rjmp	.+0      	; 0xcde <lcd_init+0x68>
     cde:	00 00       	nop
     ce0:	8f e2       	ldi	r24, 0x2F	; 47
     ce2:	0e 94 25 06 	call	0xc4a	; 0xc4a <lcd_command>
     ce6:	8f e3       	ldi	r24, 0x3F	; 63
     ce8:	9c e9       	ldi	r25, 0x9C	; 156
     cea:	01 97       	sbiw	r24, 0x01	; 1
     cec:	f1 f7       	brne	.-4      	; 0xcea <lcd_init+0x74>
     cee:	00 c0       	rjmp	.+0      	; 0xcf0 <lcd_init+0x7a>
     cf0:	00 00       	nop
     cf2:	86 e2       	ldi	r24, 0x26	; 38
     cf4:	0e 94 25 06 	call	0xc4a	; 0xc4a <lcd_command>
     cf8:	08 95       	ret

00000cfa <lcd_data>:
     cfa:	5c 9a       	sbi	0x0b, 4	; 11
     cfc:	27 e0       	ldi	r18, 0x07	; 7
     cfe:	30 e0       	ldi	r19, 0x00	; 0
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	5d 98       	cbi	0x0b, 5	; 11
     d04:	ac 01       	movw	r20, r24
     d06:	02 2e       	mov	r0, r18
     d08:	02 c0       	rjmp	.+4      	; 0xd0e <lcd_data+0x14>
     d0a:	55 95       	asr	r21
     d0c:	47 95       	ror	r20
     d0e:	0a 94       	dec	r0
     d10:	e2 f7       	brpl	.-8      	; 0xd0a <lcd_data+0x10>
     d12:	40 ff       	sbrs	r20, 0
     d14:	02 c0       	rjmp	.+4      	; 0xd1a <lcd_data+0x20>
     d16:	5e 9a       	sbi	0x0b, 6	; 11
     d18:	01 c0       	rjmp	.+2      	; 0xd1c <lcd_data+0x22>
     d1a:	5e 98       	cbi	0x0b, 6	; 11
     d1c:	5d 9a       	sbi	0x0b, 5	; 11
     d1e:	21 50       	subi	r18, 0x01	; 1
     d20:	31 09       	sbc	r19, r1
     d22:	78 f7       	brcc	.-34     	; 0xd02 <lcd_data+0x8>
     d24:	08 95       	ret

00000d26 <lcd_set_brightness>:
     d26:	cf 93       	push	r28
     d28:	c8 2f       	mov	r28, r24
     d2a:	81 e8       	ldi	r24, 0x81	; 129
     d2c:	0e 94 25 06 	call	0xc4a	; 0xc4a <lcd_command>
     d30:	8c 2f       	mov	r24, r28
     d32:	8f 73       	andi	r24, 0x3F	; 63
     d34:	0e 94 25 06 	call	0xc4a	; 0xc4a <lcd_command>
     d38:	cf 91       	pop	r28
     d3a:	08 95       	ret

00000d3c <write_buffer>:
     d3c:	cf 92       	push	r12
     d3e:	df 92       	push	r13
     d40:	ef 92       	push	r14
     d42:	ff 92       	push	r15
     d44:	0f 93       	push	r16
     d46:	1f 93       	push	r17
     d48:	cf 93       	push	r28
     d4a:	df 93       	push	r29
     d4c:	0f 2e       	mov	r0, r31
     d4e:	f8 e1       	ldi	r31, 0x18	; 24
     d50:	ef 2e       	mov	r14, r31
     d52:	f5 e0       	ldi	r31, 0x05	; 5
     d54:	ff 2e       	mov	r15, r31
     d56:	f0 2d       	mov	r31, r0
     d58:	ec 01       	movw	r28, r24
     d5a:	0f 2e       	mov	r0, r31
     d5c:	f8 e2       	ldi	r31, 0x28	; 40
     d5e:	cf 2e       	mov	r12, r31
     d60:	f5 e0       	ldi	r31, 0x05	; 5
     d62:	df 2e       	mov	r13, r31
     d64:	f0 2d       	mov	r31, r0
     d66:	f7 01       	movw	r30, r14
     d68:	80 81       	ld	r24, Z
     d6a:	f2 e0       	ldi	r31, 0x02	; 2
     d6c:	ef 0e       	add	r14, r31
     d6e:	f1 1c       	adc	r15, r1
     d70:	80 6b       	ori	r24, 0xB0	; 176
     d72:	0e 94 25 06 	call	0xc4a	; 0xc4a <lcd_command>
     d76:	80 e0       	ldi	r24, 0x00	; 0
     d78:	0e 94 25 06 	call	0xc4a	; 0xc4a <lcd_command>
     d7c:	80 e1       	ldi	r24, 0x10	; 16
     d7e:	0e 94 25 06 	call	0xc4a	; 0xc4a <lcd_command>
     d82:	80 ee       	ldi	r24, 0xE0	; 224
     d84:	0e 94 25 06 	call	0xc4a	; 0xc4a <lcd_command>
     d88:	8f ef       	ldi	r24, 0xFF	; 255
     d8a:	0e 94 7d 06 	call	0xcfa	; 0xcfa <lcd_data>
     d8e:	8e 01       	movw	r16, r28
     d90:	00 58       	subi	r16, 0x80	; 128
     d92:	1f 4f       	sbci	r17, 0xFF	; 255
     d94:	89 91       	ld	r24, Y+
     d96:	0e 94 7d 06 	call	0xcfa	; 0xcfa <lcd_data>
     d9a:	c0 17       	cp	r28, r16
     d9c:	d1 07       	cpc	r29, r17
     d9e:	d1 f7       	brne	.-12     	; 0xd94 <write_buffer+0x58>
     da0:	e8 01       	movw	r28, r16
     da2:	ce 14       	cp	r12, r14
     da4:	df 04       	cpc	r13, r15
     da6:	f9 f6       	brne	.-66     	; 0xd66 <write_buffer+0x2a>
     da8:	df 91       	pop	r29
     daa:	cf 91       	pop	r28
     dac:	1f 91       	pop	r17
     dae:	0f 91       	pop	r16
     db0:	ff 90       	pop	r15
     db2:	ef 90       	pop	r14
     db4:	df 90       	pop	r13
     db6:	cf 90       	pop	r12
     db8:	08 95       	ret

00000dba <clear_buffer>:
     dba:	20 e0       	ldi	r18, 0x00	; 0
     dbc:	34 e0       	ldi	r19, 0x04	; 4
     dbe:	fc 01       	movw	r30, r24
     dc0:	a9 01       	movw	r20, r18
     dc2:	11 92       	st	Z+, r1
     dc4:	41 50       	subi	r20, 0x01	; 1
     dc6:	50 40       	sbci	r21, 0x00	; 0
     dc8:	e1 f7       	brne	.-8      	; 0xdc2 <clear_buffer+0x8>
     dca:	08 95       	ret

00000dcc <drawchar>:
     dcc:	30 e0       	ldi	r19, 0x00	; 0
     dce:	f9 01       	movw	r30, r18
     dd0:	ee 0f       	add	r30, r30
     dd2:	ff 1f       	adc	r31, r31
     dd4:	ee 0f       	add	r30, r30
     dd6:	ff 1f       	adc	r31, r31
     dd8:	e2 0f       	add	r30, r18
     dda:	f3 1f       	adc	r31, r19
     ddc:	e8 59       	subi	r30, 0x98	; 152
     dde:	ff 4f       	sbci	r31, 0xFF	; 255
     de0:	55 e0       	ldi	r21, 0x05	; 5
     de2:	56 0f       	add	r21, r22
     de4:	9c 01       	movw	r18, r24
     de6:	70 e8       	ldi	r23, 0x80	; 128
     de8:	47 9f       	mul	r20, r23
     dea:	20 0d       	add	r18, r0
     dec:	31 1d       	adc	r19, r1
     dee:	11 24       	eor	r1, r1
     df0:	94 91       	lpm	r25, Z
     df2:	d9 01       	movw	r26, r18
     df4:	a6 0f       	add	r26, r22
     df6:	b1 1d       	adc	r27, r1
     df8:	9c 93       	st	X, r25
     dfa:	6f 5f       	subi	r22, 0xFF	; 255
     dfc:	31 96       	adiw	r30, 0x01	; 1
     dfe:	65 13       	cpse	r22, r21
     e00:	f7 cf       	rjmp	.-18     	; 0xdf0 <drawchar+0x24>
     e02:	08 95       	ret

00000e04 <setpixel>:
     e04:	66 23       	and	r22, r22
     e06:	14 f4       	brge	.+4      	; 0xe0c <setpixel+0x8>
     e08:	40 34       	cpi	r20, 0x40	; 64
     e0a:	e0 f5       	brcc	.+120    	; 0xe84 <setpixel+0x80>
     e0c:	21 30       	cpi	r18, 0x01	; 1
     e0e:	e9 f4       	brne	.+58     	; 0xe4a <setpixel+0x46>
     e10:	24 2f       	mov	r18, r20
     e12:	26 95       	lsr	r18
     e14:	26 95       	lsr	r18
     e16:	26 95       	lsr	r18
     e18:	70 e0       	ldi	r23, 0x00	; 0
     e1a:	30 e8       	ldi	r19, 0x80	; 128
     e1c:	23 9f       	mul	r18, r19
     e1e:	60 0d       	add	r22, r0
     e20:	71 1d       	adc	r23, r1
     e22:	11 24       	eor	r1, r1
     e24:	fc 01       	movw	r30, r24
     e26:	e6 0f       	add	r30, r22
     e28:	f7 1f       	adc	r31, r23
     e2a:	50 e0       	ldi	r21, 0x00	; 0
     e2c:	40 95       	com	r20
     e2e:	50 95       	com	r21
     e30:	47 70       	andi	r20, 0x07	; 7
     e32:	55 27       	eor	r21, r21
     e34:	81 e0       	ldi	r24, 0x01	; 1
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	02 c0       	rjmp	.+4      	; 0xe3e <setpixel+0x3a>
     e3a:	88 0f       	add	r24, r24
     e3c:	99 1f       	adc	r25, r25
     e3e:	4a 95       	dec	r20
     e40:	e2 f7       	brpl	.-8      	; 0xe3a <setpixel+0x36>
     e42:	90 81       	ld	r25, Z
     e44:	89 2b       	or	r24, r25
     e46:	80 83       	st	Z, r24
     e48:	08 95       	ret
     e4a:	24 2f       	mov	r18, r20
     e4c:	26 95       	lsr	r18
     e4e:	26 95       	lsr	r18
     e50:	26 95       	lsr	r18
     e52:	70 e0       	ldi	r23, 0x00	; 0
     e54:	30 e8       	ldi	r19, 0x80	; 128
     e56:	23 9f       	mul	r18, r19
     e58:	60 0d       	add	r22, r0
     e5a:	71 1d       	adc	r23, r1
     e5c:	11 24       	eor	r1, r1
     e5e:	fc 01       	movw	r30, r24
     e60:	e6 0f       	add	r30, r22
     e62:	f7 1f       	adc	r31, r23
     e64:	50 e0       	ldi	r21, 0x00	; 0
     e66:	40 95       	com	r20
     e68:	50 95       	com	r21
     e6a:	47 70       	andi	r20, 0x07	; 7
     e6c:	55 27       	eor	r21, r21
     e6e:	81 e0       	ldi	r24, 0x01	; 1
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <setpixel+0x74>
     e74:	88 0f       	add	r24, r24
     e76:	99 1f       	adc	r25, r25
     e78:	4a 95       	dec	r20
     e7a:	e2 f7       	brpl	.-8      	; 0xe74 <setpixel+0x70>
     e7c:	80 95       	com	r24
     e7e:	90 81       	ld	r25, Z
     e80:	89 23       	and	r24, r25
     e82:	80 83       	st	Z, r24
     e84:	08 95       	ret

00000e86 <drawstring>:
     e86:	ef 92       	push	r14
     e88:	ff 92       	push	r15
     e8a:	0f 93       	push	r16
     e8c:	1f 93       	push	r17
     e8e:	cf 93       	push	r28
     e90:	df 93       	push	r29
     e92:	7c 01       	movw	r14, r24
     e94:	c6 2f       	mov	r28, r22
     e96:	d4 2f       	mov	r29, r20
     e98:	89 01       	movw	r16, r18
     e9a:	10 c0       	rjmp	.+32     	; 0xebc <drawstring+0x36>
     e9c:	4d 2f       	mov	r20, r29
     e9e:	6c 2f       	mov	r22, r28
     ea0:	c7 01       	movw	r24, r14
     ea2:	0e 94 e6 06 	call	0xdcc	; 0xdcc <drawchar>
     ea6:	cb 5f       	subi	r28, 0xFB	; 251
     ea8:	8c 2f       	mov	r24, r28
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	05 96       	adiw	r24, 0x05	; 5
     eae:	81 38       	cpi	r24, 0x81	; 129
     eb0:	91 05       	cpc	r25, r1
     eb2:	0c f0       	brlt	.+2      	; 0xeb6 <drawstring+0x30>
     eb4:	df 5f       	subi	r29, 0xFF	; 255
     eb6:	d9 30       	cpi	r29, 0x09	; 9
     eb8:	08 f0       	brcs	.+2      	; 0xebc <drawstring+0x36>
     eba:	d0 e0       	ldi	r29, 0x00	; 0
     ebc:	f8 01       	movw	r30, r16
     ebe:	21 91       	ld	r18, Z+
     ec0:	8f 01       	movw	r16, r30
     ec2:	21 11       	cpse	r18, r1
     ec4:	eb cf       	rjmp	.-42     	; 0xe9c <drawstring+0x16>
     ec6:	df 91       	pop	r29
     ec8:	cf 91       	pop	r28
     eca:	1f 91       	pop	r17
     ecc:	0f 91       	pop	r16
     ece:	ff 90       	pop	r15
     ed0:	ef 90       	pop	r14
     ed2:	08 95       	ret

00000ed4 <drawline>:
     ed4:	6f 92       	push	r6
     ed6:	7f 92       	push	r7
     ed8:	8f 92       	push	r8
     eda:	9f 92       	push	r9
     edc:	af 92       	push	r10
     ede:	bf 92       	push	r11
     ee0:	cf 92       	push	r12
     ee2:	df 92       	push	r13
     ee4:	ef 92       	push	r14
     ee6:	ff 92       	push	r15
     ee8:	0f 93       	push	r16
     eea:	1f 93       	push	r17
     eec:	cf 93       	push	r28
     eee:	df 93       	push	r29
     ef0:	5c 01       	movw	r10, r24
     ef2:	c6 2f       	mov	r28, r22
     ef4:	14 2f       	mov	r17, r20
     ef6:	f2 2e       	mov	r15, r18
     ef8:	80 2f       	mov	r24, r16
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	84 1b       	sub	r24, r20
     efe:	91 09       	sbc	r25, r1
     f00:	6c 01       	movw	r12, r24
     f02:	22 f4       	brpl	.+8      	; 0xf0c <drawline+0x38>
     f04:	cc 24       	eor	r12, r12
     f06:	dd 24       	eor	r13, r13
     f08:	c8 1a       	sub	r12, r24
     f0a:	d9 0a       	sbc	r13, r25
     f0c:	8f 2d       	mov	r24, r15
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	8c 1b       	sub	r24, r28
     f12:	91 09       	sbc	r25, r1
     f14:	4c 01       	movw	r8, r24
     f16:	22 f4       	brpl	.+8      	; 0xf20 <drawline+0x4c>
     f18:	88 24       	eor	r8, r8
     f1a:	99 24       	eor	r9, r9
     f1c:	88 1a       	sub	r8, r24
     f1e:	99 0a       	sbc	r9, r25
     f20:	8c 14       	cp	r8, r12
     f22:	9d 04       	cpc	r9, r13
     f24:	34 f4       	brge	.+12     	; 0xf32 <drawline+0x5e>
     f26:	8f 2d       	mov	r24, r15
     f28:	f0 2e       	mov	r15, r16
     f2a:	08 2f       	mov	r16, r24
     f2c:	8c 2f       	mov	r24, r28
     f2e:	c1 2f       	mov	r28, r17
     f30:	18 2f       	mov	r17, r24
     f32:	fc 16       	cp	r15, r28
     f34:	a8 f1       	brcs	.+106    	; 0xfa0 <drawline+0xcc>
     f36:	6f 2c       	mov	r6, r15
     f38:	6c 1a       	sub	r6, r28
     f3a:	20 2f       	mov	r18, r16
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	21 1b       	sub	r18, r17
     f40:	31 09       	sbc	r19, r1
     f42:	c9 01       	movw	r24, r18
     f44:	99 23       	and	r25, r25
     f46:	24 f4       	brge	.+8      	; 0xf50 <drawline+0x7c>
     f48:	88 27       	eor	r24, r24
     f4a:	99 27       	eor	r25, r25
     f4c:	82 1b       	sub	r24, r18
     f4e:	93 0b       	sbc	r25, r19
     f50:	78 2e       	mov	r7, r24
     f52:	d6 2d       	mov	r29, r6
     f54:	d6 95       	lsr	r29
     f56:	10 17       	cp	r17, r16
     f58:	10 f4       	brcc	.+4      	; 0xf5e <drawline+0x8a>
     f5a:	01 e0       	ldi	r16, 0x01	; 1
     f5c:	01 c0       	rjmp	.+2      	; 0xf60 <drawline+0x8c>
     f5e:	0f ef       	ldi	r16, 0xFF	; 255
     f60:	cf 15       	cp	r28, r15
     f62:	30 f0       	brcs	.+12     	; 0xf70 <drawline+0x9c>
     f64:	35 c0       	rjmp	.+106    	; 0xfd0 <drawline+0xfc>
     f66:	10 2f       	mov	r17, r16
     f68:	8c 2f       	mov	r24, r28
     f6a:	cf 2d       	mov	r28, r15
     f6c:	f8 2e       	mov	r15, r24
     f6e:	0f ef       	ldi	r16, 0xFF	; 255
     f70:	8c 14       	cp	r8, r12
     f72:	9d 04       	cpc	r9, r13
     f74:	3c f4       	brge	.+14     	; 0xf84 <drawline+0xb0>
     f76:	2e 2d       	mov	r18, r14
     f78:	4c 2f       	mov	r20, r28
     f7a:	61 2f       	mov	r22, r17
     f7c:	c5 01       	movw	r24, r10
     f7e:	0e 94 02 07 	call	0xe04	; 0xe04 <setpixel>
     f82:	06 c0       	rjmp	.+12     	; 0xf90 <drawline+0xbc>
     f84:	2e 2d       	mov	r18, r14
     f86:	41 2f       	mov	r20, r17
     f88:	6c 2f       	mov	r22, r28
     f8a:	c5 01       	movw	r24, r10
     f8c:	0e 94 02 07 	call	0xe04	; 0xe04 <setpixel>
     f90:	d7 19       	sub	r29, r7
     f92:	12 f4       	brpl	.+4      	; 0xf98 <drawline+0xc4>
     f94:	10 0f       	add	r17, r16
     f96:	d6 0d       	add	r29, r6
     f98:	cf 5f       	subi	r28, 0xFF	; 255
     f9a:	cf 15       	cp	r28, r15
     f9c:	48 f3       	brcs	.-46     	; 0xf70 <drawline+0x9c>
     f9e:	18 c0       	rjmp	.+48     	; 0xfd0 <drawline+0xfc>
     fa0:	6c 2e       	mov	r6, r28
     fa2:	6f 18       	sub	r6, r15
     fa4:	21 2f       	mov	r18, r17
     fa6:	30 e0       	ldi	r19, 0x00	; 0
     fa8:	20 1b       	sub	r18, r16
     faa:	31 09       	sbc	r19, r1
     fac:	c9 01       	movw	r24, r18
     fae:	99 23       	and	r25, r25
     fb0:	24 f4       	brge	.+8      	; 0xfba <drawline+0xe6>
     fb2:	88 27       	eor	r24, r24
     fb4:	99 27       	eor	r25, r25
     fb6:	82 1b       	sub	r24, r18
     fb8:	93 0b       	sbc	r25, r19
     fba:	78 2e       	mov	r7, r24
     fbc:	d6 2d       	mov	r29, r6
     fbe:	d6 95       	lsr	r29
     fc0:	01 17       	cp	r16, r17
     fc2:	88 f6       	brcc	.-94     	; 0xf66 <drawline+0x92>
     fc4:	10 2f       	mov	r17, r16
     fc6:	8c 2f       	mov	r24, r28
     fc8:	cf 2d       	mov	r28, r15
     fca:	f8 2e       	mov	r15, r24
     fcc:	01 e0       	ldi	r16, 0x01	; 1
     fce:	d0 cf       	rjmp	.-96     	; 0xf70 <drawline+0x9c>
     fd0:	df 91       	pop	r29
     fd2:	cf 91       	pop	r28
     fd4:	1f 91       	pop	r17
     fd6:	0f 91       	pop	r16
     fd8:	ff 90       	pop	r15
     fda:	ef 90       	pop	r14
     fdc:	df 90       	pop	r13
     fde:	cf 90       	pop	r12
     fe0:	bf 90       	pop	r11
     fe2:	af 90       	pop	r10
     fe4:	9f 90       	pop	r9
     fe6:	8f 90       	pop	r8
     fe8:	7f 90       	pop	r7
     fea:	6f 90       	pop	r6
     fec:	08 95       	ret

00000fee <drawrect>:
     fee:	bf 92       	push	r11
     ff0:	cf 92       	push	r12
     ff2:	df 92       	push	r13
     ff4:	ef 92       	push	r14
     ff6:	ff 92       	push	r15
     ff8:	0f 93       	push	r16
     ffa:	1f 93       	push	r17
     ffc:	cf 93       	push	r28
     ffe:	df 93       	push	r29
    1000:	6c 01       	movw	r12, r24
    1002:	16 2f       	mov	r17, r22
    1004:	f4 2e       	mov	r15, r20
    1006:	c0 2f       	mov	r28, r16
    1008:	d6 2f       	mov	r29, r22
    100a:	d2 0f       	add	r29, r18
    100c:	04 2f       	mov	r16, r20
    100e:	2d 2f       	mov	r18, r29
    1010:	0e 94 6a 07 	call	0xed4	; 0xed4 <drawline>
    1014:	cf 0d       	add	r28, r15
    1016:	0c 2f       	mov	r16, r28
    1018:	2d 2f       	mov	r18, r29
    101a:	4f 2d       	mov	r20, r15
    101c:	6d 2f       	mov	r22, r29
    101e:	c6 01       	movw	r24, r12
    1020:	0e 94 6a 07 	call	0xed4	; 0xed4 <drawline>
    1024:	21 2f       	mov	r18, r17
    1026:	4c 2f       	mov	r20, r28
    1028:	6d 2f       	mov	r22, r29
    102a:	c6 01       	movw	r24, r12
    102c:	0e 94 6a 07 	call	0xed4	; 0xed4 <drawline>
    1030:	0f 2d       	mov	r16, r15
    1032:	21 2f       	mov	r18, r17
    1034:	4c 2f       	mov	r20, r28
    1036:	61 2f       	mov	r22, r17
    1038:	c6 01       	movw	r24, r12
    103a:	0e 94 6a 07 	call	0xed4	; 0xed4 <drawline>
    103e:	df 91       	pop	r29
    1040:	cf 91       	pop	r28
    1042:	1f 91       	pop	r17
    1044:	0f 91       	pop	r16
    1046:	ff 90       	pop	r15
    1048:	ef 90       	pop	r14
    104a:	df 90       	pop	r13
    104c:	cf 90       	pop	r12
    104e:	bf 90       	pop	r11
    1050:	08 95       	ret

00001052 <fillrect>:
    1052:	7f 92       	push	r7
    1054:	8f 92       	push	r8
    1056:	9f 92       	push	r9
    1058:	af 92       	push	r10
    105a:	bf 92       	push	r11
    105c:	cf 92       	push	r12
    105e:	df 92       	push	r13
    1060:	ef 92       	push	r14
    1062:	ff 92       	push	r15
    1064:	0f 93       	push	r16
    1066:	1f 93       	push	r17
    1068:	cf 93       	push	r28
    106a:	df 93       	push	r29
    106c:	6c 01       	movw	r12, r24
    106e:	86 2e       	mov	r8, r22
    1070:	a4 2e       	mov	r10, r20
    1072:	c2 2f       	mov	r28, r18
    1074:	d0 2f       	mov	r29, r16
    1076:	7e 2c       	mov	r7, r14
    1078:	0e 94 f7 07 	call	0xfee	; 0xfee <drawrect>
    107c:	b1 2c       	mov	r11, r1
    107e:	85 01       	movw	r16, r10
    1080:	0f 5f       	subi	r16, 0xFF	; 255
    1082:	1f 4f       	sbci	r17, 0xFF	; 255
    1084:	ad 0e       	add	r10, r29
    1086:	b1 1c       	adc	r11, r1
    1088:	0a 15       	cp	r16, r10
    108a:	1b 05       	cpc	r17, r11
    108c:	c4 f4       	brge	.+48     	; 0x10be <fillrect+0x6c>
    108e:	91 2c       	mov	r9, r1
    1090:	74 01       	movw	r14, r8
    1092:	ec 0e       	add	r14, r28
    1094:	f1 1c       	adc	r15, r1
    1096:	e4 01       	movw	r28, r8
    1098:	21 96       	adiw	r28, 0x01	; 1
    109a:	ce 15       	cp	r28, r14
    109c:	df 05       	cpc	r29, r15
    109e:	54 f4       	brge	.+20     	; 0x10b4 <fillrect+0x62>
    10a0:	27 2d       	mov	r18, r7
    10a2:	40 2f       	mov	r20, r16
    10a4:	6c 2f       	mov	r22, r28
    10a6:	c6 01       	movw	r24, r12
    10a8:	0e 94 02 07 	call	0xe04	; 0xe04 <setpixel>
    10ac:	21 96       	adiw	r28, 0x01	; 1
    10ae:	ce 15       	cp	r28, r14
    10b0:	df 05       	cpc	r29, r15
    10b2:	b4 f3       	brlt	.-20     	; 0x10a0 <fillrect+0x4e>
    10b4:	0f 5f       	subi	r16, 0xFF	; 255
    10b6:	1f 4f       	sbci	r17, 0xFF	; 255
    10b8:	0a 15       	cp	r16, r10
    10ba:	1b 05       	cpc	r17, r11
    10bc:	64 f3       	brlt	.-40     	; 0x1096 <fillrect+0x44>
    10be:	df 91       	pop	r29
    10c0:	cf 91       	pop	r28
    10c2:	1f 91       	pop	r17
    10c4:	0f 91       	pop	r16
    10c6:	ff 90       	pop	r15
    10c8:	ef 90       	pop	r14
    10ca:	df 90       	pop	r13
    10cc:	cf 90       	pop	r12
    10ce:	bf 90       	pop	r11
    10d0:	af 90       	pop	r10
    10d2:	9f 90       	pop	r9
    10d4:	8f 90       	pop	r8
    10d6:	7f 90       	pop	r7
    10d8:	08 95       	ret

000010da <drawcircle>:
    10da:	2f 92       	push	r2
    10dc:	3f 92       	push	r3
    10de:	4f 92       	push	r4
    10e0:	5f 92       	push	r5
    10e2:	6f 92       	push	r6
    10e4:	7f 92       	push	r7
    10e6:	8f 92       	push	r8
    10e8:	9f 92       	push	r9
    10ea:	af 92       	push	r10
    10ec:	bf 92       	push	r11
    10ee:	cf 92       	push	r12
    10f0:	df 92       	push	r13
    10f2:	ef 92       	push	r14
    10f4:	ff 92       	push	r15
    10f6:	0f 93       	push	r16
    10f8:	1f 93       	push	r17
    10fa:	cf 93       	push	r28
    10fc:	df 93       	push	r29
    10fe:	cd b7       	in	r28, 0x3d	; 61
    1100:	de b7       	in	r29, 0x3e	; 62
    1102:	29 97       	sbiw	r28, 0x09	; 9
    1104:	0f b6       	in	r0, 0x3f	; 63
    1106:	f8 94       	cli
    1108:	de bf       	out	0x3e, r29	; 62
    110a:	0f be       	out	0x3f, r0	; 63
    110c:	cd bf       	out	0x3d, r28	; 61
    110e:	30 e0       	ldi	r19, 0x00	; 0
    1110:	f9 01       	movw	r30, r18
    1112:	31 97       	sbiw	r30, 0x01	; 1
    1114:	f9 87       	std	Y+9, r31	; 0x09
    1116:	e8 87       	std	Y+8, r30	; 0x08
    1118:	f9 01       	movw	r30, r18
    111a:	ee 0f       	add	r30, r30
    111c:	ff 1f       	adc	r31, r31
    111e:	fd 83       	std	Y+5, r31	; 0x05
    1120:	ec 83       	std	Y+4, r30	; 0x04
    1122:	21 e0       	ldi	r18, 0x01	; 1
    1124:	30 e0       	ldi	r19, 0x00	; 0
    1126:	59 01       	movw	r10, r18
    1128:	ae 1a       	sub	r10, r30
    112a:	bf 0a       	sbc	r11, r31
    112c:	28 85       	ldd	r18, Y+8	; 0x08
    112e:	39 85       	ldd	r19, Y+9	; 0x09
    1130:	33 23       	and	r19, r19
    1132:	0c f4       	brge	.+2      	; 0x1136 <drawcircle+0x5c>
    1134:	77 c0       	rjmp	.+238    	; 0x1224 <drawcircle+0x14a>
    1136:	24 2e       	mov	r2, r20
    1138:	16 2f       	mov	r17, r22
    113a:	6c 01       	movw	r12, r24
    113c:	81 e0       	ldi	r24, 0x01	; 1
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	9f 83       	std	Y+7, r25	; 0x07
    1142:	8e 83       	std	Y+6, r24	; 0x06
    1144:	88 24       	eor	r8, r8
    1146:	83 94       	inc	r8
    1148:	91 2c       	mov	r9, r1
    114a:	e1 2c       	mov	r14, r1
    114c:	f1 2c       	mov	r15, r1
    114e:	20 2f       	mov	r18, r16
    1150:	72 2c       	mov	r7, r2
    1152:	7e 0c       	add	r7, r14
    1154:	47 2d       	mov	r20, r7
    1156:	98 85       	ldd	r25, Y+8	; 0x08
    1158:	91 0f       	add	r25, r17
    115a:	9a 83       	std	Y+2, r25	; 0x02
    115c:	69 2f       	mov	r22, r25
    115e:	c6 01       	movw	r24, r12
    1160:	0e 94 02 07 	call	0xe04	; 0xe04 <setpixel>
    1164:	20 2f       	mov	r18, r16
    1166:	e2 2d       	mov	r30, r2
    1168:	ee 19       	sub	r30, r14
    116a:	e9 83       	std	Y+1, r30	; 0x01
    116c:	4e 2f       	mov	r20, r30
    116e:	f1 2f       	mov	r31, r17
    1170:	38 85       	ldd	r19, Y+8	; 0x08
    1172:	f3 1b       	sub	r31, r19
    1174:	fb 83       	std	Y+3, r31	; 0x03
    1176:	6f 2f       	mov	r22, r31
    1178:	c6 01       	movw	r24, r12
    117a:	0e 94 02 07 	call	0xe04	; 0xe04 <setpixel>
    117e:	20 2f       	mov	r18, r16
    1180:	38 84       	ldd	r3, Y+8	; 0x08
    1182:	32 0c       	add	r3, r2
    1184:	43 2d       	mov	r20, r3
    1186:	61 2e       	mov	r6, r17
    1188:	6e 0c       	add	r6, r14
    118a:	66 2d       	mov	r22, r6
    118c:	c6 01       	movw	r24, r12
    118e:	0e 94 02 07 	call	0xe04	; 0xe04 <setpixel>
    1192:	20 2f       	mov	r18, r16
    1194:	52 2c       	mov	r5, r2
    1196:	88 85       	ldd	r24, Y+8	; 0x08
    1198:	58 1a       	sub	r5, r24
    119a:	45 2d       	mov	r20, r5
    119c:	41 2e       	mov	r4, r17
    119e:	4e 18       	sub	r4, r14
    11a0:	64 2d       	mov	r22, r4
    11a2:	c6 01       	movw	r24, r12
    11a4:	0e 94 02 07 	call	0xe04	; 0xe04 <setpixel>
    11a8:	20 2f       	mov	r18, r16
    11aa:	43 2d       	mov	r20, r3
    11ac:	64 2d       	mov	r22, r4
    11ae:	c6 01       	movw	r24, r12
    11b0:	0e 94 02 07 	call	0xe04	; 0xe04 <setpixel>
    11b4:	20 2f       	mov	r18, r16
    11b6:	45 2d       	mov	r20, r5
    11b8:	66 2d       	mov	r22, r6
    11ba:	c6 01       	movw	r24, r12
    11bc:	0e 94 02 07 	call	0xe04	; 0xe04 <setpixel>
    11c0:	20 2f       	mov	r18, r16
    11c2:	47 2d       	mov	r20, r7
    11c4:	6b 81       	ldd	r22, Y+3	; 0x03
    11c6:	c6 01       	movw	r24, r12
    11c8:	0e 94 02 07 	call	0xe04	; 0xe04 <setpixel>
    11cc:	20 2f       	mov	r18, r16
    11ce:	49 81       	ldd	r20, Y+1	; 0x01
    11d0:	6a 81       	ldd	r22, Y+2	; 0x02
    11d2:	c6 01       	movw	r24, r12
    11d4:	0e 94 02 07 	call	0xe04	; 0xe04 <setpixel>
    11d8:	1a 14       	cp	r1, r10
    11da:	1b 04       	cpc	r1, r11
    11dc:	6c f0       	brlt	.+26     	; 0x11f8 <drawcircle+0x11e>
    11de:	9f ef       	ldi	r25, 0xFF	; 255
    11e0:	e9 1a       	sub	r14, r25
    11e2:	f9 0a       	sbc	r15, r25
    11e4:	ee 81       	ldd	r30, Y+6	; 0x06
    11e6:	ff 81       	ldd	r31, Y+7	; 0x07
    11e8:	ae 0e       	add	r10, r30
    11ea:	bf 1e       	adc	r11, r31
    11ec:	32 96       	adiw	r30, 0x02	; 2
    11ee:	ff 83       	std	Y+7, r31	; 0x07
    11f0:	ee 83       	std	Y+6, r30	; 0x06
    11f2:	1a 14       	cp	r1, r10
    11f4:	1b 04       	cpc	r1, r11
    11f6:	84 f4       	brge	.+32     	; 0x1218 <drawcircle+0x13e>
    11f8:	28 85       	ldd	r18, Y+8	; 0x08
    11fa:	39 85       	ldd	r19, Y+9	; 0x09
    11fc:	21 50       	subi	r18, 0x01	; 1
    11fe:	31 09       	sbc	r19, r1
    1200:	39 87       	std	Y+9, r19	; 0x09
    1202:	28 87       	std	Y+8, r18	; 0x08
    1204:	32 e0       	ldi	r19, 0x02	; 2
    1206:	83 0e       	add	r8, r19
    1208:	91 1c       	adc	r9, r1
    120a:	c4 01       	movw	r24, r8
    120c:	ec 81       	ldd	r30, Y+4	; 0x04
    120e:	fd 81       	ldd	r31, Y+5	; 0x05
    1210:	8e 1b       	sub	r24, r30
    1212:	9f 0b       	sbc	r25, r31
    1214:	a8 0e       	add	r10, r24
    1216:	b9 1e       	adc	r11, r25
    1218:	28 85       	ldd	r18, Y+8	; 0x08
    121a:	39 85       	ldd	r19, Y+9	; 0x09
    121c:	2e 15       	cp	r18, r14
    121e:	3f 05       	cpc	r19, r15
    1220:	0c f0       	brlt	.+2      	; 0x1224 <drawcircle+0x14a>
    1222:	95 cf       	rjmp	.-214    	; 0x114e <drawcircle+0x74>
    1224:	29 96       	adiw	r28, 0x09	; 9
    1226:	0f b6       	in	r0, 0x3f	; 63
    1228:	f8 94       	cli
    122a:	de bf       	out	0x3e, r29	; 62
    122c:	0f be       	out	0x3f, r0	; 63
    122e:	cd bf       	out	0x3d, r28	; 61
    1230:	df 91       	pop	r29
    1232:	cf 91       	pop	r28
    1234:	1f 91       	pop	r17
    1236:	0f 91       	pop	r16
    1238:	ff 90       	pop	r15
    123a:	ef 90       	pop	r14
    123c:	df 90       	pop	r13
    123e:	cf 90       	pop	r12
    1240:	bf 90       	pop	r11
    1242:	af 90       	pop	r10
    1244:	9f 90       	pop	r9
    1246:	8f 90       	pop	r8
    1248:	7f 90       	pop	r7
    124a:	6f 90       	pop	r6
    124c:	5f 90       	pop	r5
    124e:	4f 90       	pop	r4
    1250:	3f 90       	pop	r3
    1252:	2f 90       	pop	r2
    1254:	08 95       	ret

00001256 <fillcircle>:
    1256:	2f 92       	push	r2
    1258:	3f 92       	push	r3
    125a:	4f 92       	push	r4
    125c:	5f 92       	push	r5
    125e:	6f 92       	push	r6
    1260:	7f 92       	push	r7
    1262:	8f 92       	push	r8
    1264:	9f 92       	push	r9
    1266:	af 92       	push	r10
    1268:	bf 92       	push	r11
    126a:	cf 92       	push	r12
    126c:	df 92       	push	r13
    126e:	ef 92       	push	r14
    1270:	ff 92       	push	r15
    1272:	0f 93       	push	r16
    1274:	1f 93       	push	r17
    1276:	cf 93       	push	r28
    1278:	df 93       	push	r29
    127a:	cd b7       	in	r28, 0x3d	; 61
    127c:	de b7       	in	r29, 0x3e	; 62
    127e:	2b 97       	sbiw	r28, 0x0b	; 11
    1280:	0f b6       	in	r0, 0x3f	; 63
    1282:	f8 94       	cli
    1284:	de bf       	out	0x3e, r29	; 62
    1286:	0f be       	out	0x3f, r0	; 63
    1288:	cd bf       	out	0x3d, r28	; 61
    128a:	30 e0       	ldi	r19, 0x00	; 0
    128c:	f9 01       	movw	r30, r18
    128e:	31 97       	sbiw	r30, 0x01	; 1
    1290:	fb 87       	std	Y+11, r31	; 0x0b
    1292:	ea 87       	std	Y+10, r30	; 0x0a
    1294:	f9 01       	movw	r30, r18
    1296:	ee 0f       	add	r30, r30
    1298:	ff 1f       	adc	r31, r31
    129a:	ff 83       	std	Y+7, r31	; 0x07
    129c:	ee 83       	std	Y+6, r30	; 0x06
    129e:	21 e0       	ldi	r18, 0x01	; 1
    12a0:	30 e0       	ldi	r19, 0x00	; 0
    12a2:	59 01       	movw	r10, r18
    12a4:	ae 1a       	sub	r10, r30
    12a6:	bf 0a       	sbc	r11, r31
    12a8:	2a 85       	ldd	r18, Y+10	; 0x0a
    12aa:	3b 85       	ldd	r19, Y+11	; 0x0b
    12ac:	33 23       	and	r19, r19
    12ae:	0c f4       	brge	.+2      	; 0x12b2 <fillcircle+0x5c>
    12b0:	69 c0       	rjmp	.+210    	; 0x1384 <fillcircle+0x12e>
    12b2:	9d 83       	std	Y+5, r25	; 0x05
    12b4:	8c 83       	std	Y+4, r24	; 0x04
    12b6:	81 e0       	ldi	r24, 0x01	; 1
    12b8:	90 e0       	ldi	r25, 0x00	; 0
    12ba:	99 87       	std	Y+9, r25	; 0x09
    12bc:	88 87       	std	Y+8, r24	; 0x08
    12be:	22 24       	eor	r2, r2
    12c0:	23 94       	inc	r2
    12c2:	31 2c       	mov	r3, r1
    12c4:	c1 2c       	mov	r12, r1
    12c6:	d1 2c       	mov	r13, r1
    12c8:	f4 2e       	mov	r15, r20
    12ca:	90 2e       	mov	r9, r16
    12cc:	16 2f       	mov	r17, r22
    12ce:	e9 2c       	mov	r14, r9
    12d0:	7f 2c       	mov	r7, r15
    12d2:	7c 18       	sub	r7, r12
    12d4:	07 2d       	mov	r16, r7
    12d6:	91 2f       	mov	r25, r17
    12d8:	ea 85       	ldd	r30, Y+10	; 0x0a
    12da:	9e 1b       	sub	r25, r30
    12dc:	9a 83       	std	Y+2, r25	; 0x02
    12de:	29 2f       	mov	r18, r25
    12e0:	ff 2d       	mov	r31, r15
    12e2:	fc 0d       	add	r31, r12
    12e4:	fb 83       	std	Y+3, r31	; 0x03
    12e6:	4f 2f       	mov	r20, r31
    12e8:	8e 2e       	mov	r8, r30
    12ea:	81 0e       	add	r8, r17
    12ec:	68 2d       	mov	r22, r8
    12ee:	8c 81       	ldd	r24, Y+4	; 0x04
    12f0:	9d 81       	ldd	r25, Y+5	; 0x05
    12f2:	0e 94 6a 07 	call	0xed4	; 0xed4 <drawline>
    12f6:	4f 2c       	mov	r4, r15
    12f8:	2a 85       	ldd	r18, Y+10	; 0x0a
    12fa:	42 1a       	sub	r4, r18
    12fc:	04 2d       	mov	r16, r4
    12fe:	61 2e       	mov	r6, r17
    1300:	6c 18       	sub	r6, r12
    1302:	26 2d       	mov	r18, r6
    1304:	3a 85       	ldd	r19, Y+10	; 0x0a
    1306:	3f 0d       	add	r19, r15
    1308:	39 83       	std	Y+1, r19	; 0x01
    130a:	43 2f       	mov	r20, r19
    130c:	51 2e       	mov	r5, r17
    130e:	5c 0c       	add	r5, r12
    1310:	65 2d       	mov	r22, r5
    1312:	8c 81       	ldd	r24, Y+4	; 0x04
    1314:	9d 81       	ldd	r25, Y+5	; 0x05
    1316:	0e 94 6a 07 	call	0xed4	; 0xed4 <drawline>
    131a:	25 2d       	mov	r18, r5
    131c:	49 81       	ldd	r20, Y+1	; 0x01
    131e:	66 2d       	mov	r22, r6
    1320:	8c 81       	ldd	r24, Y+4	; 0x04
    1322:	9d 81       	ldd	r25, Y+5	; 0x05
    1324:	0e 94 6a 07 	call	0xed4	; 0xed4 <drawline>
    1328:	07 2d       	mov	r16, r7
    132a:	28 2d       	mov	r18, r8
    132c:	4b 81       	ldd	r20, Y+3	; 0x03
    132e:	6a 81       	ldd	r22, Y+2	; 0x02
    1330:	8c 81       	ldd	r24, Y+4	; 0x04
    1332:	9d 81       	ldd	r25, Y+5	; 0x05
    1334:	0e 94 6a 07 	call	0xed4	; 0xed4 <drawline>
    1338:	1a 14       	cp	r1, r10
    133a:	1b 04       	cpc	r1, r11
    133c:	6c f0       	brlt	.+26     	; 0x1358 <fillcircle+0x102>
    133e:	8f ef       	ldi	r24, 0xFF	; 255
    1340:	c8 1a       	sub	r12, r24
    1342:	d8 0a       	sbc	r13, r24
    1344:	e8 85       	ldd	r30, Y+8	; 0x08
    1346:	f9 85       	ldd	r31, Y+9	; 0x09
    1348:	ae 0e       	add	r10, r30
    134a:	bf 1e       	adc	r11, r31
    134c:	32 96       	adiw	r30, 0x02	; 2
    134e:	f9 87       	std	Y+9, r31	; 0x09
    1350:	e8 87       	std	Y+8, r30	; 0x08
    1352:	1a 14       	cp	r1, r10
    1354:	1b 04       	cpc	r1, r11
    1356:	84 f4       	brge	.+32     	; 0x1378 <fillcircle+0x122>
    1358:	2a 85       	ldd	r18, Y+10	; 0x0a
    135a:	3b 85       	ldd	r19, Y+11	; 0x0b
    135c:	21 50       	subi	r18, 0x01	; 1
    135e:	31 09       	sbc	r19, r1
    1360:	3b 87       	std	Y+11, r19	; 0x0b
    1362:	2a 87       	std	Y+10, r18	; 0x0a
    1364:	32 e0       	ldi	r19, 0x02	; 2
    1366:	23 0e       	add	r2, r19
    1368:	31 1c       	adc	r3, r1
    136a:	c1 01       	movw	r24, r2
    136c:	ee 81       	ldd	r30, Y+6	; 0x06
    136e:	ff 81       	ldd	r31, Y+7	; 0x07
    1370:	8e 1b       	sub	r24, r30
    1372:	9f 0b       	sbc	r25, r31
    1374:	a8 0e       	add	r10, r24
    1376:	b9 1e       	adc	r11, r25
    1378:	2a 85       	ldd	r18, Y+10	; 0x0a
    137a:	3b 85       	ldd	r19, Y+11	; 0x0b
    137c:	2c 15       	cp	r18, r12
    137e:	3d 05       	cpc	r19, r13
    1380:	0c f0       	brlt	.+2      	; 0x1384 <fillcircle+0x12e>
    1382:	a5 cf       	rjmp	.-182    	; 0x12ce <fillcircle+0x78>
    1384:	2b 96       	adiw	r28, 0x0b	; 11
    1386:	0f b6       	in	r0, 0x3f	; 63
    1388:	f8 94       	cli
    138a:	de bf       	out	0x3e, r29	; 62
    138c:	0f be       	out	0x3f, r0	; 63
    138e:	cd bf       	out	0x3d, r28	; 61
    1390:	df 91       	pop	r29
    1392:	cf 91       	pop	r28
    1394:	1f 91       	pop	r17
    1396:	0f 91       	pop	r16
    1398:	ff 90       	pop	r15
    139a:	ef 90       	pop	r14
    139c:	df 90       	pop	r13
    139e:	cf 90       	pop	r12
    13a0:	bf 90       	pop	r11
    13a2:	af 90       	pop	r10
    13a4:	9f 90       	pop	r9
    13a6:	8f 90       	pop	r8
    13a8:	7f 90       	pop	r7
    13aa:	6f 90       	pop	r6
    13ac:	5f 90       	pop	r5
    13ae:	4f 90       	pop	r4
    13b0:	3f 90       	pop	r3
    13b2:	2f 90       	pop	r2
    13b4:	08 95       	ret

000013b6 <drawBorders>:
    13b6:	ef 92       	push	r14
    13b8:	0f 93       	push	r16
    13ba:	cf 93       	push	r28
    13bc:	e8 2e       	mov	r14, r24
    13be:	00 e0       	ldi	r16, 0x00	; 0
    13c0:	2f e7       	ldi	r18, 0x7F	; 127
    13c2:	40 e0       	ldi	r20, 0x00	; 0
    13c4:	60 e0       	ldi	r22, 0x00	; 0
    13c6:	88 e1       	ldi	r24, 0x18	; 24
    13c8:	91 e0       	ldi	r25, 0x01	; 1
    13ca:	0e 94 6a 07 	call	0xed4	; 0xed4 <drawline>
    13ce:	0f e3       	ldi	r16, 0x3F	; 63
    13d0:	20 e0       	ldi	r18, 0x00	; 0
    13d2:	40 e0       	ldi	r20, 0x00	; 0
    13d4:	60 e0       	ldi	r22, 0x00	; 0
    13d6:	88 e1       	ldi	r24, 0x18	; 24
    13d8:	91 e0       	ldi	r25, 0x01	; 1
    13da:	0e 94 6a 07 	call	0xed4	; 0xed4 <drawline>
    13de:	2f e7       	ldi	r18, 0x7F	; 127
    13e0:	4f e3       	ldi	r20, 0x3F	; 63
    13e2:	60 e0       	ldi	r22, 0x00	; 0
    13e4:	88 e1       	ldi	r24, 0x18	; 24
    13e6:	91 e0       	ldi	r25, 0x01	; 1
    13e8:	0e 94 6a 07 	call	0xed4	; 0xed4 <drawline>
    13ec:	00 e0       	ldi	r16, 0x00	; 0
    13ee:	2f e7       	ldi	r18, 0x7F	; 127
    13f0:	4f e3       	ldi	r20, 0x3F	; 63
    13f2:	6f e7       	ldi	r22, 0x7F	; 127
    13f4:	88 e1       	ldi	r24, 0x18	; 24
    13f6:	91 e0       	ldi	r25, 0x01	; 1
    13f8:	0e 94 6a 07 	call	0xed4	; 0xed4 <drawline>
    13fc:	cf 91       	pop	r28
    13fe:	0f 91       	pop	r16
    1400:	ef 90       	pop	r14
    1402:	08 95       	ret

00001404 <drawHomePage>:

void drawHomePage(uint8_t BLACK){
    1404:	ef 92       	push	r14
    1406:	0f 93       	push	r16
    1408:	cf 93       	push	r28
    140a:	c8 2f       	mov	r28, r24
	drawBorders(BLACK);
    140c:	0e 94 db 09 	call	0x13b6	; 0x13b6 <drawBorders>
	
	drawstring(buff,35,7,"Lets Play!!!");
    1410:	2d e8       	ldi	r18, 0x8D	; 141
    1412:	35 e0       	ldi	r19, 0x05	; 5
    1414:	47 e0       	ldi	r20, 0x07	; 7
    1416:	63 e2       	ldi	r22, 0x23	; 35
    1418:	88 e1       	ldi	r24, 0x18	; 24
    141a:	91 e0       	ldi	r25, 0x01	; 1
    141c:	0e 94 43 07 	call	0xe86	; 0xe86 <drawstring>
	//fillrect(buff,12,5,80,40,BLACK);
	drawcircle(buff,64,32,20,BLACK);
    1420:	0c 2f       	mov	r16, r28
    1422:	24 e1       	ldi	r18, 0x14	; 20
    1424:	40 e2       	ldi	r20, 0x20	; 32
    1426:	60 e4       	ldi	r22, 0x40	; 64
    1428:	88 e1       	ldi	r24, 0x18	; 24
    142a:	91 e0       	ldi	r25, 0x01	; 1
    142c:	0e 94 6d 08 	call	0x10da	; 0x10da <drawcircle>
	//mouth
	drawcircle(buff,64,40,7,BLACK);
    1430:	27 e0       	ldi	r18, 0x07	; 7
    1432:	48 e2       	ldi	r20, 0x28	; 40
    1434:	60 e4       	ldi	r22, 0x40	; 64
    1436:	88 e1       	ldi	r24, 0x18	; 24
    1438:	91 e0       	ldi	r25, 0x01	; 1
    143a:	0e 94 6d 08 	call	0x10da	; 0x10da <drawcircle>
	//eye left
	drawcircle(buff,56,23,5,BLACK);
    143e:	25 e0       	ldi	r18, 0x05	; 5
    1440:	47 e1       	ldi	r20, 0x17	; 23
    1442:	68 e3       	ldi	r22, 0x38	; 56
    1444:	88 e1       	ldi	r24, 0x18	; 24
    1446:	91 e0       	ldi	r25, 0x01	; 1
    1448:	0e 94 6d 08 	call	0x10da	; 0x10da <drawcircle>
	fillcircle(buff,56,23,3,BLACK);
    144c:	23 e0       	ldi	r18, 0x03	; 3
    144e:	47 e1       	ldi	r20, 0x17	; 23
    1450:	68 e3       	ldi	r22, 0x38	; 56
    1452:	88 e1       	ldi	r24, 0x18	; 24
    1454:	91 e0       	ldi	r25, 0x01	; 1
    1456:	0e 94 2b 09 	call	0x1256	; 0x1256 <fillcircle>
	//eye right
	drawcircle(buff,72,23,5,BLACK);
    145a:	25 e0       	ldi	r18, 0x05	; 5
    145c:	47 e1       	ldi	r20, 0x17	; 23
    145e:	68 e4       	ldi	r22, 0x48	; 72
    1460:	88 e1       	ldi	r24, 0x18	; 24
    1462:	91 e0       	ldi	r25, 0x01	; 1
    1464:	0e 94 6d 08 	call	0x10da	; 0x10da <drawcircle>
	fillcircle(buff,72,23,3,BLACK);
    1468:	23 e0       	ldi	r18, 0x03	; 3
    146a:	47 e1       	ldi	r20, 0x17	; 23
    146c:	68 e4       	ldi	r22, 0x48	; 72
    146e:	88 e1       	ldi	r24, 0x18	; 24
    1470:	91 e0       	ldi	r25, 0x01	; 1
    1472:	0e 94 2b 09 	call	0x1256	; 0x1256 <fillcircle>
	// draw big dummy peddles
	drawrect(buff,6,15,5,33,BLACK);
    1476:	ec 2e       	mov	r14, r28
    1478:	01 e2       	ldi	r16, 0x21	; 33
    147a:	25 e0       	ldi	r18, 0x05	; 5
    147c:	4f e0       	ldi	r20, 0x0F	; 15
    147e:	66 e0       	ldi	r22, 0x06	; 6
    1480:	88 e1       	ldi	r24, 0x18	; 24
    1482:	91 e0       	ldi	r25, 0x01	; 1
    1484:	0e 94 f7 07 	call	0xfee	; 0xfee <drawrect>
	drawrect(buff,115,15,5,33,BLACK);
    1488:	25 e0       	ldi	r18, 0x05	; 5
    148a:	4f e0       	ldi	r20, 0x0F	; 15
    148c:	63 e7       	ldi	r22, 0x73	; 115
    148e:	88 e1       	ldi	r24, 0x18	; 24
    1490:	91 e0       	ldi	r25, 0x01	; 1
    1492:	0e 94 f7 07 	call	0xfee	; 0xfee <drawrect>
}
    1496:	cf 91       	pop	r28
    1498:	0f 91       	pop	r16
    149a:	ef 90       	pop	r14
    149c:	08 95       	ret

0000149e <drawModeSelection>:

void drawModeSelection(uint8_t color){
    149e:	ef 92       	push	r14
    14a0:	0f 93       	push	r16
    14a2:	cf 93       	push	r28
    14a4:	c8 2f       	mov	r28, r24
	clear_buffer(buff);
    14a6:	88 e1       	ldi	r24, 0x18	; 24
    14a8:	91 e0       	ldi	r25, 0x01	; 1
    14aa:	0e 94 dd 06 	call	0xdba	; 0xdba <clear_buffer>
	drawrect(buff,5,5,55,12,color);
    14ae:	ec 2e       	mov	r14, r28
    14b0:	0c e0       	ldi	r16, 0x0C	; 12
    14b2:	27 e3       	ldi	r18, 0x37	; 55
    14b4:	45 e0       	ldi	r20, 0x05	; 5
    14b6:	65 e0       	ldi	r22, 0x05	; 5
    14b8:	88 e1       	ldi	r24, 0x18	; 24
    14ba:	91 e0       	ldi	r25, 0x01	; 1
    14bc:	0e 94 f7 07 	call	0xfee	; 0xfee <drawrect>
	drawstring(buff,7,1,"1 Player");
    14c0:	2a e9       	ldi	r18, 0x9A	; 154
    14c2:	35 e0       	ldi	r19, 0x05	; 5
    14c4:	41 e0       	ldi	r20, 0x01	; 1
    14c6:	67 e0       	ldi	r22, 0x07	; 7
    14c8:	88 e1       	ldi	r24, 0x18	; 24
    14ca:	91 e0       	ldi	r25, 0x01	; 1
    14cc:	0e 94 43 07 	call	0xe86	; 0xe86 <drawstring>
	drawrect(buff,65,5,55,12,color);
    14d0:	27 e3       	ldi	r18, 0x37	; 55
    14d2:	45 e0       	ldi	r20, 0x05	; 5
    14d4:	61 e4       	ldi	r22, 0x41	; 65
    14d6:	88 e1       	ldi	r24, 0x18	; 24
    14d8:	91 e0       	ldi	r25, 0x01	; 1
    14da:	0e 94 f7 07 	call	0xfee	; 0xfee <drawrect>
	drawstring(buff,67,1,"2 Player");
    14de:	23 ea       	ldi	r18, 0xA3	; 163
    14e0:	35 e0       	ldi	r19, 0x05	; 5
    14e2:	41 e0       	ldi	r20, 0x01	; 1
    14e4:	63 e4       	ldi	r22, 0x43	; 67
    14e6:	88 e1       	ldi	r24, 0x18	; 24
    14e8:	91 e0       	ldi	r25, 0x01	; 1
    14ea:	0e 94 43 07 	call	0xe86	; 0xe86 <drawstring>
}
    14ee:	cf 91       	pop	r28
    14f0:	0f 91       	pop	r16
    14f2:	ef 90       	pop	r14
    14f4:	08 95       	ret

000014f6 <drawSpeedSelection>:

void drawSpeedSelection(uint8_t color){
    14f6:	ef 92       	push	r14
    14f8:	0f 93       	push	r16
    14fa:	cf 93       	push	r28
    14fc:	c8 2f       	mov	r28, r24
	clear_buffer(buff);
    14fe:	88 e1       	ldi	r24, 0x18	; 24
    1500:	91 e0       	ldi	r25, 0x01	; 1
    1502:	0e 94 dd 06 	call	0xdba	; 0xdba <clear_buffer>
	drawrect(buff,5,5,35,12,color);
    1506:	ec 2e       	mov	r14, r28
    1508:	0c e0       	ldi	r16, 0x0C	; 12
    150a:	23 e2       	ldi	r18, 0x23	; 35
    150c:	45 e0       	ldi	r20, 0x05	; 5
    150e:	65 e0       	ldi	r22, 0x05	; 5
    1510:	88 e1       	ldi	r24, 0x18	; 24
    1512:	91 e0       	ldi	r25, 0x01	; 1
    1514:	0e 94 f7 07 	call	0xfee	; 0xfee <drawrect>
	drawstring(buff,7,1,"Easy");
    1518:	2c ea       	ldi	r18, 0xAC	; 172
    151a:	35 e0       	ldi	r19, 0x05	; 5
    151c:	41 e0       	ldi	r20, 0x01	; 1
    151e:	67 e0       	ldi	r22, 0x07	; 7
    1520:	88 e1       	ldi	r24, 0x18	; 24
    1522:	91 e0       	ldi	r25, 0x01	; 1
    1524:	0e 94 43 07 	call	0xe86	; 0xe86 <drawstring>
	drawrect(buff,45,5,35,12,color);
    1528:	23 e2       	ldi	r18, 0x23	; 35
    152a:	45 e0       	ldi	r20, 0x05	; 5
    152c:	6d e2       	ldi	r22, 0x2D	; 45
    152e:	88 e1       	ldi	r24, 0x18	; 24
    1530:	91 e0       	ldi	r25, 0x01	; 1
    1532:	0e 94 f7 07 	call	0xfee	; 0xfee <drawrect>
	drawstring(buff,47,1,"Medium");
    1536:	21 eb       	ldi	r18, 0xB1	; 177
    1538:	35 e0       	ldi	r19, 0x05	; 5
    153a:	41 e0       	ldi	r20, 0x01	; 1
    153c:	6f e2       	ldi	r22, 0x2F	; 47
    153e:	88 e1       	ldi	r24, 0x18	; 24
    1540:	91 e0       	ldi	r25, 0x01	; 1
    1542:	0e 94 43 07 	call	0xe86	; 0xe86 <drawstring>
	drawrect(buff,85,5,35,12,color);
    1546:	23 e2       	ldi	r18, 0x23	; 35
    1548:	45 e0       	ldi	r20, 0x05	; 5
    154a:	65 e5       	ldi	r22, 0x55	; 85
    154c:	88 e1       	ldi	r24, 0x18	; 24
    154e:	91 e0       	ldi	r25, 0x01	; 1
    1550:	0e 94 f7 07 	call	0xfee	; 0xfee <drawrect>
	drawstring(buff,87,1,"Hard");
    1554:	28 eb       	ldi	r18, 0xB8	; 184
    1556:	35 e0       	ldi	r19, 0x05	; 5
    1558:	41 e0       	ldi	r20, 0x01	; 1
    155a:	67 e5       	ldi	r22, 0x57	; 87
    155c:	88 e1       	ldi	r24, 0x18	; 24
    155e:	91 e0       	ldi	r25, 0x01	; 1
    1560:	0e 94 43 07 	call	0xe86	; 0xe86 <drawstring>
}
    1564:	cf 91       	pop	r28
    1566:	0f 91       	pop	r16
    1568:	ef 90       	pop	r14
    156a:	08 95       	ret

0000156c <drawPauseScreen>:

void drawPauseScreen(uint8_t color){
    156c:	08 95       	ret

0000156e <drawPaddle>:
	drawPaddle(2, color);
	write_buffer(buff);
	_delay_ms(3500);
}

void drawPaddle(uint8_t paddle, uint8_t color){
    156e:	ef 92       	push	r14
    1570:	0f 93       	push	r16
	if(paddle == 1){
    1572:	81 30       	cpi	r24, 0x01	; 1
    1574:	31 f5       	brne	.+76     	; 0x15c2 <drawPaddle+0x54>
		if(paddle1Y + 10 > 62){
    1576:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <paddle1Y>
    157a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <paddle1Y+0x1>
    157e:	0a 96       	adiw	r24, 0x0a	; 10
    1580:	cf 97       	sbiw	r24, 0x3f	; 63
    1582:	30 f0       	brcs	.+12     	; 0x1590 <drawPaddle+0x22>
			paddle1Y = 52;
    1584:	84 e3       	ldi	r24, 0x34	; 52
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <paddle1Y+0x1>
    158c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <paddle1Y>
		}
		if(paddle1Y < 8){
    1590:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <paddle1Y>
    1594:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <paddle1Y+0x1>
    1598:	08 97       	sbiw	r24, 0x08	; 8
    159a:	30 f4       	brcc	.+12     	; 0x15a8 <drawPaddle+0x3a>
			paddle1Y = 9;
    159c:	89 e0       	ldi	r24, 0x09	; 9
    159e:	90 e0       	ldi	r25, 0x00	; 0
    15a0:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <paddle1Y+0x1>
    15a4:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <paddle1Y>
		}
		fillrect(buff, 3, paddle1Y, 3, 10, color);
    15a8:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <paddle1Y>
    15ac:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <paddle1Y+0x1>
    15b0:	e6 2e       	mov	r14, r22
    15b2:	0a e0       	ldi	r16, 0x0A	; 10
    15b4:	23 e0       	ldi	r18, 0x03	; 3
    15b6:	63 e0       	ldi	r22, 0x03	; 3
    15b8:	88 e1       	ldi	r24, 0x18	; 24
    15ba:	91 e0       	ldi	r25, 0x01	; 1
    15bc:	0e 94 29 08 	call	0x1052	; 0x1052 <fillrect>
    15c0:	25 c0       	rjmp	.+74     	; 0x160c <drawPaddle+0x9e>
	}else{
		if(paddle2Y + 10 > 62){
    15c2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    15c6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    15ca:	0a 96       	adiw	r24, 0x0a	; 10
    15cc:	cf 97       	sbiw	r24, 0x3f	; 63
    15ce:	30 f0       	brcs	.+12     	; 0x15dc <drawPaddle+0x6e>
			paddle2Y = 52;
    15d0:	84 e3       	ldi	r24, 0x34	; 52
    15d2:	90 e0       	ldi	r25, 0x00	; 0
    15d4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    15d8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		}
		if(paddle2Y < 8){
    15dc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    15e0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    15e4:	08 97       	sbiw	r24, 0x08	; 8
    15e6:	30 f4       	brcc	.+12     	; 0x15f4 <drawPaddle+0x86>
			paddle2Y = 9;
    15e8:	89 e0       	ldi	r24, 0x09	; 9
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    15f0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		}
		fillrect(buff, 122, paddle2Y, 3, 10, color);
    15f4:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    15f8:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    15fc:	e6 2e       	mov	r14, r22
    15fe:	0a e0       	ldi	r16, 0x0A	; 10
    1600:	23 e0       	ldi	r18, 0x03	; 3
    1602:	6a e7       	ldi	r22, 0x7A	; 122
    1604:	88 e1       	ldi	r24, 0x18	; 24
    1606:	91 e0       	ldi	r25, 0x01	; 1
    1608:	0e 94 29 08 	call	0x1052	; 0x1052 <fillrect>
	}	
}
    160c:	0f 91       	pop	r16
    160e:	ef 90       	pop	r14
    1610:	08 95       	ret

00001612 <playerInfo>:
	drawrect(buff,3,8,122,54, BLACK);
	fillcircle(buff,64,32,3,BLACK);
	playerInfo(BLACK);
}

void playerInfo(uint8_t color){
    1612:	cf 92       	push	r12
    1614:	df 92       	push	r13
    1616:	ef 92       	push	r14
    1618:	ff 92       	push	r15
    161a:	0f 93       	push	r16
    161c:	1f 93       	push	r17
    161e:	cf 93       	push	r28
    1620:	df 93       	push	r29
    1622:	cd b7       	in	r28, 0x3d	; 61
    1624:	de b7       	in	r29, 0x3e	; 62
    1626:	64 97       	sbiw	r28, 0x14	; 20
    1628:	0f b6       	in	r0, 0x3f	; 63
    162a:	f8 94       	cli
    162c:	de bf       	out	0x3e, r29	; 62
    162e:	0f be       	out	0x3f, r0	; 63
    1630:	cd bf       	out	0x3d, r28	; 61
    1632:	f8 2e       	mov	r15, r24
	drawstring(buff, 2,0, "Player 1");
    1634:	2d eb       	ldi	r18, 0xBD	; 189
    1636:	35 e0       	ldi	r19, 0x05	; 5
    1638:	40 e0       	ldi	r20, 0x00	; 0
    163a:	62 e0       	ldi	r22, 0x02	; 2
    163c:	88 e1       	ldi	r24, 0x18	; 24
    163e:	91 e0       	ldi	r25, 0x01	; 1
    1640:	0e 94 43 07 	call	0xe86	; 0xe86 <drawstring>
	drawstring(buff, 84,0, "Player 2");
    1644:	26 ec       	ldi	r18, 0xC6	; 198
    1646:	35 e0       	ldi	r19, 0x05	; 5
    1648:	40 e0       	ldi	r20, 0x00	; 0
    164a:	64 e5       	ldi	r22, 0x54	; 84
    164c:	88 e1       	ldi	r24, 0x18	; 24
    164e:	91 e0       	ldi	r25, 0x01	; 1
    1650:	0e 94 43 07 	call	0xe86	; 0xe86 <drawstring>
	char scoreP1[10];
	sprintf(scoreP1,"%d",p1Score);
    1654:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <p1Score>
    1658:	1f 92       	push	r1
    165a:	8f 93       	push	r24
    165c:	0f ec       	ldi	r16, 0xCF	; 207
    165e:	15 e0       	ldi	r17, 0x05	; 5
    1660:	1f 93       	push	r17
    1662:	0f 93       	push	r16
    1664:	ce 01       	movw	r24, r28
    1666:	01 96       	adiw	r24, 0x01	; 1
    1668:	6c 01       	movw	r12, r24
    166a:	9f 93       	push	r25
    166c:	8f 93       	push	r24
    166e:	0e 94 8f 0e 	call	0x1d1e	; 0x1d1e <sprintf>
	char scoreP2[10];
	sprintf(scoreP2,"%d",p2Score);
    1672:	80 91 f6 05 	lds	r24, 0x05F6	; 0x8005f6 <p2Score>
    1676:	1f 92       	push	r1
    1678:	8f 93       	push	r24
    167a:	1f 93       	push	r17
    167c:	0f 93       	push	r16
    167e:	8e 01       	movw	r16, r28
    1680:	05 5f       	subi	r16, 0xF5	; 245
    1682:	1f 4f       	sbci	r17, 0xFF	; 255
    1684:	1f 93       	push	r17
    1686:	0f 93       	push	r16
    1688:	0e 94 8f 0e 	call	0x1d1e	; 0x1d1e <sprintf>
	drawstring(buff,56,0,scoreP1);
    168c:	96 01       	movw	r18, r12
    168e:	40 e0       	ldi	r20, 0x00	; 0
    1690:	68 e3       	ldi	r22, 0x38	; 56
    1692:	88 e1       	ldi	r24, 0x18	; 24
    1694:	91 e0       	ldi	r25, 0x01	; 1
    1696:	0e 94 43 07 	call	0xe86	; 0xe86 <drawstring>
	drawstring(buff,67,0,scoreP2);
    169a:	98 01       	movw	r18, r16
    169c:	40 e0       	ldi	r20, 0x00	; 0
    169e:	63 e4       	ldi	r22, 0x43	; 67
    16a0:	88 e1       	ldi	r24, 0x18	; 24
    16a2:	91 e0       	ldi	r25, 0x01	; 1
    16a4:	0e 94 43 07 	call	0xe86	; 0xe86 <drawstring>
	drawline(buff,64,0,64,8,color);
    16a8:	ef 2c       	mov	r14, r15
    16aa:	08 e0       	ldi	r16, 0x08	; 8
    16ac:	20 e4       	ldi	r18, 0x40	; 64
    16ae:	40 e0       	ldi	r20, 0x00	; 0
    16b0:	60 e4       	ldi	r22, 0x40	; 64
    16b2:	88 e1       	ldi	r24, 0x18	; 24
    16b4:	91 e0       	ldi	r25, 0x01	; 1
    16b6:	0e 94 6a 07 	call	0xed4	; 0xed4 <drawline>
	drawPaddle(1, color);
    16ba:	6f 2d       	mov	r22, r15
    16bc:	81 e0       	ldi	r24, 0x01	; 1
    16be:	0e 94 b7 0a 	call	0x156e	; 0x156e <drawPaddle>
	drawPaddle(2, color);
    16c2:	6f 2d       	mov	r22, r15
    16c4:	82 e0       	ldi	r24, 0x02	; 2
    16c6:	0e 94 b7 0a 	call	0x156e	; 0x156e <drawPaddle>
	write_buffer(buff);
    16ca:	88 e1       	ldi	r24, 0x18	; 24
    16cc:	91 e0       	ldi	r25, 0x01	; 1
    16ce:	0e 94 9e 06 	call	0xd3c	; 0xd3c <write_buffer>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    16d2:	9f ef       	ldi	r25, 0xFF	; 255
    16d4:	25 ee       	ldi	r18, 0xE5	; 229
    16d6:	8a ea       	ldi	r24, 0xAA	; 170
    16d8:	91 50       	subi	r25, 0x01	; 1
    16da:	20 40       	sbci	r18, 0x00	; 0
    16dc:	80 40       	sbci	r24, 0x00	; 0
    16de:	e1 f7       	brne	.-8      	; 0x16d8 <playerInfo+0xc6>
    16e0:	00 c0       	rjmp	.+0      	; 0x16e2 <playerInfo+0xd0>
    16e2:	00 00       	nop
	_delay_ms(3500);
}
    16e4:	0f b6       	in	r0, 0x3f	; 63
    16e6:	f8 94       	cli
    16e8:	de bf       	out	0x3e, r29	; 62
    16ea:	0f be       	out	0x3f, r0	; 63
    16ec:	cd bf       	out	0x3d, r28	; 61
    16ee:	64 96       	adiw	r28, 0x14	; 20
    16f0:	0f b6       	in	r0, 0x3f	; 63
    16f2:	f8 94       	cli
    16f4:	de bf       	out	0x3e, r29	; 62
    16f6:	0f be       	out	0x3f, r0	; 63
    16f8:	cd bf       	out	0x3d, r28	; 61
    16fa:	df 91       	pop	r29
    16fc:	cf 91       	pop	r28
    16fe:	1f 91       	pop	r17
    1700:	0f 91       	pop	r16
    1702:	ff 90       	pop	r15
    1704:	ef 90       	pop	r14
    1706:	df 90       	pop	r13
    1708:	cf 90       	pop	r12
    170a:	08 95       	ret

0000170c <startGame>:

void drawPauseScreen(uint8_t color){
	
}

void startGame(uint8_t BLACK){
    170c:	ef 92       	push	r14
    170e:	0f 93       	push	r16
    1710:	cf 93       	push	r28
    1712:	c8 2f       	mov	r28, r24
	clear_buffer(buff);
    1714:	88 e1       	ldi	r24, 0x18	; 24
    1716:	91 e0       	ldi	r25, 0x01	; 1
    1718:	0e 94 dd 06 	call	0xdba	; 0xdba <clear_buffer>
	drawrect(buff,3,8,122,54, BLACK);
    171c:	ec 2e       	mov	r14, r28
    171e:	06 e3       	ldi	r16, 0x36	; 54
    1720:	2a e7       	ldi	r18, 0x7A	; 122
    1722:	48 e0       	ldi	r20, 0x08	; 8
    1724:	63 e0       	ldi	r22, 0x03	; 3
    1726:	88 e1       	ldi	r24, 0x18	; 24
    1728:	91 e0       	ldi	r25, 0x01	; 1
    172a:	0e 94 f7 07 	call	0xfee	; 0xfee <drawrect>
	fillcircle(buff,64,32,3,BLACK);
    172e:	0c 2f       	mov	r16, r28
    1730:	23 e0       	ldi	r18, 0x03	; 3
    1732:	40 e2       	ldi	r20, 0x20	; 32
    1734:	60 e4       	ldi	r22, 0x40	; 64
    1736:	88 e1       	ldi	r24, 0x18	; 24
    1738:	91 e0       	ldi	r25, 0x01	; 1
    173a:	0e 94 2b 09 	call	0x1256	; 0x1256 <fillcircle>
	playerInfo(BLACK);
    173e:	8c 2f       	mov	r24, r28
    1740:	0e 94 09 0b 	call	0x1612	; 0x1612 <playerInfo>
}
    1744:	cf 91       	pop	r28
    1746:	0f 91       	pop	r16
    1748:	ef 90       	pop	r14
    174a:	08 95       	ret

0000174c <drawEndScreen>:
		fillrect(buff, 122, paddle2Y, 3, 10, color);
	}	
}

void drawEndScreen(uint8_t color){
	clear_buffer(buff);
    174c:	88 e1       	ldi	r24, 0x18	; 24
    174e:	91 e0       	ldi	r25, 0x01	; 1
    1750:	0e 94 dd 06 	call	0xdba	; 0xdba <clear_buffer>
	
	if(p1Score == 3)
    1754:	80 91 f7 05 	lds	r24, 0x05F7	; 0x8005f7 <p1Score>
    1758:	83 30       	cpi	r24, 0x03	; 3
    175a:	41 f4       	brne	.+16     	; 0x176c <drawEndScreen+0x20>
	drawstring(buff,32,6,"Player 1 Won");
    175c:	22 ed       	ldi	r18, 0xD2	; 210
    175e:	35 e0       	ldi	r19, 0x05	; 5
    1760:	46 e0       	ldi	r20, 0x06	; 6
    1762:	60 e2       	ldi	r22, 0x20	; 32
    1764:	88 e1       	ldi	r24, 0x18	; 24
    1766:	91 e0       	ldi	r25, 0x01	; 1
    1768:	0e 94 43 07 	call	0xe86	; 0xe86 <drawstring>
	drawstring(buff,32,6,"Player 2 Won");
    176c:	2f ed       	ldi	r18, 0xDF	; 223
    176e:	35 e0       	ldi	r19, 0x05	; 5
    1770:	46 e0       	ldi	r20, 0x06	; 6
    1772:	60 e2       	ldi	r22, 0x20	; 32
    1774:	88 e1       	ldi	r24, 0x18	; 24
    1776:	91 e0       	ldi	r25, 0x01	; 1
    1778:	0e 94 43 07 	call	0xe86	; 0xe86 <drawstring>
	p1Score = 0;
    177c:	10 92 f7 05 	sts	0x05F7, r1	; 0x8005f7 <p1Score>
	p2Score = 0;
    1780:	10 92 f6 05 	sts	0x05F6, r1	; 0x8005f6 <p2Score>
	write_buffer(buff);
    1784:	88 e1       	ldi	r24, 0x18	; 24
    1786:	91 e0       	ldi	r25, 0x01	; 1
    1788:	0e 94 9e 06 	call	0xd3c	; 0xd3c <write_buffer>
    178c:	2f ef       	ldi	r18, 0xFF	; 255
    178e:	8b e7       	ldi	r24, 0x7B	; 123
    1790:	92 e9       	ldi	r25, 0x92	; 146
    1792:	21 50       	subi	r18, 0x01	; 1
    1794:	80 40       	sbci	r24, 0x00	; 0
    1796:	90 40       	sbci	r25, 0x00	; 0
    1798:	e1 f7       	brne	.-8      	; 0x1792 <drawEndScreen+0x46>
    179a:	00 c0       	rjmp	.+0      	; 0x179c <drawEndScreen+0x50>
    179c:	00 00       	nop
		_delay_ms(500);
		PORTB = 0x00;
		PORTD = 0x80;
		_delay_ms(500);
	}*/
	clear_buffer(buff);
    179e:	88 e1       	ldi	r24, 0x18	; 24
    17a0:	91 e0       	ldi	r25, 0x01	; 1
    17a2:	0e 94 dd 06 	call	0xdba	; 0xdba <clear_buffer>
    17a6:	08 95       	ret

000017a8 <uart_putchar>:
void uart_init(void);

static FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
static FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

int uart_putchar(char c, FILE *stream) {
    17a8:	cf 93       	push	r28
    17aa:	c8 2f       	mov	r28, r24
	if (c == '\n') {
    17ac:	8a 30       	cpi	r24, 0x0A	; 10
    17ae:	19 f4       	brne	.+6      	; 0x17b6 <uart_putchar+0xe>
		uart_putchar('\r', stream);
    17b0:	8d e0       	ldi	r24, 0x0D	; 13
    17b2:	0e 94 d4 0b 	call	0x17a8	; 0x17a8 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
    17b6:	e0 ec       	ldi	r30, 0xC0	; 192
    17b8:	f0 e0       	ldi	r31, 0x00	; 0
    17ba:	80 81       	ld	r24, Z
    17bc:	85 ff       	sbrs	r24, 5
    17be:	fd cf       	rjmp	.-6      	; 0x17ba <uart_putchar+0x12>
	UDR0 = c;
    17c0:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
    17c4:	80 e0       	ldi	r24, 0x00	; 0
    17c6:	90 e0       	ldi	r25, 0x00	; 0
    17c8:	cf 91       	pop	r28
    17ca:	08 95       	ret

000017cc <uart_getchar>:

int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
    17cc:	e0 ec       	ldi	r30, 0xC0	; 192
    17ce:	f0 e0       	ldi	r31, 0x00	; 0
    17d0:	80 81       	ld	r24, Z
    17d2:	88 23       	and	r24, r24
    17d4:	ec f7       	brge	.-6      	; 0x17d0 <uart_getchar+0x4>
	return UDR0;
    17d6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
    17da:	90 e0       	ldi	r25, 0x00	; 0
    17dc:	08 95       	ret

000017de <uart_init>:

void uart_init(void) {
	UBRR0H = UBRRH_VALUE;
    17de:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
    17e2:	87 e6       	ldi	r24, 0x67	; 103
    17e4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
    17e8:	e0 ec       	ldi	r30, 0xC0	; 192
    17ea:	f0 e0       	ldi	r31, 0x00	; 0
    17ec:	80 81       	ld	r24, Z
    17ee:	8d 7f       	andi	r24, 0xFD	; 253
    17f0:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
    17f2:	86 e0       	ldi	r24, 0x06	; 6
    17f4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
    17f8:	88 e1       	ldi	r24, 0x18	; 24
    17fa:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

    // Redirect stdin and stdout so functions like printf and getchar work.
	stdout = &uart_output;
    17fe:	ec ef       	ldi	r30, 0xFC	; 252
    1800:	f5 e0       	ldi	r31, 0x05	; 5
    1802:	86 e3       	ldi	r24, 0x36	; 54
    1804:	95 e0       	ldi	r25, 0x05	; 5
    1806:	93 83       	std	Z+3, r25	; 0x03
    1808:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
    180a:	88 e2       	ldi	r24, 0x28	; 40
    180c:	95 e0       	ldi	r25, 0x05	; 5
    180e:	91 83       	std	Z+1, r25	; 0x01
    1810:	80 83       	st	Z, r24
    1812:	08 95       	ret

00001814 <main>:


int main(void)
{
	//setting up the gpio for backlight
	DDRD |= 0x80;		//10000000
    1814:	57 9a       	sbi	0x0a, 7	; 10
	PORTD &= ~0x80;		//10000000
    1816:	5f 98       	cbi	0x0b, 7	; 11
	PORTD = 0x00;		// This is for Blue.
    1818:	1b b8       	out	0x0b, r1	; 11
	DDRB |= 0x05;	//00001101
    181a:	84 b1       	in	r24, 0x04	; 4
    181c:	85 60       	ori	r24, 0x05	; 5
    181e:	84 b9       	out	0x04, r24	; 4
	PORTB &= ~0x05; //00000101
    1820:	85 b1       	in	r24, 0x05	; 5
    1822:	8a 7f       	andi	r24, 0xFA	; 250
    1824:	85 b9       	out	0x05, r24	; 5
	PORTB = 0x04;	//	1 => Purpleish 4 => Green 5 => Red
    1826:	84 e0       	ldi	r24, 0x04	; 4
    1828:	85 b9       	out	0x05, r24	; 5
	
	DDRB |= (1 << DDB1);
    182a:	21 9a       	sbi	0x04, 1	; 4
	PORTB |=  (1 << DDB1);
    182c:	29 9a       	sbi	0x05, 1	; 5
	OCR1A = 0x0000;
    182e:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1832:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>

	
	TCCR1A |= (1 << COM1A1);
    1836:	e0 e8       	ldi	r30, 0x80	; 128
    1838:	f0 e0       	ldi	r31, 0x00	; 0
    183a:	80 81       	ld	r24, Z
    183c:	80 68       	ori	r24, 0x80	; 128
    183e:	80 83       	st	Z, r24
	// set non-inverting mode
	TCCR1A |= (1 << WGM11) | (1 << WGM10);
    1840:	80 81       	ld	r24, Z
    1842:	83 60       	ori	r24, 0x03	; 3
    1844:	80 83       	st	Z, r24
	// set 10bit phase corrected PWM Mode
	TCCR1B |= (1 << CS11);
    1846:	e1 e8       	ldi	r30, 0x81	; 129
    1848:	f0 e0       	ldi	r31, 0x00	; 0
    184a:	80 81       	ld	r24, Z
    184c:	82 60       	ori	r24, 0x02	; 2
    184e:	80 83       	st	Z, r24
	//lcd initialisation
	lcd_init();
    1850:	0e 94 3b 06 	call	0xc76	; 0xc76 <lcd_init>
	uart_init();
    1854:	0e 94 ef 0b 	call	0x17de	; 0x17de <uart_init>
	
	lcd_command(CMD_DISPLAY_ON);
    1858:	8f ea       	ldi	r24, 0xAF	; 175
    185a:	0e 94 25 06 	call	0xc4a	; 0xc4a <lcd_command>
	lcd_set_brightness(0x18);
    185e:	88 e1       	ldi	r24, 0x18	; 24
    1860:	0e 94 93 06 	call	0xd26	; 0xd26 <lcd_set_brightness>
	write_buffer(buff);
    1864:	88 e1       	ldi	r24, 0x18	; 24
    1866:	91 e0       	ldi	r25, 0x01	; 1
    1868:	0e 94 9e 06 	call	0xd3c	; 0xd3c <write_buffer>
	adcInit();
    186c:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <adcInit>
    1870:	2f ef       	ldi	r18, 0xFF	; 255
    1872:	8b e7       	ldi	r24, 0x7B	; 123
    1874:	92 e9       	ldi	r25, 0x92	; 146
    1876:	21 50       	subi	r18, 0x01	; 1
    1878:	80 40       	sbci	r24, 0x00	; 0
    187a:	90 40       	sbci	r25, 0x00	; 0
    187c:	e1 f7       	brne	.-8      	; 0x1876 <main+0x62>
    187e:	00 c0       	rjmp	.+0      	; 0x1880 <main+0x6c>
    1880:	00 00       	nop
	_delay_ms(3000);
	clear_buffer(buff);
    1882:	88 e1       	ldi	r24, 0x18	; 24
    1884:	91 e0       	ldi	r25, 0x01	; 1
    1886:	0e 94 dd 06 	call	0xdba	; 0xdba <clear_buffer>
	write_buffer(buff);
    188a:	88 e1       	ldi	r24, 0x18	; 24
    188c:	91 e0       	ldi	r25, 0x01	; 1
    188e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <write_buffer>
	
	int horizontalDirection = touchX % 2;
    1892:	80 91 f3 05 	lds	r24, 0x05F3	; 0x8005f3 <touchX>
    1896:	90 91 f4 05 	lds	r25, 0x05F4	; 0x8005f4 <touchX+0x1>
	if(!horizontalDirection){
    189a:	80 fd       	sbrc	r24, 0
    189c:	0a c0       	rjmp	.+20     	; 0x18b2 <main+0x9e>
		delX = delX * -1;
    189e:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <delX>
    18a2:	81 95       	neg	r24
    18a4:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <delX>
		delY = delY * -1;
    18a8:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <delY>
    18ac:	81 95       	neg	r24
    18ae:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <delY>
			moveBall(BLACK);
			write_buffer(buff);
		}else if(state == PAUSEGAME){
			// Wait for pause to release.
			drawPauseScreen(BLACK);
			state = PLAYGAME;
    18b2:	03 e0       	ldi	r16, 0x03	; 3
    18b4:	10 e0       	ldi	r17, 0x00	; 0
	}
	
	while (1)
	{
		if(state == HOMESCREEN){
			PORTB = 0x04;		
    18b6:	c4 e0       	ldi	r28, 0x04	; 4
		delY = delY * -1;
	}
	
	while (1)
	{
		if(state == HOMESCREEN){
    18b8:	80 91 fa 05 	lds	r24, 0x05FA	; 0x8005fa <state>
    18bc:	90 91 fb 05 	lds	r25, 0x05FB	; 0x8005fb <state+0x1>
    18c0:	00 97       	sbiw	r24, 0x00	; 0
    18c2:	59 f4       	brne	.+22     	; 0x18da <main+0xc6>
			PORTB = 0x04;		
    18c4:	c5 b9       	out	0x05, r28	; 5
			drawHomePage(BLACK);
    18c6:	81 e0       	ldi	r24, 0x01	; 1
    18c8:	0e 94 02 0a 	call	0x1404	; 0x1404 <drawHomePage>
			write_buffer(buff);
    18cc:	88 e1       	ldi	r24, 0x18	; 24
    18ce:	91 e0       	ldi	r25, 0x01	; 1
    18d0:	0e 94 9e 06 	call	0xd3c	; 0xd3c <write_buffer>
			waitForStart();
    18d4:	0e 94 0a 04 	call	0x814	; 0x814 <waitForStart>
    18d8:	4b c0       	rjmp	.+150    	; 0x1970 <main+0x15c>
		}else if(state == MODESELECTION){
    18da:	81 30       	cpi	r24, 0x01	; 1
    18dc:	91 05       	cpc	r25, r1
    18de:	51 f4       	brne	.+20     	; 0x18f4 <main+0xe0>
			drawModeSelection(BLACK);
    18e0:	81 e0       	ldi	r24, 0x01	; 1
    18e2:	0e 94 4f 0a 	call	0x149e	; 0x149e <drawModeSelection>
			write_buffer(buff);
    18e6:	88 e1       	ldi	r24, 0x18	; 24
    18e8:	91 e0       	ldi	r25, 0x01	; 1
    18ea:	0e 94 9e 06 	call	0xd3c	; 0xd3c <write_buffer>
			waitForModeSelection();
    18ee:	0e 94 3d 04 	call	0x87a	; 0x87a <waitForModeSelection>
    18f2:	3e c0       	rjmp	.+124    	; 0x1970 <main+0x15c>
			
		}else if(state == SPEEDSELECTION){	
    18f4:	82 30       	cpi	r24, 0x02	; 2
    18f6:	91 05       	cpc	r25, r1
    18f8:	51 f4       	brne	.+20     	; 0x190e <main+0xfa>
			drawSpeedSelection(BLACK);
    18fa:	81 e0       	ldi	r24, 0x01	; 1
    18fc:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <drawSpeedSelection>
			write_buffer(buff);
    1900:	88 e1       	ldi	r24, 0x18	; 24
    1902:	91 e0       	ldi	r25, 0x01	; 1
    1904:	0e 94 9e 06 	call	0xd3c	; 0xd3c <write_buffer>
			waitForSpeedSelection();
    1908:	0e 94 9a 04 	call	0x934	; 0x934 <waitForSpeedSelection>
    190c:	31 c0       	rjmp	.+98     	; 0x1970 <main+0x15c>
		}
		else if(state == PLAYGAME){	
    190e:	83 30       	cpi	r24, 0x03	; 3
    1910:	91 05       	cpc	r25, r1
    1912:	d1 f4       	brne	.+52     	; 0x1948 <main+0x134>
			drawPaddle(PADDLE1, WHITE);
    1914:	60 e0       	ldi	r22, 0x00	; 0
    1916:	81 e0       	ldi	r24, 0x01	; 1
    1918:	0e 94 b7 0a 	call	0x156e	; 0x156e <drawPaddle>
			drawPaddle(PADDLE2, WHITE);
    191c:	60 e0       	ldi	r22, 0x00	; 0
    191e:	82 e0       	ldi	r24, 0x02	; 2
    1920:	0e 94 b7 0a 	call	0x156e	; 0x156e <drawPaddle>
			controlPaddle();	
    1924:	0e 94 19 05 	call	0xa32	; 0xa32 <controlPaddle>
			drawPaddle(PADDLE1, BLACK);
    1928:	61 e0       	ldi	r22, 0x01	; 1
    192a:	81 e0       	ldi	r24, 0x01	; 1
    192c:	0e 94 b7 0a 	call	0x156e	; 0x156e <drawPaddle>
			drawPaddle(PADDLE2, BLACK);
    1930:	61 e0       	ldi	r22, 0x01	; 1
    1932:	82 e0       	ldi	r24, 0x02	; 2
    1934:	0e 94 b7 0a 	call	0x156e	; 0x156e <drawPaddle>
			moveBall(BLACK);
    1938:	81 e0       	ldi	r24, 0x01	; 1
    193a:	0e 94 8a 05 	call	0xb14	; 0xb14 <moveBall>
			write_buffer(buff);
    193e:	88 e1       	ldi	r24, 0x18	; 24
    1940:	91 e0       	ldi	r25, 0x01	; 1
    1942:	0e 94 9e 06 	call	0xd3c	; 0xd3c <write_buffer>
    1946:	14 c0       	rjmp	.+40     	; 0x1970 <main+0x15c>
		}else if(state == PAUSEGAME){
    1948:	84 30       	cpi	r24, 0x04	; 4
    194a:	91 05       	cpc	r25, r1
    194c:	41 f4       	brne	.+16     	; 0x195e <main+0x14a>
			// Wait for pause to release.
			drawPauseScreen(BLACK);
    194e:	81 e0       	ldi	r24, 0x01	; 1
    1950:	0e 94 b6 0a 	call	0x156c	; 0x156c <drawPauseScreen>
			state = PLAYGAME;
    1954:	10 93 fb 05 	sts	0x05FB, r17	; 0x8005fb <state+0x1>
    1958:	00 93 fa 05 	sts	0x05FA, r16	; 0x8005fa <state>
    195c:	09 c0       	rjmp	.+18     	; 0x1970 <main+0x15c>
			//drawPauseScreen(BLACK);
		}else if(state == ENDSCREEN){
    195e:	05 97       	sbiw	r24, 0x05	; 5
    1960:	39 f4       	brne	.+14     	; 0x1970 <main+0x15c>
			drawEndScreen(BLACK);
    1962:	81 e0       	ldi	r24, 0x01	; 1
    1964:	0e 94 a6 0b 	call	0x174c	; 0x174c <drawEndScreen>
			state = HOMESCREEN;
    1968:	10 92 fb 05 	sts	0x05FB, r1	; 0x8005fb <state+0x1>
    196c:	10 92 fa 05 	sts	0x05FA, r1	; 0x8005fa <state>
		}
		adc_read();
    1970:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <adc_read>
		if(gSpeed == EASY){
    1974:	80 91 f9 05 	lds	r24, 0x05F9	; 0x8005f9 <gSpeed>
    1978:	81 11       	cpse	r24, r1
    197a:	0a c0       	rjmp	.+20     	; 0x1990 <main+0x17c>
    197c:	2f ef       	ldi	r18, 0xFF	; 255
    197e:	81 ee       	ldi	r24, 0xE1	; 225
    1980:	94 e0       	ldi	r25, 0x04	; 4
    1982:	21 50       	subi	r18, 0x01	; 1
    1984:	80 40       	sbci	r24, 0x00	; 0
    1986:	90 40       	sbci	r25, 0x00	; 0
    1988:	e1 f7       	brne	.-8      	; 0x1982 <main+0x16e>
    198a:	00 c0       	rjmp	.+0      	; 0x198c <main+0x178>
    198c:	00 00       	nop
    198e:	94 cf       	rjmp	.-216    	; 0x18b8 <main+0xa4>
			_delay_ms(100);
		}else if(gSpeed == HARD){
    1990:	82 30       	cpi	r24, 0x02	; 2
    1992:	39 f4       	brne	.+14     	; 0x19a2 <main+0x18e>
    1994:	8f e1       	ldi	r24, 0x1F	; 31
    1996:	9e e4       	ldi	r25, 0x4E	; 78
    1998:	01 97       	sbiw	r24, 0x01	; 1
    199a:	f1 f7       	brne	.-4      	; 0x1998 <main+0x184>
    199c:	00 c0       	rjmp	.+0      	; 0x199e <main+0x18a>
    199e:	00 00       	nop
    19a0:	8b cf       	rjmp	.-234    	; 0x18b8 <main+0xa4>
    19a2:	9f ef       	ldi	r25, 0xFF	; 255
    19a4:	20 e7       	ldi	r18, 0x70	; 112
    19a6:	82 e0       	ldi	r24, 0x02	; 2
    19a8:	91 50       	subi	r25, 0x01	; 1
    19aa:	20 40       	sbci	r18, 0x00	; 0
    19ac:	80 40       	sbci	r24, 0x00	; 0
    19ae:	e1 f7       	brne	.-8      	; 0x19a8 <main+0x194>
    19b0:	00 c0       	rjmp	.+0      	; 0x19b2 <main+0x19e>
    19b2:	00 00       	nop
    19b4:	81 cf       	rjmp	.-254    	; 0x18b8 <main+0xa4>

000019b6 <__subsf3>:
    19b6:	50 58       	subi	r21, 0x80	; 128

000019b8 <__addsf3>:
    19b8:	bb 27       	eor	r27, r27
    19ba:	aa 27       	eor	r26, r26
    19bc:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <__addsf3x>
    19c0:	0c 94 d2 0d 	jmp	0x1ba4	; 0x1ba4 <__fp_round>
    19c4:	0e 94 c4 0d 	call	0x1b88	; 0x1b88 <__fp_pscA>
    19c8:	38 f0       	brcs	.+14     	; 0x19d8 <__addsf3+0x20>
    19ca:	0e 94 cb 0d 	call	0x1b96	; 0x1b96 <__fp_pscB>
    19ce:	20 f0       	brcs	.+8      	; 0x19d8 <__addsf3+0x20>
    19d0:	39 f4       	brne	.+14     	; 0x19e0 <__addsf3+0x28>
    19d2:	9f 3f       	cpi	r25, 0xFF	; 255
    19d4:	19 f4       	brne	.+6      	; 0x19dc <__addsf3+0x24>
    19d6:	26 f4       	brtc	.+8      	; 0x19e0 <__addsf3+0x28>
    19d8:	0c 94 c1 0d 	jmp	0x1b82	; 0x1b82 <__fp_nan>
    19dc:	0e f4       	brtc	.+2      	; 0x19e0 <__addsf3+0x28>
    19de:	e0 95       	com	r30
    19e0:	e7 fb       	bst	r30, 7
    19e2:	0c 94 bb 0d 	jmp	0x1b76	; 0x1b76 <__fp_inf>

000019e6 <__addsf3x>:
    19e6:	e9 2f       	mov	r30, r25
    19e8:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <__fp_split3>
    19ec:	58 f3       	brcs	.-42     	; 0x19c4 <__addsf3+0xc>
    19ee:	ba 17       	cp	r27, r26
    19f0:	62 07       	cpc	r22, r18
    19f2:	73 07       	cpc	r23, r19
    19f4:	84 07       	cpc	r24, r20
    19f6:	95 07       	cpc	r25, r21
    19f8:	20 f0       	brcs	.+8      	; 0x1a02 <__addsf3x+0x1c>
    19fa:	79 f4       	brne	.+30     	; 0x1a1a <__addsf3x+0x34>
    19fc:	a6 f5       	brtc	.+104    	; 0x1a66 <__addsf3x+0x80>
    19fe:	0c 94 05 0e 	jmp	0x1c0a	; 0x1c0a <__fp_zero>
    1a02:	0e f4       	brtc	.+2      	; 0x1a06 <__addsf3x+0x20>
    1a04:	e0 95       	com	r30
    1a06:	0b 2e       	mov	r0, r27
    1a08:	ba 2f       	mov	r27, r26
    1a0a:	a0 2d       	mov	r26, r0
    1a0c:	0b 01       	movw	r0, r22
    1a0e:	b9 01       	movw	r22, r18
    1a10:	90 01       	movw	r18, r0
    1a12:	0c 01       	movw	r0, r24
    1a14:	ca 01       	movw	r24, r20
    1a16:	a0 01       	movw	r20, r0
    1a18:	11 24       	eor	r1, r1
    1a1a:	ff 27       	eor	r31, r31
    1a1c:	59 1b       	sub	r21, r25
    1a1e:	99 f0       	breq	.+38     	; 0x1a46 <__addsf3x+0x60>
    1a20:	59 3f       	cpi	r21, 0xF9	; 249
    1a22:	50 f4       	brcc	.+20     	; 0x1a38 <__addsf3x+0x52>
    1a24:	50 3e       	cpi	r21, 0xE0	; 224
    1a26:	68 f1       	brcs	.+90     	; 0x1a82 <__addsf3x+0x9c>
    1a28:	1a 16       	cp	r1, r26
    1a2a:	f0 40       	sbci	r31, 0x00	; 0
    1a2c:	a2 2f       	mov	r26, r18
    1a2e:	23 2f       	mov	r18, r19
    1a30:	34 2f       	mov	r19, r20
    1a32:	44 27       	eor	r20, r20
    1a34:	58 5f       	subi	r21, 0xF8	; 248
    1a36:	f3 cf       	rjmp	.-26     	; 0x1a1e <__addsf3x+0x38>
    1a38:	46 95       	lsr	r20
    1a3a:	37 95       	ror	r19
    1a3c:	27 95       	ror	r18
    1a3e:	a7 95       	ror	r26
    1a40:	f0 40       	sbci	r31, 0x00	; 0
    1a42:	53 95       	inc	r21
    1a44:	c9 f7       	brne	.-14     	; 0x1a38 <__addsf3x+0x52>
    1a46:	7e f4       	brtc	.+30     	; 0x1a66 <__addsf3x+0x80>
    1a48:	1f 16       	cp	r1, r31
    1a4a:	ba 0b       	sbc	r27, r26
    1a4c:	62 0b       	sbc	r22, r18
    1a4e:	73 0b       	sbc	r23, r19
    1a50:	84 0b       	sbc	r24, r20
    1a52:	ba f0       	brmi	.+46     	; 0x1a82 <__addsf3x+0x9c>
    1a54:	91 50       	subi	r25, 0x01	; 1
    1a56:	a1 f0       	breq	.+40     	; 0x1a80 <__addsf3x+0x9a>
    1a58:	ff 0f       	add	r31, r31
    1a5a:	bb 1f       	adc	r27, r27
    1a5c:	66 1f       	adc	r22, r22
    1a5e:	77 1f       	adc	r23, r23
    1a60:	88 1f       	adc	r24, r24
    1a62:	c2 f7       	brpl	.-16     	; 0x1a54 <__addsf3x+0x6e>
    1a64:	0e c0       	rjmp	.+28     	; 0x1a82 <__addsf3x+0x9c>
    1a66:	ba 0f       	add	r27, r26
    1a68:	62 1f       	adc	r22, r18
    1a6a:	73 1f       	adc	r23, r19
    1a6c:	84 1f       	adc	r24, r20
    1a6e:	48 f4       	brcc	.+18     	; 0x1a82 <__addsf3x+0x9c>
    1a70:	87 95       	ror	r24
    1a72:	77 95       	ror	r23
    1a74:	67 95       	ror	r22
    1a76:	b7 95       	ror	r27
    1a78:	f7 95       	ror	r31
    1a7a:	9e 3f       	cpi	r25, 0xFE	; 254
    1a7c:	08 f0       	brcs	.+2      	; 0x1a80 <__addsf3x+0x9a>
    1a7e:	b0 cf       	rjmp	.-160    	; 0x19e0 <__addsf3+0x28>
    1a80:	93 95       	inc	r25
    1a82:	88 0f       	add	r24, r24
    1a84:	08 f0       	brcs	.+2      	; 0x1a88 <__addsf3x+0xa2>
    1a86:	99 27       	eor	r25, r25
    1a88:	ee 0f       	add	r30, r30
    1a8a:	97 95       	ror	r25
    1a8c:	87 95       	ror	r24
    1a8e:	08 95       	ret

00001a90 <__fixsfsi>:
    1a90:	0e 94 4f 0d 	call	0x1a9e	; 0x1a9e <__fixunssfsi>
    1a94:	68 94       	set
    1a96:	b1 11       	cpse	r27, r1
    1a98:	0c 94 06 0e 	jmp	0x1c0c	; 0x1c0c <__fp_szero>
    1a9c:	08 95       	ret

00001a9e <__fixunssfsi>:
    1a9e:	0e 94 eb 0d 	call	0x1bd6	; 0x1bd6 <__fp_splitA>
    1aa2:	88 f0       	brcs	.+34     	; 0x1ac6 <__fixunssfsi+0x28>
    1aa4:	9f 57       	subi	r25, 0x7F	; 127
    1aa6:	98 f0       	brcs	.+38     	; 0x1ace <__fixunssfsi+0x30>
    1aa8:	b9 2f       	mov	r27, r25
    1aaa:	99 27       	eor	r25, r25
    1aac:	b7 51       	subi	r27, 0x17	; 23
    1aae:	b0 f0       	brcs	.+44     	; 0x1adc <__fixunssfsi+0x3e>
    1ab0:	e1 f0       	breq	.+56     	; 0x1aea <__fixunssfsi+0x4c>
    1ab2:	66 0f       	add	r22, r22
    1ab4:	77 1f       	adc	r23, r23
    1ab6:	88 1f       	adc	r24, r24
    1ab8:	99 1f       	adc	r25, r25
    1aba:	1a f0       	brmi	.+6      	; 0x1ac2 <__fixunssfsi+0x24>
    1abc:	ba 95       	dec	r27
    1abe:	c9 f7       	brne	.-14     	; 0x1ab2 <__fixunssfsi+0x14>
    1ac0:	14 c0       	rjmp	.+40     	; 0x1aea <__fixunssfsi+0x4c>
    1ac2:	b1 30       	cpi	r27, 0x01	; 1
    1ac4:	91 f0       	breq	.+36     	; 0x1aea <__fixunssfsi+0x4c>
    1ac6:	0e 94 05 0e 	call	0x1c0a	; 0x1c0a <__fp_zero>
    1aca:	b1 e0       	ldi	r27, 0x01	; 1
    1acc:	08 95       	ret
    1ace:	0c 94 05 0e 	jmp	0x1c0a	; 0x1c0a <__fp_zero>
    1ad2:	67 2f       	mov	r22, r23
    1ad4:	78 2f       	mov	r23, r24
    1ad6:	88 27       	eor	r24, r24
    1ad8:	b8 5f       	subi	r27, 0xF8	; 248
    1ada:	39 f0       	breq	.+14     	; 0x1aea <__fixunssfsi+0x4c>
    1adc:	b9 3f       	cpi	r27, 0xF9	; 249
    1ade:	cc f3       	brlt	.-14     	; 0x1ad2 <__fixunssfsi+0x34>
    1ae0:	86 95       	lsr	r24
    1ae2:	77 95       	ror	r23
    1ae4:	67 95       	ror	r22
    1ae6:	b3 95       	inc	r27
    1ae8:	d9 f7       	brne	.-10     	; 0x1ae0 <__fixunssfsi+0x42>
    1aea:	3e f4       	brtc	.+14     	; 0x1afa <__fixunssfsi+0x5c>
    1aec:	90 95       	com	r25
    1aee:	80 95       	com	r24
    1af0:	70 95       	com	r23
    1af2:	61 95       	neg	r22
    1af4:	7f 4f       	sbci	r23, 0xFF	; 255
    1af6:	8f 4f       	sbci	r24, 0xFF	; 255
    1af8:	9f 4f       	sbci	r25, 0xFF	; 255
    1afa:	08 95       	ret

00001afc <__floatunsisf>:
    1afc:	e8 94       	clt
    1afe:	09 c0       	rjmp	.+18     	; 0x1b12 <__floatsisf+0x12>

00001b00 <__floatsisf>:
    1b00:	97 fb       	bst	r25, 7
    1b02:	3e f4       	brtc	.+14     	; 0x1b12 <__floatsisf+0x12>
    1b04:	90 95       	com	r25
    1b06:	80 95       	com	r24
    1b08:	70 95       	com	r23
    1b0a:	61 95       	neg	r22
    1b0c:	7f 4f       	sbci	r23, 0xFF	; 255
    1b0e:	8f 4f       	sbci	r24, 0xFF	; 255
    1b10:	9f 4f       	sbci	r25, 0xFF	; 255
    1b12:	99 23       	and	r25, r25
    1b14:	a9 f0       	breq	.+42     	; 0x1b40 <__floatsisf+0x40>
    1b16:	f9 2f       	mov	r31, r25
    1b18:	96 e9       	ldi	r25, 0x96	; 150
    1b1a:	bb 27       	eor	r27, r27
    1b1c:	93 95       	inc	r25
    1b1e:	f6 95       	lsr	r31
    1b20:	87 95       	ror	r24
    1b22:	77 95       	ror	r23
    1b24:	67 95       	ror	r22
    1b26:	b7 95       	ror	r27
    1b28:	f1 11       	cpse	r31, r1
    1b2a:	f8 cf       	rjmp	.-16     	; 0x1b1c <__floatsisf+0x1c>
    1b2c:	fa f4       	brpl	.+62     	; 0x1b6c <__floatsisf+0x6c>
    1b2e:	bb 0f       	add	r27, r27
    1b30:	11 f4       	brne	.+4      	; 0x1b36 <__floatsisf+0x36>
    1b32:	60 ff       	sbrs	r22, 0
    1b34:	1b c0       	rjmp	.+54     	; 0x1b6c <__floatsisf+0x6c>
    1b36:	6f 5f       	subi	r22, 0xFF	; 255
    1b38:	7f 4f       	sbci	r23, 0xFF	; 255
    1b3a:	8f 4f       	sbci	r24, 0xFF	; 255
    1b3c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b3e:	16 c0       	rjmp	.+44     	; 0x1b6c <__floatsisf+0x6c>
    1b40:	88 23       	and	r24, r24
    1b42:	11 f0       	breq	.+4      	; 0x1b48 <__floatsisf+0x48>
    1b44:	96 e9       	ldi	r25, 0x96	; 150
    1b46:	11 c0       	rjmp	.+34     	; 0x1b6a <__floatsisf+0x6a>
    1b48:	77 23       	and	r23, r23
    1b4a:	21 f0       	breq	.+8      	; 0x1b54 <__floatsisf+0x54>
    1b4c:	9e e8       	ldi	r25, 0x8E	; 142
    1b4e:	87 2f       	mov	r24, r23
    1b50:	76 2f       	mov	r23, r22
    1b52:	05 c0       	rjmp	.+10     	; 0x1b5e <__floatsisf+0x5e>
    1b54:	66 23       	and	r22, r22
    1b56:	71 f0       	breq	.+28     	; 0x1b74 <__floatsisf+0x74>
    1b58:	96 e8       	ldi	r25, 0x86	; 134
    1b5a:	86 2f       	mov	r24, r22
    1b5c:	70 e0       	ldi	r23, 0x00	; 0
    1b5e:	60 e0       	ldi	r22, 0x00	; 0
    1b60:	2a f0       	brmi	.+10     	; 0x1b6c <__floatsisf+0x6c>
    1b62:	9a 95       	dec	r25
    1b64:	66 0f       	add	r22, r22
    1b66:	77 1f       	adc	r23, r23
    1b68:	88 1f       	adc	r24, r24
    1b6a:	da f7       	brpl	.-10     	; 0x1b62 <__floatsisf+0x62>
    1b6c:	88 0f       	add	r24, r24
    1b6e:	96 95       	lsr	r25
    1b70:	87 95       	ror	r24
    1b72:	97 f9       	bld	r25, 7
    1b74:	08 95       	ret

00001b76 <__fp_inf>:
    1b76:	97 f9       	bld	r25, 7
    1b78:	9f 67       	ori	r25, 0x7F	; 127
    1b7a:	80 e8       	ldi	r24, 0x80	; 128
    1b7c:	70 e0       	ldi	r23, 0x00	; 0
    1b7e:	60 e0       	ldi	r22, 0x00	; 0
    1b80:	08 95       	ret

00001b82 <__fp_nan>:
    1b82:	9f ef       	ldi	r25, 0xFF	; 255
    1b84:	80 ec       	ldi	r24, 0xC0	; 192
    1b86:	08 95       	ret

00001b88 <__fp_pscA>:
    1b88:	00 24       	eor	r0, r0
    1b8a:	0a 94       	dec	r0
    1b8c:	16 16       	cp	r1, r22
    1b8e:	17 06       	cpc	r1, r23
    1b90:	18 06       	cpc	r1, r24
    1b92:	09 06       	cpc	r0, r25
    1b94:	08 95       	ret

00001b96 <__fp_pscB>:
    1b96:	00 24       	eor	r0, r0
    1b98:	0a 94       	dec	r0
    1b9a:	12 16       	cp	r1, r18
    1b9c:	13 06       	cpc	r1, r19
    1b9e:	14 06       	cpc	r1, r20
    1ba0:	05 06       	cpc	r0, r21
    1ba2:	08 95       	ret

00001ba4 <__fp_round>:
    1ba4:	09 2e       	mov	r0, r25
    1ba6:	03 94       	inc	r0
    1ba8:	00 0c       	add	r0, r0
    1baa:	11 f4       	brne	.+4      	; 0x1bb0 <__fp_round+0xc>
    1bac:	88 23       	and	r24, r24
    1bae:	52 f0       	brmi	.+20     	; 0x1bc4 <__fp_round+0x20>
    1bb0:	bb 0f       	add	r27, r27
    1bb2:	40 f4       	brcc	.+16     	; 0x1bc4 <__fp_round+0x20>
    1bb4:	bf 2b       	or	r27, r31
    1bb6:	11 f4       	brne	.+4      	; 0x1bbc <__fp_round+0x18>
    1bb8:	60 ff       	sbrs	r22, 0
    1bba:	04 c0       	rjmp	.+8      	; 0x1bc4 <__fp_round+0x20>
    1bbc:	6f 5f       	subi	r22, 0xFF	; 255
    1bbe:	7f 4f       	sbci	r23, 0xFF	; 255
    1bc0:	8f 4f       	sbci	r24, 0xFF	; 255
    1bc2:	9f 4f       	sbci	r25, 0xFF	; 255
    1bc4:	08 95       	ret

00001bc6 <__fp_split3>:
    1bc6:	57 fd       	sbrc	r21, 7
    1bc8:	90 58       	subi	r25, 0x80	; 128
    1bca:	44 0f       	add	r20, r20
    1bcc:	55 1f       	adc	r21, r21
    1bce:	59 f0       	breq	.+22     	; 0x1be6 <__fp_splitA+0x10>
    1bd0:	5f 3f       	cpi	r21, 0xFF	; 255
    1bd2:	71 f0       	breq	.+28     	; 0x1bf0 <__fp_splitA+0x1a>
    1bd4:	47 95       	ror	r20

00001bd6 <__fp_splitA>:
    1bd6:	88 0f       	add	r24, r24
    1bd8:	97 fb       	bst	r25, 7
    1bda:	99 1f       	adc	r25, r25
    1bdc:	61 f0       	breq	.+24     	; 0x1bf6 <__fp_splitA+0x20>
    1bde:	9f 3f       	cpi	r25, 0xFF	; 255
    1be0:	79 f0       	breq	.+30     	; 0x1c00 <__fp_splitA+0x2a>
    1be2:	87 95       	ror	r24
    1be4:	08 95       	ret
    1be6:	12 16       	cp	r1, r18
    1be8:	13 06       	cpc	r1, r19
    1bea:	14 06       	cpc	r1, r20
    1bec:	55 1f       	adc	r21, r21
    1bee:	f2 cf       	rjmp	.-28     	; 0x1bd4 <__fp_split3+0xe>
    1bf0:	46 95       	lsr	r20
    1bf2:	f1 df       	rcall	.-30     	; 0x1bd6 <__fp_splitA>
    1bf4:	08 c0       	rjmp	.+16     	; 0x1c06 <__fp_splitA+0x30>
    1bf6:	16 16       	cp	r1, r22
    1bf8:	17 06       	cpc	r1, r23
    1bfa:	18 06       	cpc	r1, r24
    1bfc:	99 1f       	adc	r25, r25
    1bfe:	f1 cf       	rjmp	.-30     	; 0x1be2 <__fp_splitA+0xc>
    1c00:	86 95       	lsr	r24
    1c02:	71 05       	cpc	r23, r1
    1c04:	61 05       	cpc	r22, r1
    1c06:	08 94       	sec
    1c08:	08 95       	ret

00001c0a <__fp_zero>:
    1c0a:	e8 94       	clt

00001c0c <__fp_szero>:
    1c0c:	bb 27       	eor	r27, r27
    1c0e:	66 27       	eor	r22, r22
    1c10:	77 27       	eor	r23, r23
    1c12:	cb 01       	movw	r24, r22
    1c14:	97 f9       	bld	r25, 7
    1c16:	08 95       	ret

00001c18 <__mulsf3>:
    1c18:	0e 94 1f 0e 	call	0x1c3e	; 0x1c3e <__mulsf3x>
    1c1c:	0c 94 d2 0d 	jmp	0x1ba4	; 0x1ba4 <__fp_round>
    1c20:	0e 94 c4 0d 	call	0x1b88	; 0x1b88 <__fp_pscA>
    1c24:	38 f0       	brcs	.+14     	; 0x1c34 <__mulsf3+0x1c>
    1c26:	0e 94 cb 0d 	call	0x1b96	; 0x1b96 <__fp_pscB>
    1c2a:	20 f0       	brcs	.+8      	; 0x1c34 <__mulsf3+0x1c>
    1c2c:	95 23       	and	r25, r21
    1c2e:	11 f0       	breq	.+4      	; 0x1c34 <__mulsf3+0x1c>
    1c30:	0c 94 bb 0d 	jmp	0x1b76	; 0x1b76 <__fp_inf>
    1c34:	0c 94 c1 0d 	jmp	0x1b82	; 0x1b82 <__fp_nan>
    1c38:	11 24       	eor	r1, r1
    1c3a:	0c 94 06 0e 	jmp	0x1c0c	; 0x1c0c <__fp_szero>

00001c3e <__mulsf3x>:
    1c3e:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <__fp_split3>
    1c42:	70 f3       	brcs	.-36     	; 0x1c20 <__mulsf3+0x8>

00001c44 <__mulsf3_pse>:
    1c44:	95 9f       	mul	r25, r21
    1c46:	c1 f3       	breq	.-16     	; 0x1c38 <__mulsf3+0x20>
    1c48:	95 0f       	add	r25, r21
    1c4a:	50 e0       	ldi	r21, 0x00	; 0
    1c4c:	55 1f       	adc	r21, r21
    1c4e:	62 9f       	mul	r22, r18
    1c50:	f0 01       	movw	r30, r0
    1c52:	72 9f       	mul	r23, r18
    1c54:	bb 27       	eor	r27, r27
    1c56:	f0 0d       	add	r31, r0
    1c58:	b1 1d       	adc	r27, r1
    1c5a:	63 9f       	mul	r22, r19
    1c5c:	aa 27       	eor	r26, r26
    1c5e:	f0 0d       	add	r31, r0
    1c60:	b1 1d       	adc	r27, r1
    1c62:	aa 1f       	adc	r26, r26
    1c64:	64 9f       	mul	r22, r20
    1c66:	66 27       	eor	r22, r22
    1c68:	b0 0d       	add	r27, r0
    1c6a:	a1 1d       	adc	r26, r1
    1c6c:	66 1f       	adc	r22, r22
    1c6e:	82 9f       	mul	r24, r18
    1c70:	22 27       	eor	r18, r18
    1c72:	b0 0d       	add	r27, r0
    1c74:	a1 1d       	adc	r26, r1
    1c76:	62 1f       	adc	r22, r18
    1c78:	73 9f       	mul	r23, r19
    1c7a:	b0 0d       	add	r27, r0
    1c7c:	a1 1d       	adc	r26, r1
    1c7e:	62 1f       	adc	r22, r18
    1c80:	83 9f       	mul	r24, r19
    1c82:	a0 0d       	add	r26, r0
    1c84:	61 1d       	adc	r22, r1
    1c86:	22 1f       	adc	r18, r18
    1c88:	74 9f       	mul	r23, r20
    1c8a:	33 27       	eor	r19, r19
    1c8c:	a0 0d       	add	r26, r0
    1c8e:	61 1d       	adc	r22, r1
    1c90:	23 1f       	adc	r18, r19
    1c92:	84 9f       	mul	r24, r20
    1c94:	60 0d       	add	r22, r0
    1c96:	21 1d       	adc	r18, r1
    1c98:	82 2f       	mov	r24, r18
    1c9a:	76 2f       	mov	r23, r22
    1c9c:	6a 2f       	mov	r22, r26
    1c9e:	11 24       	eor	r1, r1
    1ca0:	9f 57       	subi	r25, 0x7F	; 127
    1ca2:	50 40       	sbci	r21, 0x00	; 0
    1ca4:	9a f0       	brmi	.+38     	; 0x1ccc <__mulsf3_pse+0x88>
    1ca6:	f1 f0       	breq	.+60     	; 0x1ce4 <__mulsf3_pse+0xa0>
    1ca8:	88 23       	and	r24, r24
    1caa:	4a f0       	brmi	.+18     	; 0x1cbe <__mulsf3_pse+0x7a>
    1cac:	ee 0f       	add	r30, r30
    1cae:	ff 1f       	adc	r31, r31
    1cb0:	bb 1f       	adc	r27, r27
    1cb2:	66 1f       	adc	r22, r22
    1cb4:	77 1f       	adc	r23, r23
    1cb6:	88 1f       	adc	r24, r24
    1cb8:	91 50       	subi	r25, 0x01	; 1
    1cba:	50 40       	sbci	r21, 0x00	; 0
    1cbc:	a9 f7       	brne	.-22     	; 0x1ca8 <__mulsf3_pse+0x64>
    1cbe:	9e 3f       	cpi	r25, 0xFE	; 254
    1cc0:	51 05       	cpc	r21, r1
    1cc2:	80 f0       	brcs	.+32     	; 0x1ce4 <__mulsf3_pse+0xa0>
    1cc4:	0c 94 bb 0d 	jmp	0x1b76	; 0x1b76 <__fp_inf>
    1cc8:	0c 94 06 0e 	jmp	0x1c0c	; 0x1c0c <__fp_szero>
    1ccc:	5f 3f       	cpi	r21, 0xFF	; 255
    1cce:	e4 f3       	brlt	.-8      	; 0x1cc8 <__mulsf3_pse+0x84>
    1cd0:	98 3e       	cpi	r25, 0xE8	; 232
    1cd2:	d4 f3       	brlt	.-12     	; 0x1cc8 <__mulsf3_pse+0x84>
    1cd4:	86 95       	lsr	r24
    1cd6:	77 95       	ror	r23
    1cd8:	67 95       	ror	r22
    1cda:	b7 95       	ror	r27
    1cdc:	f7 95       	ror	r31
    1cde:	e7 95       	ror	r30
    1ce0:	9f 5f       	subi	r25, 0xFF	; 255
    1ce2:	c1 f7       	brne	.-16     	; 0x1cd4 <__mulsf3_pse+0x90>
    1ce4:	fe 2b       	or	r31, r30
    1ce6:	88 0f       	add	r24, r24
    1ce8:	91 1d       	adc	r25, r1
    1cea:	96 95       	lsr	r25
    1cec:	87 95       	ror	r24
    1cee:	97 f9       	bld	r25, 7
    1cf0:	08 95       	ret

00001cf2 <printf>:
    1cf2:	a0 e0       	ldi	r26, 0x00	; 0
    1cf4:	b0 e0       	ldi	r27, 0x00	; 0
    1cf6:	ef e7       	ldi	r30, 0x7F	; 127
    1cf8:	fe e0       	ldi	r31, 0x0E	; 14
    1cfa:	0c 94 52 11 	jmp	0x22a4	; 0x22a4 <__prologue_saves__+0x20>
    1cfe:	ae 01       	movw	r20, r28
    1d00:	4b 5f       	subi	r20, 0xFB	; 251
    1d02:	5f 4f       	sbci	r21, 0xFF	; 255
    1d04:	fa 01       	movw	r30, r20
    1d06:	61 91       	ld	r22, Z+
    1d08:	71 91       	ld	r23, Z+
    1d0a:	af 01       	movw	r20, r30
    1d0c:	80 91 fe 05 	lds	r24, 0x05FE	; 0x8005fe <__iob+0x2>
    1d10:	90 91 ff 05 	lds	r25, 0x05FF	; 0x8005ff <__iob+0x3>
    1d14:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <vfprintf>
    1d18:	e2 e0       	ldi	r30, 0x02	; 2
    1d1a:	0c 94 6e 11 	jmp	0x22dc	; 0x22dc <__epilogue_restores__+0x20>

00001d1e <sprintf>:
    1d1e:	ae e0       	ldi	r26, 0x0E	; 14
    1d20:	b0 e0       	ldi	r27, 0x00	; 0
    1d22:	e5 e9       	ldi	r30, 0x95	; 149
    1d24:	fe e0       	ldi	r31, 0x0E	; 14
    1d26:	0c 94 50 11 	jmp	0x22a0	; 0x22a0 <__prologue_saves__+0x1c>
    1d2a:	0d 89       	ldd	r16, Y+21	; 0x15
    1d2c:	1e 89       	ldd	r17, Y+22	; 0x16
    1d2e:	86 e0       	ldi	r24, 0x06	; 6
    1d30:	8c 83       	std	Y+4, r24	; 0x04
    1d32:	1a 83       	std	Y+2, r17	; 0x02
    1d34:	09 83       	std	Y+1, r16	; 0x01
    1d36:	8f ef       	ldi	r24, 0xFF	; 255
    1d38:	9f e7       	ldi	r25, 0x7F	; 127
    1d3a:	9e 83       	std	Y+6, r25	; 0x06
    1d3c:	8d 83       	std	Y+5, r24	; 0x05
    1d3e:	ae 01       	movw	r20, r28
    1d40:	47 5e       	subi	r20, 0xE7	; 231
    1d42:	5f 4f       	sbci	r21, 0xFF	; 255
    1d44:	6f 89       	ldd	r22, Y+23	; 0x17
    1d46:	78 8d       	ldd	r23, Y+24	; 0x18
    1d48:	ce 01       	movw	r24, r28
    1d4a:	01 96       	adiw	r24, 0x01	; 1
    1d4c:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <vfprintf>
    1d50:	ef 81       	ldd	r30, Y+7	; 0x07
    1d52:	f8 85       	ldd	r31, Y+8	; 0x08
    1d54:	e0 0f       	add	r30, r16
    1d56:	f1 1f       	adc	r31, r17
    1d58:	10 82       	st	Z, r1
    1d5a:	2e 96       	adiw	r28, 0x0e	; 14
    1d5c:	e4 e0       	ldi	r30, 0x04	; 4
    1d5e:	0c 94 6c 11 	jmp	0x22d8	; 0x22d8 <__epilogue_restores__+0x1c>

00001d62 <vfprintf>:
    1d62:	ab e0       	ldi	r26, 0x0B	; 11
    1d64:	b0 e0       	ldi	r27, 0x00	; 0
    1d66:	e7 eb       	ldi	r30, 0xB7	; 183
    1d68:	fe e0       	ldi	r31, 0x0E	; 14
    1d6a:	0c 94 42 11 	jmp	0x2284	; 0x2284 <__prologue_saves__>
    1d6e:	6c 01       	movw	r12, r24
    1d70:	7b 01       	movw	r14, r22
    1d72:	8a 01       	movw	r16, r20
    1d74:	fc 01       	movw	r30, r24
    1d76:	17 82       	std	Z+7, r1	; 0x07
    1d78:	16 82       	std	Z+6, r1	; 0x06
    1d7a:	83 81       	ldd	r24, Z+3	; 0x03
    1d7c:	81 ff       	sbrs	r24, 1
    1d7e:	cc c1       	rjmp	.+920    	; 0x2118 <vfprintf+0x3b6>
    1d80:	ce 01       	movw	r24, r28
    1d82:	01 96       	adiw	r24, 0x01	; 1
    1d84:	3c 01       	movw	r6, r24
    1d86:	f6 01       	movw	r30, r12
    1d88:	93 81       	ldd	r25, Z+3	; 0x03
    1d8a:	f7 01       	movw	r30, r14
    1d8c:	93 fd       	sbrc	r25, 3
    1d8e:	85 91       	lpm	r24, Z+
    1d90:	93 ff       	sbrs	r25, 3
    1d92:	81 91       	ld	r24, Z+
    1d94:	7f 01       	movw	r14, r30
    1d96:	88 23       	and	r24, r24
    1d98:	09 f4       	brne	.+2      	; 0x1d9c <vfprintf+0x3a>
    1d9a:	ba c1       	rjmp	.+884    	; 0x2110 <vfprintf+0x3ae>
    1d9c:	85 32       	cpi	r24, 0x25	; 37
    1d9e:	39 f4       	brne	.+14     	; 0x1dae <vfprintf+0x4c>
    1da0:	93 fd       	sbrc	r25, 3
    1da2:	85 91       	lpm	r24, Z+
    1da4:	93 ff       	sbrs	r25, 3
    1da6:	81 91       	ld	r24, Z+
    1da8:	7f 01       	movw	r14, r30
    1daa:	85 32       	cpi	r24, 0x25	; 37
    1dac:	29 f4       	brne	.+10     	; 0x1db8 <vfprintf+0x56>
    1dae:	b6 01       	movw	r22, r12
    1db0:	90 e0       	ldi	r25, 0x00	; 0
    1db2:	0e 94 a8 10 	call	0x2150	; 0x2150 <fputc>
    1db6:	e7 cf       	rjmp	.-50     	; 0x1d86 <vfprintf+0x24>
    1db8:	91 2c       	mov	r9, r1
    1dba:	21 2c       	mov	r2, r1
    1dbc:	31 2c       	mov	r3, r1
    1dbe:	ff e1       	ldi	r31, 0x1F	; 31
    1dc0:	f3 15       	cp	r31, r3
    1dc2:	d8 f0       	brcs	.+54     	; 0x1dfa <vfprintf+0x98>
    1dc4:	8b 32       	cpi	r24, 0x2B	; 43
    1dc6:	79 f0       	breq	.+30     	; 0x1de6 <vfprintf+0x84>
    1dc8:	38 f4       	brcc	.+14     	; 0x1dd8 <vfprintf+0x76>
    1dca:	80 32       	cpi	r24, 0x20	; 32
    1dcc:	79 f0       	breq	.+30     	; 0x1dec <vfprintf+0x8a>
    1dce:	83 32       	cpi	r24, 0x23	; 35
    1dd0:	a1 f4       	brne	.+40     	; 0x1dfa <vfprintf+0x98>
    1dd2:	23 2d       	mov	r18, r3
    1dd4:	20 61       	ori	r18, 0x10	; 16
    1dd6:	1d c0       	rjmp	.+58     	; 0x1e12 <vfprintf+0xb0>
    1dd8:	8d 32       	cpi	r24, 0x2D	; 45
    1dda:	61 f0       	breq	.+24     	; 0x1df4 <vfprintf+0x92>
    1ddc:	80 33       	cpi	r24, 0x30	; 48
    1dde:	69 f4       	brne	.+26     	; 0x1dfa <vfprintf+0x98>
    1de0:	23 2d       	mov	r18, r3
    1de2:	21 60       	ori	r18, 0x01	; 1
    1de4:	16 c0       	rjmp	.+44     	; 0x1e12 <vfprintf+0xb0>
    1de6:	83 2d       	mov	r24, r3
    1de8:	82 60       	ori	r24, 0x02	; 2
    1dea:	38 2e       	mov	r3, r24
    1dec:	e3 2d       	mov	r30, r3
    1dee:	e4 60       	ori	r30, 0x04	; 4
    1df0:	3e 2e       	mov	r3, r30
    1df2:	2a c0       	rjmp	.+84     	; 0x1e48 <vfprintf+0xe6>
    1df4:	f3 2d       	mov	r31, r3
    1df6:	f8 60       	ori	r31, 0x08	; 8
    1df8:	1d c0       	rjmp	.+58     	; 0x1e34 <vfprintf+0xd2>
    1dfa:	37 fc       	sbrc	r3, 7
    1dfc:	2d c0       	rjmp	.+90     	; 0x1e58 <vfprintf+0xf6>
    1dfe:	20 ed       	ldi	r18, 0xD0	; 208
    1e00:	28 0f       	add	r18, r24
    1e02:	2a 30       	cpi	r18, 0x0A	; 10
    1e04:	40 f0       	brcs	.+16     	; 0x1e16 <vfprintf+0xb4>
    1e06:	8e 32       	cpi	r24, 0x2E	; 46
    1e08:	b9 f4       	brne	.+46     	; 0x1e38 <vfprintf+0xd6>
    1e0a:	36 fc       	sbrc	r3, 6
    1e0c:	81 c1       	rjmp	.+770    	; 0x2110 <vfprintf+0x3ae>
    1e0e:	23 2d       	mov	r18, r3
    1e10:	20 64       	ori	r18, 0x40	; 64
    1e12:	32 2e       	mov	r3, r18
    1e14:	19 c0       	rjmp	.+50     	; 0x1e48 <vfprintf+0xe6>
    1e16:	36 fe       	sbrs	r3, 6
    1e18:	06 c0       	rjmp	.+12     	; 0x1e26 <vfprintf+0xc4>
    1e1a:	8a e0       	ldi	r24, 0x0A	; 10
    1e1c:	98 9e       	mul	r9, r24
    1e1e:	20 0d       	add	r18, r0
    1e20:	11 24       	eor	r1, r1
    1e22:	92 2e       	mov	r9, r18
    1e24:	11 c0       	rjmp	.+34     	; 0x1e48 <vfprintf+0xe6>
    1e26:	ea e0       	ldi	r30, 0x0A	; 10
    1e28:	2e 9e       	mul	r2, r30
    1e2a:	20 0d       	add	r18, r0
    1e2c:	11 24       	eor	r1, r1
    1e2e:	22 2e       	mov	r2, r18
    1e30:	f3 2d       	mov	r31, r3
    1e32:	f0 62       	ori	r31, 0x20	; 32
    1e34:	3f 2e       	mov	r3, r31
    1e36:	08 c0       	rjmp	.+16     	; 0x1e48 <vfprintf+0xe6>
    1e38:	8c 36       	cpi	r24, 0x6C	; 108
    1e3a:	21 f4       	brne	.+8      	; 0x1e44 <vfprintf+0xe2>
    1e3c:	83 2d       	mov	r24, r3
    1e3e:	80 68       	ori	r24, 0x80	; 128
    1e40:	38 2e       	mov	r3, r24
    1e42:	02 c0       	rjmp	.+4      	; 0x1e48 <vfprintf+0xe6>
    1e44:	88 36       	cpi	r24, 0x68	; 104
    1e46:	41 f4       	brne	.+16     	; 0x1e58 <vfprintf+0xf6>
    1e48:	f7 01       	movw	r30, r14
    1e4a:	93 fd       	sbrc	r25, 3
    1e4c:	85 91       	lpm	r24, Z+
    1e4e:	93 ff       	sbrs	r25, 3
    1e50:	81 91       	ld	r24, Z+
    1e52:	7f 01       	movw	r14, r30
    1e54:	81 11       	cpse	r24, r1
    1e56:	b3 cf       	rjmp	.-154    	; 0x1dbe <vfprintf+0x5c>
    1e58:	98 2f       	mov	r25, r24
    1e5a:	9f 7d       	andi	r25, 0xDF	; 223
    1e5c:	95 54       	subi	r25, 0x45	; 69
    1e5e:	93 30       	cpi	r25, 0x03	; 3
    1e60:	28 f4       	brcc	.+10     	; 0x1e6c <vfprintf+0x10a>
    1e62:	0c 5f       	subi	r16, 0xFC	; 252
    1e64:	1f 4f       	sbci	r17, 0xFF	; 255
    1e66:	9f e3       	ldi	r25, 0x3F	; 63
    1e68:	99 83       	std	Y+1, r25	; 0x01
    1e6a:	0d c0       	rjmp	.+26     	; 0x1e86 <vfprintf+0x124>
    1e6c:	83 36       	cpi	r24, 0x63	; 99
    1e6e:	31 f0       	breq	.+12     	; 0x1e7c <vfprintf+0x11a>
    1e70:	83 37       	cpi	r24, 0x73	; 115
    1e72:	71 f0       	breq	.+28     	; 0x1e90 <vfprintf+0x12e>
    1e74:	83 35       	cpi	r24, 0x53	; 83
    1e76:	09 f0       	breq	.+2      	; 0x1e7a <vfprintf+0x118>
    1e78:	59 c0       	rjmp	.+178    	; 0x1f2c <vfprintf+0x1ca>
    1e7a:	21 c0       	rjmp	.+66     	; 0x1ebe <vfprintf+0x15c>
    1e7c:	f8 01       	movw	r30, r16
    1e7e:	80 81       	ld	r24, Z
    1e80:	89 83       	std	Y+1, r24	; 0x01
    1e82:	0e 5f       	subi	r16, 0xFE	; 254
    1e84:	1f 4f       	sbci	r17, 0xFF	; 255
    1e86:	88 24       	eor	r8, r8
    1e88:	83 94       	inc	r8
    1e8a:	91 2c       	mov	r9, r1
    1e8c:	53 01       	movw	r10, r6
    1e8e:	13 c0       	rjmp	.+38     	; 0x1eb6 <vfprintf+0x154>
    1e90:	28 01       	movw	r4, r16
    1e92:	f2 e0       	ldi	r31, 0x02	; 2
    1e94:	4f 0e       	add	r4, r31
    1e96:	51 1c       	adc	r5, r1
    1e98:	f8 01       	movw	r30, r16
    1e9a:	a0 80       	ld	r10, Z
    1e9c:	b1 80       	ldd	r11, Z+1	; 0x01
    1e9e:	36 fe       	sbrs	r3, 6
    1ea0:	03 c0       	rjmp	.+6      	; 0x1ea8 <vfprintf+0x146>
    1ea2:	69 2d       	mov	r22, r9
    1ea4:	70 e0       	ldi	r23, 0x00	; 0
    1ea6:	02 c0       	rjmp	.+4      	; 0x1eac <vfprintf+0x14a>
    1ea8:	6f ef       	ldi	r22, 0xFF	; 255
    1eaa:	7f ef       	ldi	r23, 0xFF	; 255
    1eac:	c5 01       	movw	r24, r10
    1eae:	0e 94 9d 10 	call	0x213a	; 0x213a <strnlen>
    1eb2:	4c 01       	movw	r8, r24
    1eb4:	82 01       	movw	r16, r4
    1eb6:	f3 2d       	mov	r31, r3
    1eb8:	ff 77       	andi	r31, 0x7F	; 127
    1eba:	3f 2e       	mov	r3, r31
    1ebc:	16 c0       	rjmp	.+44     	; 0x1eea <vfprintf+0x188>
    1ebe:	28 01       	movw	r4, r16
    1ec0:	22 e0       	ldi	r18, 0x02	; 2
    1ec2:	42 0e       	add	r4, r18
    1ec4:	51 1c       	adc	r5, r1
    1ec6:	f8 01       	movw	r30, r16
    1ec8:	a0 80       	ld	r10, Z
    1eca:	b1 80       	ldd	r11, Z+1	; 0x01
    1ecc:	36 fe       	sbrs	r3, 6
    1ece:	03 c0       	rjmp	.+6      	; 0x1ed6 <vfprintf+0x174>
    1ed0:	69 2d       	mov	r22, r9
    1ed2:	70 e0       	ldi	r23, 0x00	; 0
    1ed4:	02 c0       	rjmp	.+4      	; 0x1eda <vfprintf+0x178>
    1ed6:	6f ef       	ldi	r22, 0xFF	; 255
    1ed8:	7f ef       	ldi	r23, 0xFF	; 255
    1eda:	c5 01       	movw	r24, r10
    1edc:	0e 94 92 10 	call	0x2124	; 0x2124 <strnlen_P>
    1ee0:	4c 01       	movw	r8, r24
    1ee2:	f3 2d       	mov	r31, r3
    1ee4:	f0 68       	ori	r31, 0x80	; 128
    1ee6:	3f 2e       	mov	r3, r31
    1ee8:	82 01       	movw	r16, r4
    1eea:	33 fc       	sbrc	r3, 3
    1eec:	1b c0       	rjmp	.+54     	; 0x1f24 <vfprintf+0x1c2>
    1eee:	82 2d       	mov	r24, r2
    1ef0:	90 e0       	ldi	r25, 0x00	; 0
    1ef2:	88 16       	cp	r8, r24
    1ef4:	99 06       	cpc	r9, r25
    1ef6:	b0 f4       	brcc	.+44     	; 0x1f24 <vfprintf+0x1c2>
    1ef8:	b6 01       	movw	r22, r12
    1efa:	80 e2       	ldi	r24, 0x20	; 32
    1efc:	90 e0       	ldi	r25, 0x00	; 0
    1efe:	0e 94 a8 10 	call	0x2150	; 0x2150 <fputc>
    1f02:	2a 94       	dec	r2
    1f04:	f4 cf       	rjmp	.-24     	; 0x1eee <vfprintf+0x18c>
    1f06:	f5 01       	movw	r30, r10
    1f08:	37 fc       	sbrc	r3, 7
    1f0a:	85 91       	lpm	r24, Z+
    1f0c:	37 fe       	sbrs	r3, 7
    1f0e:	81 91       	ld	r24, Z+
    1f10:	5f 01       	movw	r10, r30
    1f12:	b6 01       	movw	r22, r12
    1f14:	90 e0       	ldi	r25, 0x00	; 0
    1f16:	0e 94 a8 10 	call	0x2150	; 0x2150 <fputc>
    1f1a:	21 10       	cpse	r2, r1
    1f1c:	2a 94       	dec	r2
    1f1e:	21 e0       	ldi	r18, 0x01	; 1
    1f20:	82 1a       	sub	r8, r18
    1f22:	91 08       	sbc	r9, r1
    1f24:	81 14       	cp	r8, r1
    1f26:	91 04       	cpc	r9, r1
    1f28:	71 f7       	brne	.-36     	; 0x1f06 <vfprintf+0x1a4>
    1f2a:	e8 c0       	rjmp	.+464    	; 0x20fc <vfprintf+0x39a>
    1f2c:	84 36       	cpi	r24, 0x64	; 100
    1f2e:	11 f0       	breq	.+4      	; 0x1f34 <vfprintf+0x1d2>
    1f30:	89 36       	cpi	r24, 0x69	; 105
    1f32:	41 f5       	brne	.+80     	; 0x1f84 <vfprintf+0x222>
    1f34:	f8 01       	movw	r30, r16
    1f36:	37 fe       	sbrs	r3, 7
    1f38:	07 c0       	rjmp	.+14     	; 0x1f48 <vfprintf+0x1e6>
    1f3a:	60 81       	ld	r22, Z
    1f3c:	71 81       	ldd	r23, Z+1	; 0x01
    1f3e:	82 81       	ldd	r24, Z+2	; 0x02
    1f40:	93 81       	ldd	r25, Z+3	; 0x03
    1f42:	0c 5f       	subi	r16, 0xFC	; 252
    1f44:	1f 4f       	sbci	r17, 0xFF	; 255
    1f46:	08 c0       	rjmp	.+16     	; 0x1f58 <vfprintf+0x1f6>
    1f48:	60 81       	ld	r22, Z
    1f4a:	71 81       	ldd	r23, Z+1	; 0x01
    1f4c:	07 2e       	mov	r0, r23
    1f4e:	00 0c       	add	r0, r0
    1f50:	88 0b       	sbc	r24, r24
    1f52:	99 0b       	sbc	r25, r25
    1f54:	0e 5f       	subi	r16, 0xFE	; 254
    1f56:	1f 4f       	sbci	r17, 0xFF	; 255
    1f58:	f3 2d       	mov	r31, r3
    1f5a:	ff 76       	andi	r31, 0x6F	; 111
    1f5c:	3f 2e       	mov	r3, r31
    1f5e:	97 ff       	sbrs	r25, 7
    1f60:	09 c0       	rjmp	.+18     	; 0x1f74 <vfprintf+0x212>
    1f62:	90 95       	com	r25
    1f64:	80 95       	com	r24
    1f66:	70 95       	com	r23
    1f68:	61 95       	neg	r22
    1f6a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f6c:	8f 4f       	sbci	r24, 0xFF	; 255
    1f6e:	9f 4f       	sbci	r25, 0xFF	; 255
    1f70:	f0 68       	ori	r31, 0x80	; 128
    1f72:	3f 2e       	mov	r3, r31
    1f74:	2a e0       	ldi	r18, 0x0A	; 10
    1f76:	30 e0       	ldi	r19, 0x00	; 0
    1f78:	a3 01       	movw	r20, r6
    1f7a:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__ultoa_invert>
    1f7e:	88 2e       	mov	r8, r24
    1f80:	86 18       	sub	r8, r6
    1f82:	45 c0       	rjmp	.+138    	; 0x200e <vfprintf+0x2ac>
    1f84:	85 37       	cpi	r24, 0x75	; 117
    1f86:	31 f4       	brne	.+12     	; 0x1f94 <vfprintf+0x232>
    1f88:	23 2d       	mov	r18, r3
    1f8a:	2f 7e       	andi	r18, 0xEF	; 239
    1f8c:	b2 2e       	mov	r11, r18
    1f8e:	2a e0       	ldi	r18, 0x0A	; 10
    1f90:	30 e0       	ldi	r19, 0x00	; 0
    1f92:	25 c0       	rjmp	.+74     	; 0x1fde <vfprintf+0x27c>
    1f94:	93 2d       	mov	r25, r3
    1f96:	99 7f       	andi	r25, 0xF9	; 249
    1f98:	b9 2e       	mov	r11, r25
    1f9a:	8f 36       	cpi	r24, 0x6F	; 111
    1f9c:	c1 f0       	breq	.+48     	; 0x1fce <vfprintf+0x26c>
    1f9e:	18 f4       	brcc	.+6      	; 0x1fa6 <vfprintf+0x244>
    1fa0:	88 35       	cpi	r24, 0x58	; 88
    1fa2:	79 f0       	breq	.+30     	; 0x1fc2 <vfprintf+0x260>
    1fa4:	b5 c0       	rjmp	.+362    	; 0x2110 <vfprintf+0x3ae>
    1fa6:	80 37       	cpi	r24, 0x70	; 112
    1fa8:	19 f0       	breq	.+6      	; 0x1fb0 <vfprintf+0x24e>
    1faa:	88 37       	cpi	r24, 0x78	; 120
    1fac:	21 f0       	breq	.+8      	; 0x1fb6 <vfprintf+0x254>
    1fae:	b0 c0       	rjmp	.+352    	; 0x2110 <vfprintf+0x3ae>
    1fb0:	e9 2f       	mov	r30, r25
    1fb2:	e0 61       	ori	r30, 0x10	; 16
    1fb4:	be 2e       	mov	r11, r30
    1fb6:	b4 fe       	sbrs	r11, 4
    1fb8:	0d c0       	rjmp	.+26     	; 0x1fd4 <vfprintf+0x272>
    1fba:	fb 2d       	mov	r31, r11
    1fbc:	f4 60       	ori	r31, 0x04	; 4
    1fbe:	bf 2e       	mov	r11, r31
    1fc0:	09 c0       	rjmp	.+18     	; 0x1fd4 <vfprintf+0x272>
    1fc2:	34 fe       	sbrs	r3, 4
    1fc4:	0a c0       	rjmp	.+20     	; 0x1fda <vfprintf+0x278>
    1fc6:	29 2f       	mov	r18, r25
    1fc8:	26 60       	ori	r18, 0x06	; 6
    1fca:	b2 2e       	mov	r11, r18
    1fcc:	06 c0       	rjmp	.+12     	; 0x1fda <vfprintf+0x278>
    1fce:	28 e0       	ldi	r18, 0x08	; 8
    1fd0:	30 e0       	ldi	r19, 0x00	; 0
    1fd2:	05 c0       	rjmp	.+10     	; 0x1fde <vfprintf+0x27c>
    1fd4:	20 e1       	ldi	r18, 0x10	; 16
    1fd6:	30 e0       	ldi	r19, 0x00	; 0
    1fd8:	02 c0       	rjmp	.+4      	; 0x1fde <vfprintf+0x27c>
    1fda:	20 e1       	ldi	r18, 0x10	; 16
    1fdc:	32 e0       	ldi	r19, 0x02	; 2
    1fde:	f8 01       	movw	r30, r16
    1fe0:	b7 fe       	sbrs	r11, 7
    1fe2:	07 c0       	rjmp	.+14     	; 0x1ff2 <vfprintf+0x290>
    1fe4:	60 81       	ld	r22, Z
    1fe6:	71 81       	ldd	r23, Z+1	; 0x01
    1fe8:	82 81       	ldd	r24, Z+2	; 0x02
    1fea:	93 81       	ldd	r25, Z+3	; 0x03
    1fec:	0c 5f       	subi	r16, 0xFC	; 252
    1fee:	1f 4f       	sbci	r17, 0xFF	; 255
    1ff0:	06 c0       	rjmp	.+12     	; 0x1ffe <vfprintf+0x29c>
    1ff2:	60 81       	ld	r22, Z
    1ff4:	71 81       	ldd	r23, Z+1	; 0x01
    1ff6:	80 e0       	ldi	r24, 0x00	; 0
    1ff8:	90 e0       	ldi	r25, 0x00	; 0
    1ffa:	0e 5f       	subi	r16, 0xFE	; 254
    1ffc:	1f 4f       	sbci	r17, 0xFF	; 255
    1ffe:	a3 01       	movw	r20, r6
    2000:	0e 94 e4 10 	call	0x21c8	; 0x21c8 <__ultoa_invert>
    2004:	88 2e       	mov	r8, r24
    2006:	86 18       	sub	r8, r6
    2008:	fb 2d       	mov	r31, r11
    200a:	ff 77       	andi	r31, 0x7F	; 127
    200c:	3f 2e       	mov	r3, r31
    200e:	36 fe       	sbrs	r3, 6
    2010:	0d c0       	rjmp	.+26     	; 0x202c <vfprintf+0x2ca>
    2012:	23 2d       	mov	r18, r3
    2014:	2e 7f       	andi	r18, 0xFE	; 254
    2016:	a2 2e       	mov	r10, r18
    2018:	89 14       	cp	r8, r9
    201a:	58 f4       	brcc	.+22     	; 0x2032 <vfprintf+0x2d0>
    201c:	34 fe       	sbrs	r3, 4
    201e:	0b c0       	rjmp	.+22     	; 0x2036 <vfprintf+0x2d4>
    2020:	32 fc       	sbrc	r3, 2
    2022:	09 c0       	rjmp	.+18     	; 0x2036 <vfprintf+0x2d4>
    2024:	83 2d       	mov	r24, r3
    2026:	8e 7e       	andi	r24, 0xEE	; 238
    2028:	a8 2e       	mov	r10, r24
    202a:	05 c0       	rjmp	.+10     	; 0x2036 <vfprintf+0x2d4>
    202c:	b8 2c       	mov	r11, r8
    202e:	a3 2c       	mov	r10, r3
    2030:	03 c0       	rjmp	.+6      	; 0x2038 <vfprintf+0x2d6>
    2032:	b8 2c       	mov	r11, r8
    2034:	01 c0       	rjmp	.+2      	; 0x2038 <vfprintf+0x2d6>
    2036:	b9 2c       	mov	r11, r9
    2038:	a4 fe       	sbrs	r10, 4
    203a:	0f c0       	rjmp	.+30     	; 0x205a <vfprintf+0x2f8>
    203c:	fe 01       	movw	r30, r28
    203e:	e8 0d       	add	r30, r8
    2040:	f1 1d       	adc	r31, r1
    2042:	80 81       	ld	r24, Z
    2044:	80 33       	cpi	r24, 0x30	; 48
    2046:	21 f4       	brne	.+8      	; 0x2050 <vfprintf+0x2ee>
    2048:	9a 2d       	mov	r25, r10
    204a:	99 7e       	andi	r25, 0xE9	; 233
    204c:	a9 2e       	mov	r10, r25
    204e:	09 c0       	rjmp	.+18     	; 0x2062 <vfprintf+0x300>
    2050:	a2 fe       	sbrs	r10, 2
    2052:	06 c0       	rjmp	.+12     	; 0x2060 <vfprintf+0x2fe>
    2054:	b3 94       	inc	r11
    2056:	b3 94       	inc	r11
    2058:	04 c0       	rjmp	.+8      	; 0x2062 <vfprintf+0x300>
    205a:	8a 2d       	mov	r24, r10
    205c:	86 78       	andi	r24, 0x86	; 134
    205e:	09 f0       	breq	.+2      	; 0x2062 <vfprintf+0x300>
    2060:	b3 94       	inc	r11
    2062:	a3 fc       	sbrc	r10, 3
    2064:	11 c0       	rjmp	.+34     	; 0x2088 <vfprintf+0x326>
    2066:	a0 fe       	sbrs	r10, 0
    2068:	06 c0       	rjmp	.+12     	; 0x2076 <vfprintf+0x314>
    206a:	b2 14       	cp	r11, r2
    206c:	88 f4       	brcc	.+34     	; 0x2090 <vfprintf+0x32e>
    206e:	28 0c       	add	r2, r8
    2070:	92 2c       	mov	r9, r2
    2072:	9b 18       	sub	r9, r11
    2074:	0e c0       	rjmp	.+28     	; 0x2092 <vfprintf+0x330>
    2076:	b2 14       	cp	r11, r2
    2078:	60 f4       	brcc	.+24     	; 0x2092 <vfprintf+0x330>
    207a:	b6 01       	movw	r22, r12
    207c:	80 e2       	ldi	r24, 0x20	; 32
    207e:	90 e0       	ldi	r25, 0x00	; 0
    2080:	0e 94 a8 10 	call	0x2150	; 0x2150 <fputc>
    2084:	b3 94       	inc	r11
    2086:	f7 cf       	rjmp	.-18     	; 0x2076 <vfprintf+0x314>
    2088:	b2 14       	cp	r11, r2
    208a:	18 f4       	brcc	.+6      	; 0x2092 <vfprintf+0x330>
    208c:	2b 18       	sub	r2, r11
    208e:	02 c0       	rjmp	.+4      	; 0x2094 <vfprintf+0x332>
    2090:	98 2c       	mov	r9, r8
    2092:	21 2c       	mov	r2, r1
    2094:	a4 fe       	sbrs	r10, 4
    2096:	10 c0       	rjmp	.+32     	; 0x20b8 <vfprintf+0x356>
    2098:	b6 01       	movw	r22, r12
    209a:	80 e3       	ldi	r24, 0x30	; 48
    209c:	90 e0       	ldi	r25, 0x00	; 0
    209e:	0e 94 a8 10 	call	0x2150	; 0x2150 <fputc>
    20a2:	a2 fe       	sbrs	r10, 2
    20a4:	17 c0       	rjmp	.+46     	; 0x20d4 <vfprintf+0x372>
    20a6:	a1 fc       	sbrc	r10, 1
    20a8:	03 c0       	rjmp	.+6      	; 0x20b0 <vfprintf+0x34e>
    20aa:	88 e7       	ldi	r24, 0x78	; 120
    20ac:	90 e0       	ldi	r25, 0x00	; 0
    20ae:	02 c0       	rjmp	.+4      	; 0x20b4 <vfprintf+0x352>
    20b0:	88 e5       	ldi	r24, 0x58	; 88
    20b2:	90 e0       	ldi	r25, 0x00	; 0
    20b4:	b6 01       	movw	r22, r12
    20b6:	0c c0       	rjmp	.+24     	; 0x20d0 <vfprintf+0x36e>
    20b8:	8a 2d       	mov	r24, r10
    20ba:	86 78       	andi	r24, 0x86	; 134
    20bc:	59 f0       	breq	.+22     	; 0x20d4 <vfprintf+0x372>
    20be:	a1 fe       	sbrs	r10, 1
    20c0:	02 c0       	rjmp	.+4      	; 0x20c6 <vfprintf+0x364>
    20c2:	8b e2       	ldi	r24, 0x2B	; 43
    20c4:	01 c0       	rjmp	.+2      	; 0x20c8 <vfprintf+0x366>
    20c6:	80 e2       	ldi	r24, 0x20	; 32
    20c8:	a7 fc       	sbrc	r10, 7
    20ca:	8d e2       	ldi	r24, 0x2D	; 45
    20cc:	b6 01       	movw	r22, r12
    20ce:	90 e0       	ldi	r25, 0x00	; 0
    20d0:	0e 94 a8 10 	call	0x2150	; 0x2150 <fputc>
    20d4:	89 14       	cp	r8, r9
    20d6:	38 f4       	brcc	.+14     	; 0x20e6 <vfprintf+0x384>
    20d8:	b6 01       	movw	r22, r12
    20da:	80 e3       	ldi	r24, 0x30	; 48
    20dc:	90 e0       	ldi	r25, 0x00	; 0
    20de:	0e 94 a8 10 	call	0x2150	; 0x2150 <fputc>
    20e2:	9a 94       	dec	r9
    20e4:	f7 cf       	rjmp	.-18     	; 0x20d4 <vfprintf+0x372>
    20e6:	8a 94       	dec	r8
    20e8:	f3 01       	movw	r30, r6
    20ea:	e8 0d       	add	r30, r8
    20ec:	f1 1d       	adc	r31, r1
    20ee:	80 81       	ld	r24, Z
    20f0:	b6 01       	movw	r22, r12
    20f2:	90 e0       	ldi	r25, 0x00	; 0
    20f4:	0e 94 a8 10 	call	0x2150	; 0x2150 <fputc>
    20f8:	81 10       	cpse	r8, r1
    20fa:	f5 cf       	rjmp	.-22     	; 0x20e6 <vfprintf+0x384>
    20fc:	22 20       	and	r2, r2
    20fe:	09 f4       	brne	.+2      	; 0x2102 <vfprintf+0x3a0>
    2100:	42 ce       	rjmp	.-892    	; 0x1d86 <vfprintf+0x24>
    2102:	b6 01       	movw	r22, r12
    2104:	80 e2       	ldi	r24, 0x20	; 32
    2106:	90 e0       	ldi	r25, 0x00	; 0
    2108:	0e 94 a8 10 	call	0x2150	; 0x2150 <fputc>
    210c:	2a 94       	dec	r2
    210e:	f6 cf       	rjmp	.-20     	; 0x20fc <vfprintf+0x39a>
    2110:	f6 01       	movw	r30, r12
    2112:	86 81       	ldd	r24, Z+6	; 0x06
    2114:	97 81       	ldd	r25, Z+7	; 0x07
    2116:	02 c0       	rjmp	.+4      	; 0x211c <vfprintf+0x3ba>
    2118:	8f ef       	ldi	r24, 0xFF	; 255
    211a:	9f ef       	ldi	r25, 0xFF	; 255
    211c:	2b 96       	adiw	r28, 0x0b	; 11
    211e:	e2 e1       	ldi	r30, 0x12	; 18
    2120:	0c 94 5e 11 	jmp	0x22bc	; 0x22bc <__epilogue_restores__>

00002124 <strnlen_P>:
    2124:	fc 01       	movw	r30, r24
    2126:	05 90       	lpm	r0, Z+
    2128:	61 50       	subi	r22, 0x01	; 1
    212a:	70 40       	sbci	r23, 0x00	; 0
    212c:	01 10       	cpse	r0, r1
    212e:	d8 f7       	brcc	.-10     	; 0x2126 <strnlen_P+0x2>
    2130:	80 95       	com	r24
    2132:	90 95       	com	r25
    2134:	8e 0f       	add	r24, r30
    2136:	9f 1f       	adc	r25, r31
    2138:	08 95       	ret

0000213a <strnlen>:
    213a:	fc 01       	movw	r30, r24
    213c:	61 50       	subi	r22, 0x01	; 1
    213e:	70 40       	sbci	r23, 0x00	; 0
    2140:	01 90       	ld	r0, Z+
    2142:	01 10       	cpse	r0, r1
    2144:	d8 f7       	brcc	.-10     	; 0x213c <strnlen+0x2>
    2146:	80 95       	com	r24
    2148:	90 95       	com	r25
    214a:	8e 0f       	add	r24, r30
    214c:	9f 1f       	adc	r25, r31
    214e:	08 95       	ret

00002150 <fputc>:
    2150:	0f 93       	push	r16
    2152:	1f 93       	push	r17
    2154:	cf 93       	push	r28
    2156:	df 93       	push	r29
    2158:	fb 01       	movw	r30, r22
    215a:	23 81       	ldd	r18, Z+3	; 0x03
    215c:	21 fd       	sbrc	r18, 1
    215e:	03 c0       	rjmp	.+6      	; 0x2166 <fputc+0x16>
    2160:	8f ef       	ldi	r24, 0xFF	; 255
    2162:	9f ef       	ldi	r25, 0xFF	; 255
    2164:	2c c0       	rjmp	.+88     	; 0x21be <fputc+0x6e>
    2166:	22 ff       	sbrs	r18, 2
    2168:	16 c0       	rjmp	.+44     	; 0x2196 <fputc+0x46>
    216a:	46 81       	ldd	r20, Z+6	; 0x06
    216c:	57 81       	ldd	r21, Z+7	; 0x07
    216e:	24 81       	ldd	r18, Z+4	; 0x04
    2170:	35 81       	ldd	r19, Z+5	; 0x05
    2172:	42 17       	cp	r20, r18
    2174:	53 07       	cpc	r21, r19
    2176:	44 f4       	brge	.+16     	; 0x2188 <fputc+0x38>
    2178:	a0 81       	ld	r26, Z
    217a:	b1 81       	ldd	r27, Z+1	; 0x01
    217c:	9d 01       	movw	r18, r26
    217e:	2f 5f       	subi	r18, 0xFF	; 255
    2180:	3f 4f       	sbci	r19, 0xFF	; 255
    2182:	31 83       	std	Z+1, r19	; 0x01
    2184:	20 83       	st	Z, r18
    2186:	8c 93       	st	X, r24
    2188:	26 81       	ldd	r18, Z+6	; 0x06
    218a:	37 81       	ldd	r19, Z+7	; 0x07
    218c:	2f 5f       	subi	r18, 0xFF	; 255
    218e:	3f 4f       	sbci	r19, 0xFF	; 255
    2190:	37 83       	std	Z+7, r19	; 0x07
    2192:	26 83       	std	Z+6, r18	; 0x06
    2194:	14 c0       	rjmp	.+40     	; 0x21be <fputc+0x6e>
    2196:	8b 01       	movw	r16, r22
    2198:	ec 01       	movw	r28, r24
    219a:	fb 01       	movw	r30, r22
    219c:	00 84       	ldd	r0, Z+8	; 0x08
    219e:	f1 85       	ldd	r31, Z+9	; 0x09
    21a0:	e0 2d       	mov	r30, r0
    21a2:	09 95       	icall
    21a4:	89 2b       	or	r24, r25
    21a6:	e1 f6       	brne	.-72     	; 0x2160 <fputc+0x10>
    21a8:	d8 01       	movw	r26, r16
    21aa:	16 96       	adiw	r26, 0x06	; 6
    21ac:	8d 91       	ld	r24, X+
    21ae:	9c 91       	ld	r25, X
    21b0:	17 97       	sbiw	r26, 0x07	; 7
    21b2:	01 96       	adiw	r24, 0x01	; 1
    21b4:	17 96       	adiw	r26, 0x07	; 7
    21b6:	9c 93       	st	X, r25
    21b8:	8e 93       	st	-X, r24
    21ba:	16 97       	sbiw	r26, 0x06	; 6
    21bc:	ce 01       	movw	r24, r28
    21be:	df 91       	pop	r29
    21c0:	cf 91       	pop	r28
    21c2:	1f 91       	pop	r17
    21c4:	0f 91       	pop	r16
    21c6:	08 95       	ret

000021c8 <__ultoa_invert>:
    21c8:	fa 01       	movw	r30, r20
    21ca:	aa 27       	eor	r26, r26
    21cc:	28 30       	cpi	r18, 0x08	; 8
    21ce:	51 f1       	breq	.+84     	; 0x2224 <__ultoa_invert+0x5c>
    21d0:	20 31       	cpi	r18, 0x10	; 16
    21d2:	81 f1       	breq	.+96     	; 0x2234 <__ultoa_invert+0x6c>
    21d4:	e8 94       	clt
    21d6:	6f 93       	push	r22
    21d8:	6e 7f       	andi	r22, 0xFE	; 254
    21da:	6e 5f       	subi	r22, 0xFE	; 254
    21dc:	7f 4f       	sbci	r23, 0xFF	; 255
    21de:	8f 4f       	sbci	r24, 0xFF	; 255
    21e0:	9f 4f       	sbci	r25, 0xFF	; 255
    21e2:	af 4f       	sbci	r26, 0xFF	; 255
    21e4:	b1 e0       	ldi	r27, 0x01	; 1
    21e6:	3e d0       	rcall	.+124    	; 0x2264 <__ultoa_invert+0x9c>
    21e8:	b4 e0       	ldi	r27, 0x04	; 4
    21ea:	3c d0       	rcall	.+120    	; 0x2264 <__ultoa_invert+0x9c>
    21ec:	67 0f       	add	r22, r23
    21ee:	78 1f       	adc	r23, r24
    21f0:	89 1f       	adc	r24, r25
    21f2:	9a 1f       	adc	r25, r26
    21f4:	a1 1d       	adc	r26, r1
    21f6:	68 0f       	add	r22, r24
    21f8:	79 1f       	adc	r23, r25
    21fa:	8a 1f       	adc	r24, r26
    21fc:	91 1d       	adc	r25, r1
    21fe:	a1 1d       	adc	r26, r1
    2200:	6a 0f       	add	r22, r26
    2202:	71 1d       	adc	r23, r1
    2204:	81 1d       	adc	r24, r1
    2206:	91 1d       	adc	r25, r1
    2208:	a1 1d       	adc	r26, r1
    220a:	20 d0       	rcall	.+64     	; 0x224c <__ultoa_invert+0x84>
    220c:	09 f4       	brne	.+2      	; 0x2210 <__ultoa_invert+0x48>
    220e:	68 94       	set
    2210:	3f 91       	pop	r19
    2212:	2a e0       	ldi	r18, 0x0A	; 10
    2214:	26 9f       	mul	r18, r22
    2216:	11 24       	eor	r1, r1
    2218:	30 19       	sub	r19, r0
    221a:	30 5d       	subi	r19, 0xD0	; 208
    221c:	31 93       	st	Z+, r19
    221e:	de f6       	brtc	.-74     	; 0x21d6 <__ultoa_invert+0xe>
    2220:	cf 01       	movw	r24, r30
    2222:	08 95       	ret
    2224:	46 2f       	mov	r20, r22
    2226:	47 70       	andi	r20, 0x07	; 7
    2228:	40 5d       	subi	r20, 0xD0	; 208
    222a:	41 93       	st	Z+, r20
    222c:	b3 e0       	ldi	r27, 0x03	; 3
    222e:	0f d0       	rcall	.+30     	; 0x224e <__ultoa_invert+0x86>
    2230:	c9 f7       	brne	.-14     	; 0x2224 <__ultoa_invert+0x5c>
    2232:	f6 cf       	rjmp	.-20     	; 0x2220 <__ultoa_invert+0x58>
    2234:	46 2f       	mov	r20, r22
    2236:	4f 70       	andi	r20, 0x0F	; 15
    2238:	40 5d       	subi	r20, 0xD0	; 208
    223a:	4a 33       	cpi	r20, 0x3A	; 58
    223c:	18 f0       	brcs	.+6      	; 0x2244 <__ultoa_invert+0x7c>
    223e:	49 5d       	subi	r20, 0xD9	; 217
    2240:	31 fd       	sbrc	r19, 1
    2242:	40 52       	subi	r20, 0x20	; 32
    2244:	41 93       	st	Z+, r20
    2246:	02 d0       	rcall	.+4      	; 0x224c <__ultoa_invert+0x84>
    2248:	a9 f7       	brne	.-22     	; 0x2234 <__ultoa_invert+0x6c>
    224a:	ea cf       	rjmp	.-44     	; 0x2220 <__ultoa_invert+0x58>
    224c:	b4 e0       	ldi	r27, 0x04	; 4
    224e:	a6 95       	lsr	r26
    2250:	97 95       	ror	r25
    2252:	87 95       	ror	r24
    2254:	77 95       	ror	r23
    2256:	67 95       	ror	r22
    2258:	ba 95       	dec	r27
    225a:	c9 f7       	brne	.-14     	; 0x224e <__ultoa_invert+0x86>
    225c:	00 97       	sbiw	r24, 0x00	; 0
    225e:	61 05       	cpc	r22, r1
    2260:	71 05       	cpc	r23, r1
    2262:	08 95       	ret
    2264:	9b 01       	movw	r18, r22
    2266:	ac 01       	movw	r20, r24
    2268:	0a 2e       	mov	r0, r26
    226a:	06 94       	lsr	r0
    226c:	57 95       	ror	r21
    226e:	47 95       	ror	r20
    2270:	37 95       	ror	r19
    2272:	27 95       	ror	r18
    2274:	ba 95       	dec	r27
    2276:	c9 f7       	brne	.-14     	; 0x226a <__ultoa_invert+0xa2>
    2278:	62 0f       	add	r22, r18
    227a:	73 1f       	adc	r23, r19
    227c:	84 1f       	adc	r24, r20
    227e:	95 1f       	adc	r25, r21
    2280:	a0 1d       	adc	r26, r0
    2282:	08 95       	ret

00002284 <__prologue_saves__>:
    2284:	2f 92       	push	r2
    2286:	3f 92       	push	r3
    2288:	4f 92       	push	r4
    228a:	5f 92       	push	r5
    228c:	6f 92       	push	r6
    228e:	7f 92       	push	r7
    2290:	8f 92       	push	r8
    2292:	9f 92       	push	r9
    2294:	af 92       	push	r10
    2296:	bf 92       	push	r11
    2298:	cf 92       	push	r12
    229a:	df 92       	push	r13
    229c:	ef 92       	push	r14
    229e:	ff 92       	push	r15
    22a0:	0f 93       	push	r16
    22a2:	1f 93       	push	r17
    22a4:	cf 93       	push	r28
    22a6:	df 93       	push	r29
    22a8:	cd b7       	in	r28, 0x3d	; 61
    22aa:	de b7       	in	r29, 0x3e	; 62
    22ac:	ca 1b       	sub	r28, r26
    22ae:	db 0b       	sbc	r29, r27
    22b0:	0f b6       	in	r0, 0x3f	; 63
    22b2:	f8 94       	cli
    22b4:	de bf       	out	0x3e, r29	; 62
    22b6:	0f be       	out	0x3f, r0	; 63
    22b8:	cd bf       	out	0x3d, r28	; 61
    22ba:	09 94       	ijmp

000022bc <__epilogue_restores__>:
    22bc:	2a 88       	ldd	r2, Y+18	; 0x12
    22be:	39 88       	ldd	r3, Y+17	; 0x11
    22c0:	48 88       	ldd	r4, Y+16	; 0x10
    22c2:	5f 84       	ldd	r5, Y+15	; 0x0f
    22c4:	6e 84       	ldd	r6, Y+14	; 0x0e
    22c6:	7d 84       	ldd	r7, Y+13	; 0x0d
    22c8:	8c 84       	ldd	r8, Y+12	; 0x0c
    22ca:	9b 84       	ldd	r9, Y+11	; 0x0b
    22cc:	aa 84       	ldd	r10, Y+10	; 0x0a
    22ce:	b9 84       	ldd	r11, Y+9	; 0x09
    22d0:	c8 84       	ldd	r12, Y+8	; 0x08
    22d2:	df 80       	ldd	r13, Y+7	; 0x07
    22d4:	ee 80       	ldd	r14, Y+6	; 0x06
    22d6:	fd 80       	ldd	r15, Y+5	; 0x05
    22d8:	0c 81       	ldd	r16, Y+4	; 0x04
    22da:	1b 81       	ldd	r17, Y+3	; 0x03
    22dc:	aa 81       	ldd	r26, Y+2	; 0x02
    22de:	b9 81       	ldd	r27, Y+1	; 0x01
    22e0:	ce 0f       	add	r28, r30
    22e2:	d1 1d       	adc	r29, r1
    22e4:	0f b6       	in	r0, 0x3f	; 63
    22e6:	f8 94       	cli
    22e8:	de bf       	out	0x3e, r29	; 62
    22ea:	0f be       	out	0x3f, r0	; 63
    22ec:	cd bf       	out	0x3d, r28	; 61
    22ee:	ed 01       	movw	r28, r26
    22f0:	08 95       	ret

000022f2 <_exit>:
    22f2:	f8 94       	cli

000022f4 <__stop_program>:
    22f4:	ff cf       	rjmp	.-2      	; 0x22f4 <__stop_program>
